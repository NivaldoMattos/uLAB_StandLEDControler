

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May 23 00:17:59 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 1.41
    39                           ; Generated 25/01/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F25K22 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000784                     __pidataCOMRAM:
    75                           	opt stack 0
    76                           
    77                           ;initializer for AppTimer30us@count1000ms
    78  000784  0009               	dw	9
    79                           
    80                           ;initializer for AppTimer30us@count100ms
    81  000786  0009               	dw	9
    82                           
    83                           ;initializer for AppTimer30us@count10ms
    84  000788  0009               	dw	9
    85                           
    86                           ;initializer for AppTimer30us@count1ms
    87  00078A  0004               	dw	4
    88                           
    89                           ;initializer for _ftest
    90  00078C  01                 	db	1
    91  0000                     _ANSELC	set	3898
    92  0000                     _ANSELB	set	3897
    93  0000                     _ANSELA	set	3896
    94  0000                     _RCREG1	set	4014
    95  0000                     _RC1STAbits	set	4011
    96  0000                     _TXREG1	set	4013
    97  0000                     _SPBRG1	set	4015
    98  0000                     _SPBRGH1	set	4016
    99  0000                     _TX1STA	set	4012
   100  0000                     _RC1STA	set	4011
   101  0000                     _BAUD1CON	set	4024
   102  0000                     _OSCTUNE	set	3995
   103  0000                     _OSCCON2	set	4050
   104  0000                     _OSCCON	set	4051
   105  0000                     _PIR1bits	set	3998
   106  0000                     _PIE1bits	set	3997
   107  0000                     _IPR1bits	set	3999
   108  0000                     _RCONbits	set	4048
   109  0000                     _INTCON2bits	set	4081
   110  0000                     _TRISC	set	3988
   111  0000                     _LATC	set	3979
   112  0000                     _WPUB	set	3937
   113  0000                     _TRISB	set	3987
   114  0000                     _LATB	set	3978
   115  0000                     _TRISA	set	3986
   116  0000                     _LATA	set	3977
   117  0000                     _T0CONbits	set	4053
   118  0000                     _INTCONbits	set	4082
   119  0000                     _TMR0L	set	4054
   120  0000                     _TMR0H	set	4055
   121  0000                     _T0CON	set	4053
   122  0000                     _LATB1	set	31825
   123  0000                     _PLLRDY	set	32407
   124                           
   125                           ; #config settings
   126  0000                     
   127                           	psect	cinit
   128  0005F6                     __pcinit:
   129                           	opt stack 0
   130  0005F6                     start_initialization:
   131                           	opt stack 0
   132  0005F6                     __initialization:
   133                           	opt stack 0
   134                           
   135                           ; Initialize objects allocated to COMRAM (9 bytes)
   136                           ; load TBLPTR registers with __pidataCOMRAM
   137  0005F6  0E84               	movlw	low __pidataCOMRAM
   138  0005F8  6EF6               	movwf	tblptrl,c
   139  0005FA  0E07               	movlw	high __pidataCOMRAM
   140  0005FC  6EF7               	movwf	tblptrh,c
   141  0005FE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   142  000600  6EF8               	movwf	tblptru,c
   143  000602  EE00  F043         	lfsr	0,__pdataCOMRAM
   144  000606  EE10 F009          	lfsr	1,9
   145  00060A                     copy_data0:
   146  00060A  0009               	tblrd		*+
   147  00060C  CFF5 FFEE          	movff	tablat,postinc0
   148  000610  50E5               	movf	postdec1,w,c
   149  000612  50E1               	movf	fsr1l,w,c
   150  000614  E1FA               	bnz	copy_data0
   151                           
   152                           ; Clear objects allocated to BANK1 (128 bytes)
   153  000616  EE01  F000         	lfsr	0,__pbssBANK1
   154  00061A  0E80               	movlw	128
   155  00061C                     clear_0:
   156  00061C  6AEE               	clrf	postinc0,c
   157  00061E  06E8               	decf	wreg,f,c
   158  000620  E1FD               	bnz	clear_0
   159                           
   160                           ; Clear objects allocated to BANK0 (128 bytes)
   161  000622  EE00  F060         	lfsr	0,__pbssBANK0
   162  000626  0E80               	movlw	128
   163  000628                     clear_1:
   164  000628  6AEE               	clrf	postinc0,c
   165  00062A  06E8               	decf	wreg,f,c
   166  00062C  E1FD               	bnz	clear_1
   167                           
   168                           ; Clear objects allocated to COMRAM (43 bytes)
   169  00062E  EE00  F001         	lfsr	0,__pbssCOMRAM
   170  000632  0E2B               	movlw	43
   171  000634                     clear_2:
   172  000634  6AEE               	clrf	postinc0,c
   173  000636  06E8               	decf	wreg,f,c
   174  000638  E1FD               	bnz	clear_2
   175  00063A                     end_of_initialization:
   176                           	opt stack 0
   177  00063A                     __end_of__initialization:
   178                           	opt stack 0
   179  00063A  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   180  00063C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   181  00063E  0100               	movlb	0
   182  000640  EFA3  F003         	goto	_main	;jump to C main() function
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           postinc0	equ	0xFEE
   188                           wreg	equ	0xFE8
   189                           postdec1	equ	0xFE5
   190                           fsr1l	equ	0xFE1
   191                           
   192                           	psect	bssCOMRAM
   193  000001                     __pbssCOMRAM:
   194                           	opt stack 0
   195  000001                     	ds	7
   196  000008                     _type:
   197                           	opt stack 0
   198  000008                     	ds	2
   199  00000A                     _channel:
   200                           	opt stack 0
   201  00000A                     	ds	2
   202  00000C                     _timer0ReloadVal16bit:
   203                           	opt stack 0
   204  00000C                     	ds	2
   205  00000E                     _capturando:
   206                           	opt stack 0
   207  00000E                     	ds	1
   208  00000F                     _len_package:
   209                           	opt stack 0
   210  00000F                     	ds	1
   211  000010                     _IdxFrame:
   212                           	opt stack 0
   213  000010                     	ds	1
   214  000011                     _Idx2:
   215                           	opt stack 0
   216  000011                     	ds	1
   217  000012                     _Idx1:
   218                           	opt stack 0
   219  000012                     	ds	1
   220  000013                     _Idx0:
   221                           	opt stack 0
   222  000013                     	ds	1
   223  000014                     _send_ch7:
   224                           	opt stack 0
   225  000014                     	ds	1
   226  000015                     _send_ch6:
   227                           	opt stack 0
   228  000015                     	ds	1
   229  000016                     _send_ch5:
   230                           	opt stack 0
   231  000016                     	ds	1
   232  000017                     _send_ch4:
   233                           	opt stack 0
   234  000017                     	ds	1
   235  000018                     _send_ch3:
   236                           	opt stack 0
   237  000018                     	ds	1
   238  000019                     _send_ch2:
   239                           	opt stack 0
   240  000019                     	ds	1
   241  00001A                     _send_ch1:
   242                           	opt stack 0
   243  00001A                     	ds	1
   244  00001B                     _send_ch0:
   245                           	opt stack 0
   246  00001B                     	ds	1
   247  00001C                     _ch7_len:
   248                           	opt stack 0
   249  00001C                     	ds	1
   250  00001D                     _ch6_len:
   251                           	opt stack 0
   252  00001D                     	ds	1
   253  00001E                     _ch5_len:
   254                           	opt stack 0
   255  00001E                     	ds	1
   256  00001F                     _ch4_len:
   257                           	opt stack 0
   258  00001F                     	ds	1
   259  000020                     _ch3_len:
   260                           	opt stack 0
   261  000020                     	ds	1
   262  000021                     _ch2_len:
   263                           	opt stack 0
   264  000021                     	ds	1
   265  000022                     _ch1_len:
   266                           	opt stack 0
   267  000022                     	ds	1
   268  000023                     _ch0_len:
   269                           	opt stack 0
   270  000023                     	ds	1
   271  000024                     _ShootLedsCh7:
   272                           	opt stack 0
   273  000024                     	ds	1
   274  000025                     _ShootLedsCh6:
   275                           	opt stack 0
   276  000025                     	ds	1
   277  000026                     _ShootLedsCh5:
   278                           	opt stack 0
   279  000026                     	ds	1
   280  000027                     _ShootLedsCh4:
   281                           	opt stack 0
   282  000027                     	ds	1
   283  000028                     _ShootLedsCh3:
   284                           	opt stack 0
   285  000028                     	ds	1
   286  000029                     _ShootLedsCh2:
   287                           	opt stack 0
   288  000029                     	ds	1
   289  00002A                     _ShootLedsCh1:
   290                           	opt stack 0
   291  00002A                     	ds	1
   292  00002B                     _ShootLedsCh0:
   293                           	opt stack 0
   294  00002B                     	ds	1
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	dataCOMRAM
   305  000043                     __pdataCOMRAM:
   306                           	opt stack 0
   307  000043                     AppTimer30us@count1000ms:
   308                           	opt stack 0
   309  000043                     	ds	2
   310  000045                     AppTimer30us@count100ms:
   311                           	opt stack 0
   312  000045                     	ds	2
   313  000047                     AppTimer30us@count10ms:
   314                           	opt stack 0
   315  000047                     	ds	2
   316  000049                     AppTimer30us@count1ms:
   317                           	opt stack 0
   318  000049                     	ds	2
   319  00004B                     _ftest:
   320                           	opt stack 0
   321  00004B                     	ds	1
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	bssBANK0
   332  000060                     __pbssBANK0:
   333                           	opt stack 0
   334  000060                     _CH2:
   335                           	opt stack 0
   336  000060                     	ds	64
   337  0000A0                     	ds	64
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	bssBANK1
   348  000100                     __pbssBANK1:
   349                           	opt stack 0
   350  000100                     _Buffer:
   351                           	opt stack 0
   352  000100                     	ds	128
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	cstackBANK0
   363  000000                     __pcstackBANK0:
   364                           	opt stack 0
   365  000000                     tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374                           ; 1 bytes @ 0x0
   375                           
   376                           	psect	cstackCOMRAM
   377  00002C                     __pcstackCOMRAM:
   378                           	opt stack 0
   379  00002C                     ??_AppINT_USART1_RX:
   380  00002C                     SendBuffCh2@idx_color2:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x0
   384  00002C                     	ds	1
   385  00002D                     SendBuffCh2@idx_color3:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x1
   389  00002D                     	ds	1
   390  00002E                     SendBuffCh2@idx_color1:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x2
   394  00002E                     	ds	1
   395  00002F                     
   396                           ; 1 bytes @ 0x3
   397  00002F                     	ds	4
   398  000033                     AppINT_USART1_RX@rxData:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x7
   402  000033                     	ds	1
   403  000034                     EUSART1_Receive_ISR@byteReceived:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x8
   407  000034                     	ds	1
   408  000035                     ??_INTERRUPT_InterruptManager:
   409                           
   410                           ; 1 bytes @ 0x9
   411  000035                     	ds	14
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           postdec1	equ	0xFE5
   419                           fsr1l	equ	0xFE1
   420                           
   421 ;;
   422 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   423 ;;
   424 ;; *************** function _main *****************
   425 ;; Defined at:
   426 ;;		line 5 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   440 ;;      Params:         0       0       0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels required when called:   10
   446 ;; This function calls:
   447 ;;		_AppInitialize
   448 ;;		_AppProcess
   449 ;;		_SYSTEM_Initialize
   450 ;; This function is called by:
   451 ;;		Startup code after reset
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text0
   456  000746                     __ptext0:
   457                           	opt stack 0
   458  000746                     _main:
   459                           	opt stack 21
   460                           
   461                           ;main.c: 7: SYSTEM_Initialize();
   462                           
   463                           ;incstack = 0
   464  000746  EC8D  F003         	call	_SYSTEM_Initialize	;wreg free
   465                           
   466                           ;main.c: 8: AppInitialize();
   467  00074A  ECC7  F003         	call	_AppInitialize	;wreg free
   468                           
   469                           ;main.c: 10: (INTCONbits.GIE = 1);
   470  00074E  8EF2               	bsf	intcon,7,c	;volatile
   471                           
   472                           ;main.c: 12: (INTCONbits.PEIE = 1);
   473  000750  8CF2               	bsf	intcon,6,c	;volatile
   474                           
   475                           ;main.c: 14: AppProcess();
   476  000752  ECD1  F003         	call	_AppProcess	;wreg free
   477  000756                     l181:
   478  000756  D7FF               	goto	l181
   479  000758                     __end_of_main:
   480                           	opt stack 0
   481                           tblptru	equ	0xFF8
   482                           tblptrh	equ	0xFF7
   483                           tblptrl	equ	0xFF6
   484                           tablat	equ	0xFF5
   485                           intcon	equ	0xFF2
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491 ;; *************** function _SYSTEM_Initialize *****************
   492 ;; Defined at:
   493 ;;		line 66 in file "mcc_generated_files/mcc.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   507 ;;      Params:         0       0       0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; Hardware stack levels required when called:    9
   514 ;; This function calls:
   515 ;;		_EUSART1_Initialize
   516 ;;		_INTERRUPT_Initialize
   517 ;;		_OSCILLATOR_Initialize
   518 ;;		_PIN_MANAGER_Initialize
   519 ;;		_TMR0_Initialize
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text1
   526  00071A                     __ptext1:
   527                           	opt stack 0
   528  00071A                     _SYSTEM_Initialize:
   529                           	opt stack 21
   530                           
   531                           ;mcc.c: 68: OSCILLATOR_Initialize();
   532                           
   533                           ;incstack = 0
   534  00071A  ECAC  F003         	call	_OSCILLATOR_Initialize	;wreg free
   535                           
   536                           ;mcc.c: 69: PIN_MANAGER_Initialize();
   537  00071E  EC22  F003         	call	_PIN_MANAGER_Initialize	;wreg free
   538                           
   539                           ;mcc.c: 70: INTERRUPT_Initialize();
   540  000722  ECBD  F003         	call	_INTERRUPT_Initialize	;wreg free
   541                           
   542                           ;mcc.c: 71: TMR0_Initialize();
   543  000726  EC98  F003         	call	_TMR0_Initialize	;wreg free
   544                           
   545                           ;mcc.c: 72: EUSART1_Initialize();
   546  00072A  EC73  F003         	call	_EUSART1_Initialize	;wreg free
   547  00072E  0012               	return		;funcret
   548  000730                     __end_of_SYSTEM_Initialize:
   549                           	opt stack 0
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           intcon	equ	0xFF2
   555                           postinc0	equ	0xFEE
   556                           wreg	equ	0xFE8
   557                           postdec1	equ	0xFE5
   558                           fsr1l	equ	0xFE1
   559                           
   560 ;; *************** function _TMR0_Initialize *****************
   561 ;; Defined at:
   562 ;;		line 18 in file "mcc_generated_files/tmr0.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   576 ;;      Params:         0       0       0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    8
   583 ;; This function calls:
   584 ;;		_TMR0_StartTimer
   585 ;; This function is called by:
   586 ;;		_SYSTEM_Initialize
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text2
   591  000730                     __ptext2:
   592                           	opt stack 0
   593  000730                     _TMR0_Initialize:
   594                           	opt stack 21
   595                           
   596                           ;tmr0.c: 23: T0CON = 0b11000000;
   597                           
   598                           ;incstack = 0
   599  000730  0EC0               	movlw	192
   600  000732  6ED5               	movwf	4053,c	;volatile
   601                           
   602                           ;tmr0.c: 30: TMR0H = 1;
   603  000734  0E01               	movlw	1
   604  000736  6ED7               	movwf	4055,c	;volatile
   605                           
   606                           ;tmr0.c: 31: TMR0L = 19;
   607  000738  0E13               	movlw	19
   608  00073A  6ED6               	movwf	4054,c	;volatile
   609                           
   610                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
   611  00073C  94F2               	bcf	intcon,2,c	;volatile
   612                           
   613                           ;tmr0.c: 41: INTCONbits.TMR0IE = 1;
   614  00073E  8AF2               	bsf	intcon,5,c	;volatile
   615                           
   616                           ;tmr0.c: 43: TMR0_StartTimer();
   617  000740  ECCD  F003         	call	_TMR0_StartTimer	;wreg free
   618  000744  0012               	return		;funcret
   619  000746                     __end_of_TMR0_Initialize:
   620                           	opt stack 0
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           intcon	equ	0xFF2
   626                           postinc0	equ	0xFEE
   627                           wreg	equ	0xFE8
   628                           postdec1	equ	0xFE5
   629                           fsr1l	equ	0xFE1
   630                           
   631 ;; *************** function _TMR0_StartTimer *****************
   632 ;; Defined at:
   633 ;;		line 48 in file "mcc_generated_files/tmr0.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		None
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   647 ;;      Params:         0       0       0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    7
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_TMR0_Initialize
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text3
   662  00079A                     __ptext3:
   663                           	opt stack 0
   664  00079A                     _TMR0_StartTimer:
   665                           	opt stack 21
   666                           
   667                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
   668                           
   669                           ;incstack = 0
   670  00079A  8ED5               	bsf	4053,7,c	;volatile
   671  00079C  0012               	return		;funcret
   672  00079E                     __end_of_TMR0_StartTimer:
   673                           	opt stack 0
   674                           tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           intcon	equ	0xFF2
   679                           postinc0	equ	0xFEE
   680                           wreg	equ	0xFE8
   681                           postdec1	equ	0xFE5
   682                           fsr1l	equ	0xFE1
   683                           
   684 ;; *************** function _PIN_MANAGER_Initialize *****************
   685 ;; Defined at:
   686 ;;		line 4 in file "mcc_generated_files/pin_manager.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   700 ;;      Params:         0       0       0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    7
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_SYSTEM_Initialize
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text4
   715  000644                     __ptext4:
   716                           	opt stack 0
   717  000644                     _PIN_MANAGER_Initialize:
   718                           	opt stack 22
   719                           
   720                           ;pin_manager.c: 5: LATA = 0x00;
   721                           
   722                           ;incstack = 0
   723  000644  0E00               	movlw	0
   724  000646  6E89               	movwf	3977,c	;volatile
   725                           
   726                           ;pin_manager.c: 6: TRISA = 0b00001011;
   727  000648  0E0B               	movlw	11
   728  00064A  6E92               	movwf	3986,c	;volatile
   729                           
   730                           ;pin_manager.c: 7: ANSELA = 0b00000000;
   731  00064C  0E00               	movlw	0
   732  00064E  010F               	movlb	15	; () banked
   733  000650  6F38               	movwf	56,b	;volatile
   734                           
   735                           ;pin_manager.c: 9: LATB = 0b00000000;
   736  000652  0E00               	movlw	0
   737  000654  6E8A               	movwf	3978,c	;volatile
   738                           
   739                           ;pin_manager.c: 10: TRISB = 0b00000000;
   740  000656  0E00               	movlw	0
   741  000658  6E93               	movwf	3987,c	;volatile
   742                           
   743                           ;pin_manager.c: 11: ANSELB = 0b00000000;
   744  00065A  0E00               	movlw	0
   745  00065C  010F               	movlb	15	; () banked
   746  00065E  6F39               	movwf	57,b	;volatile
   747                           
   748                           ;pin_manager.c: 12: WPUB = 0b00000000;
   749  000660  0E00               	movlw	0
   750  000662  6E61               	movwf	3937,c	;volatile
   751                           
   752                           ;pin_manager.c: 14: LATC = 0b00000000;
   753  000664  0E00               	movlw	0
   754  000666  6E8B               	movwf	3979,c	;volatile
   755                           
   756                           ;pin_manager.c: 15: TRISC = 0b10000010;
   757  000668  0E82               	movlw	130
   758  00066A  6E94               	movwf	3988,c	;volatile
   759                           
   760                           ;pin_manager.c: 16: ANSELC = 0b00000000;
   761  00066C  0E00               	movlw	0
   762  00066E  010F               	movlb	15	; () banked
   763  000670  6F3A               	movwf	58,b	;volatile
   764                           
   765                           ; BSR set to: 15
   766                           ;pin_manager.c: 18: INTCON2bits.nRBPU = 0x01;
   767  000672  8EF1               	bsf	intcon2,7,c	;volatile
   768                           
   769                           ; BSR set to: 15
   770  000674  0012               	return		;funcret
   771  000676                     __end_of_PIN_MANAGER_Initialize:
   772                           	opt stack 0
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           intcon	equ	0xFF2
   778                           intcon2	equ	0xFF1
   779                           postinc0	equ	0xFEE
   780                           wreg	equ	0xFE8
   781                           postdec1	equ	0xFE5
   782                           fsr1l	equ	0xFE1
   783                           
   784 ;; *************** function _OSCILLATOR_Initialize *****************
   785 ;; Defined at:
   786 ;;		line 76 in file "mcc_generated_files/mcc.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   800 ;;      Params:         0       0       0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0
   803 ;;      Totals:         0       0       0       0       0       0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    7
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_SYSTEM_Initialize
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text5
   815  000758                     __ptext5:
   816                           	opt stack 0
   817  000758                     _OSCILLATOR_Initialize:
   818                           	opt stack 22
   819                           
   820                           ;mcc.c: 79: OSCCON = 0x70;
   821                           
   822                           ; BSR set to: 15
   823                           ;incstack = 0
   824  000758  0E70               	movlw	112
   825  00075A  6ED3               	movwf	4051,c	;volatile
   826                           
   827                           ;mcc.c: 85: OSCCON2 = 0x04;
   828  00075C  0E04               	movlw	4
   829  00075E  6ED2               	movwf	4050,c	;volatile
   830                           
   831                           ;mcc.c: 87: OSCTUNE = 0x40;
   832  000760  0E40               	movlw	64
   833  000762  6E9B               	movwf	3995,c	;volatile
   834  000764                     l123:
   835  000764  BED2               	btfsc	4050,7,c	;volatile
   836  000766  0012               	return	
   837  000768  D7FD               	goto	l123
   838  00076A                     __end_of_OSCILLATOR_Initialize:
   839                           	opt stack 0
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           intcon	equ	0xFF2
   845                           intcon2	equ	0xFF1
   846                           postinc0	equ	0xFEE
   847                           wreg	equ	0xFE8
   848                           postdec1	equ	0xFE5
   849                           fsr1l	equ	0xFE1
   850                           
   851 ;; *************** function _INTERRUPT_Initialize *****************
   852 ;; Defined at:
   853 ;;		line 5 in file "mcc_generated_files/interrupt_manager.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		None
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   867 ;;      Params:         0       0       0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    7
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_SYSTEM_Initialize
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text6
   882  00077A                     __ptext6:
   883                           	opt stack 0
   884  00077A                     _INTERRUPT_Initialize:
   885                           	opt stack 22
   886                           
   887                           ;interrupt_manager.c: 7: RCONbits.IPEN = 0;
   888                           
   889                           ;incstack = 0
   890  00077A  9ED0               	bcf	4048,7,c	;volatile
   891                           
   892                           ;interrupt_manager.c: 10: INTCON2bits.TMR0IP = 0;
   893  00077C  94F1               	bcf	intcon2,2,c	;volatile
   894                           
   895                           ;interrupt_manager.c: 12: IPR1bits.RC1IP = 0;
   896  00077E  9A9F               	bcf	3999,5,c	;volatile
   897                           
   898                           ;interrupt_manager.c: 14: IPR1bits.TX1IP = 0;
   899  000780  989F               	bcf	3999,4,c	;volatile
   900  000782  0012               	return		;funcret
   901  000784                     __end_of_INTERRUPT_Initialize:
   902                           	opt stack 0
   903                           tblptru	equ	0xFF8
   904                           tblptrh	equ	0xFF7
   905                           tblptrl	equ	0xFF6
   906                           tablat	equ	0xFF5
   907                           intcon	equ	0xFF2
   908                           intcon2	equ	0xFF1
   909                           postinc0	equ	0xFEE
   910                           wreg	equ	0xFE8
   911                           postdec1	equ	0xFE5
   912                           fsr1l	equ	0xFE1
   913                           
   914 ;; *************** function _EUSART1_Initialize *****************
   915 ;; Defined at:
   916 ;;		line 15 in file "mcc_generated_files/eusart1.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   930 ;;      Params:         0       0       0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    7
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_SYSTEM_Initialize
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text7
   945  0006E6                     __ptext7:
   946                           	opt stack 0
   947  0006E6                     _EUSART1_Initialize:
   948                           	opt stack 22
   949                           
   950                           ;eusart1.c: 17: PIE1bits.RC1IE = 0;
   951                           
   952                           ;incstack = 0
   953  0006E6  9A9D               	bcf	3997,5,c	;volatile
   954                           
   955                           ;eusart1.c: 18: PIE1bits.TX1IE = 0;
   956  0006E8  989D               	bcf	3997,4,c	;volatile
   957                           
   958                           ;eusart1.c: 27: BAUD1CON = 0x48;
   959  0006EA  0E48               	movlw	72
   960  0006EC  6EB8               	movwf	4024,c	;volatile
   961                           
   962                           ;eusart1.c: 38: RC1STA = 0b10010000;
   963  0006EE  0E90               	movlw	144
   964  0006F0  6EAB               	movwf	4011,c	;volatile
   965                           
   966                           ;eusart1.c: 48: TX1STA = 0b00100110;
   967  0006F2  0E26               	movlw	38
   968  0006F4  6EAC               	movwf	4012,c	;volatile
   969                           
   970                           ;eusart1.c: 67: else{
   971                           ;eusart1.c: 68: SPBRGH1 = 0;
   972                           
   973                           ;eusart1.c: 66: }
   974                           
   975                           ;eusart1.c: 65: SPBRG1=(int)(((64000000/115200)/4)-1)&0x00ff;
   976                           
   977                           ;eusart1.c: 64: SPBRGH1 = 1;
   978                           
   979                           ;eusart1.c: 63: if( ((64000000/115200)/4)-1 > 255 ){
   980  0006F6  0E00               	movlw	0
   981  0006F8  6EB0               	movwf	4016,c	;volatile
   982                           
   983                           ;eusart1.c: 69: SPBRG1=(int)(((64000000/115200)/4)-1)&0x00ff;
   984  0006FA  0E89               	movlw	137
   985  0006FC  6EAF               	movwf	4015,c	;volatile
   986                           
   987                           ;eusart1.c: 70: }
   988                           ;eusart1.c: 72: PIE1bits.RC1IE = 1;
   989  0006FE  8A9D               	bsf	3997,5,c	;volatile
   990  000700  0012               	return		;funcret
   991  000702                     __end_of_EUSART1_Initialize:
   992                           	opt stack 0
   993                           tblptru	equ	0xFF8
   994                           tblptrh	equ	0xFF7
   995                           tblptrl	equ	0xFF6
   996                           tablat	equ	0xFF5
   997                           intcon	equ	0xFF2
   998                           intcon2	equ	0xFF1
   999                           postinc0	equ	0xFEE
  1000                           wreg	equ	0xFE8
  1001                           postdec1	equ	0xFE5
  1002                           fsr1l	equ	0xFE1
  1003                           
  1004 ;; *************** function _AppProcess *****************
  1005 ;; Defined at:
  1006 ;;		line 101 in file "mcc_generated_files/app.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  2  178[None  ] int 
  1013 ;; Registers used:
  1014 ;;		None
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1020 ;;      Params:         0       0       0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0
  1023 ;;      Totals:         0       0       0       0       0       0       0
  1024 ;;Total ram usage:        0 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    7
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text8
  1035  0007A2                     __ptext8:
  1036                           	opt stack 0
  1037  0007A2                     _AppProcess:
  1038                           	opt stack 23
  1039  0007A2                     l272:
  1040  0007A2  D7FF               	goto	l272
  1041  0007A4                     __end_of_AppProcess:
  1042                           	opt stack 0
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           intcon	equ	0xFF2
  1048                           intcon2	equ	0xFF1
  1049                           postinc0	equ	0xFEE
  1050                           wreg	equ	0xFE8
  1051                           postdec1	equ	0xFE5
  1052                           fsr1l	equ	0xFE1
  1053                           
  1054 ;; *************** function _AppInitialize *****************
  1055 ;; Defined at:
  1056 ;;		line 87 in file "mcc_generated_files/app.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2  174[None  ] int 
  1063 ;; Registers used:
  1064 ;;		None
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1070 ;;      Params:         0       0       0       0       0       0       0
  1071 ;;      Locals:         0       0       0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0
  1073 ;;      Totals:         0       0       0       0       0       0       0
  1074 ;;Total ram usage:        0 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    7
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text9
  1085  00078E                     __ptext9:
  1086                           	opt stack 0
  1087  00078E                     _AppInitialize:
  1088                           	opt stack 23
  1089                           
  1090                           ;app.c: 90: INTCONbits.INT0IE = 1;
  1091                           
  1092                           ;incstack = 0
  1093  00078E  88F2               	bsf	intcon,4,c	;volatile
  1094                           
  1095                           ;app.c: 92: INTCON2bits.INTEDG0 = 1;
  1096  000790  8CF1               	bsf	intcon2,6,c	;volatile
  1097  000792  0012               	return		;funcret
  1098  000794                     __end_of_AppInitialize:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           intcon	equ	0xFF2
  1105                           intcon2	equ	0xFF1
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           
  1111 ;; *************** function _INTERRUPT_InterruptManager *****************
  1112 ;; Defined at:
  1113 ;;		line 18 in file "mcc_generated_files/interrupt_manager.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1127 ;;      Params:         0       0       0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0       0       0
  1129 ;;      Temps:         14       0       0       0       0       0       0
  1130 ;;      Totals:        14       0       0       0       0       0       0
  1131 ;;Total ram usage:       14 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    6
  1134 ;; This function calls:
  1135 ;;		_EUSART1_Receive_ISR
  1136 ;;		_EUSART1_Transmit_ISR
  1137 ;;		_TMR0_ISR
  1138 ;; This function is called by:
  1139 ;;		Interrupt level 2
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	intcode
  1144  000008                     __pintcode:
  1145                           	opt stack 0
  1146  000008                     _INTERRUPT_InterruptManager:
  1147                           	opt stack 21
  1148                           
  1149                           ;incstack = 0
  1150  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1151  00000A  CFFA F035          	movff	pclath,??_INTERRUPT_InterruptManager
  1152  00000E  CFFB F036          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1153  000012  CFE9 F037          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1154  000016  CFEA F038          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1155  00001A  CFE1 F039          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1156  00001E  CFE2 F03A          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1157  000022  CFD9 F03B          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1158  000026  CFDA F03C          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1159  00002A  CFF3 F03D          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1160  00002E  CFF4 F03E          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1161  000032  CFF6 F03F          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1162  000036  CFF7 F040          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1163  00003A  CFF8 F041          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1164  00003E  CFF5 F042          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1165                           
  1166                           ;interrupt_manager.c: 20: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  1167  000042  BAF2               	btfsc	intcon,5,c	;volatile
  1168  000044  A4F2               	btfss	intcon,2,c	;volatile
  1169  000046  D003               	goto	i2l91
  1170                           
  1171                           ;interrupt_manager.c: 21: TMR0_ISR();
  1172  000048  ECB5  F003         	call	_TMR0_ISR	;wreg free
  1173                           
  1174                           ;interrupt_manager.c: 22: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  1175  00004C  D010               	goto	i2l92
  1176  00004E                     i2l91:
  1177  00004E  BA9D               	btfsc	3997,5,c	;volatile
  1178  000050  AA9E               	btfss	3998,5,c	;volatile
  1179  000052  D003               	goto	i2l93
  1180                           
  1181                           ;interrupt_manager.c: 23: EUSART1_Receive_ISR();
  1182  000054  EC81  F003         	call	_EUSART1_Receive_ISR	;wreg free
  1183                           
  1184                           ;interrupt_manager.c: 24: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  1185  000058  D00A               	goto	i2l92
  1186  00005A                     i2l93:
  1187  00005A  B89D               	btfsc	3997,4,c	;volatile
  1188  00005C  A89E               	btfss	3998,4,c	;volatile
  1189  00005E  D003               	goto	i2l95
  1190                           
  1191                           ;interrupt_manager.c: 25: EUSART1_Transmit_ISR();
  1192  000060  ECCF  F003         	call	_EUSART1_Transmit_ISR	;wreg free
  1193                           
  1194                           ;interrupt_manager.c: 26: } else if(INTCONbits.INT0IE && INTCONbits.INT0IF){
  1195  000064  D004               	goto	i2l92
  1196  000066                     i2l95:
  1197  000066  B8F2               	btfsc	intcon,4,c	;volatile
  1198  000068  A2F2               	btfss	intcon,1,c	;volatile
  1199  00006A  D001               	goto	i2l92
  1200                           
  1201                           ;interrupt_manager.c: 28: INTCONbits.INT0IF = 0;
  1202  00006C  92F2               	bcf	intcon,1,c	;volatile
  1203  00006E                     i2l92:
  1204                           
  1205                           ;interrupt_manager.c: 32: }
  1206                           ;interrupt_manager.c: 34: INTCON2bits.TMR0IP = 1;
  1207  00006E  84F1               	bsf	intcon2,2,c	;volatile
  1208  000070  C042  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1209  000074  C041  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1210  000078  C040  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1211  00007C  C03F  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1212  000080  C03E  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1213  000084  C03D  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1214  000088  C03C  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1215  00008C  C03B  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1216  000090  C03A  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1217  000094  C039  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1218  000098  C038  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1219  00009C  C037  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1220  0000A0  C036  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1221  0000A4  C035  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1222  0000A8  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1223  0000AA  0011               	retfie		f
  1224  0000AC                     __end_of_INTERRUPT_InterruptManager:
  1225                           	opt stack 0
  1226                           pclatu	equ	0xFFB
  1227                           pclath	equ	0xFFA
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           prodh	equ	0xFF4
  1233                           prodl	equ	0xFF3
  1234                           intcon	equ	0xFF2
  1235                           intcon2	equ	0xFF1
  1236                           postinc0	equ	0xFEE
  1237                           fsr0h	equ	0xFEA
  1238                           fsr0l	equ	0xFE9
  1239                           wreg	equ	0xFE8
  1240                           postdec1	equ	0xFE5
  1241                           fsr1h	equ	0xFE2
  1242                           fsr1l	equ	0xFE1
  1243                           fsr2h	equ	0xFDA
  1244                           fsr2l	equ	0xFD9
  1245                           
  1246 ;; *************** function _TMR0_ISR *****************
  1247 ;; Defined at:
  1248 ;;		line 90 in file "mcc_generated_files/tmr0.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1262 ;;      Params:         0       0       0       0       0       0       0
  1263 ;;      Locals:         0       0       0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0
  1265 ;;      Totals:         0       0       0       0       0       0       0
  1266 ;;Total ram usage:        0 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; Hardware stack levels required when called:    5
  1269 ;; This function calls:
  1270 ;;		_TMR0_CallBack
  1271 ;; This function is called by:
  1272 ;;		_INTERRUPT_InterruptManager
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text11
  1277  00076A                     __ptext11:
  1278                           	opt stack 0
  1279  00076A                     _TMR0_ISR:
  1280                           	opt stack 21
  1281                           
  1282                           ;tmr0.c: 92: INTCONbits.TMR0IF = 0;
  1283                           
  1284                           ;incstack = 0
  1285  00076A  94F2               	bcf	intcon,2,c	;volatile
  1286                           
  1287                           ;tmr0.c: 94: TMR0H = 1;
  1288  00076C  0E01               	movlw	1
  1289  00076E  6ED7               	movwf	4055,c	;volatile
  1290                           
  1291                           ;tmr0.c: 95: TMR0L = 19;
  1292  000770  0E13               	movlw	19
  1293  000772  6ED6               	movwf	4054,c	;volatile
  1294                           
  1295                           ;tmr0.c: 103: TMR0_CallBack();
  1296  000774  ECCA  F003         	call	_TMR0_CallBack	;wreg free
  1297  000778  0012               	return		;funcret
  1298  00077A                     __end_of_TMR0_ISR:
  1299                           	opt stack 0
  1300                           pclatu	equ	0xFFB
  1301                           pclath	equ	0xFFA
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           prodh	equ	0xFF4
  1307                           prodl	equ	0xFF3
  1308                           intcon	equ	0xFF2
  1309                           intcon2	equ	0xFF1
  1310                           postinc0	equ	0xFEE
  1311                           fsr0h	equ	0xFEA
  1312                           fsr0l	equ	0xFE9
  1313                           wreg	equ	0xFE8
  1314                           postdec1	equ	0xFE5
  1315                           fsr1h	equ	0xFE2
  1316                           fsr1l	equ	0xFE1
  1317                           fsr2h	equ	0xFDA
  1318                           fsr2l	equ	0xFD9
  1319                           
  1320 ;; *************** function _TMR0_CallBack *****************
  1321 ;; Defined at:
  1322 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1336 ;;      Params:         0       0       0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0
  1339 ;;      Totals:         0       0       0       0       0       0       0
  1340 ;;Total ram usage:        0 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    4
  1343 ;; This function calls:
  1344 ;;		_AppTimer30us
  1345 ;; This function is called by:
  1346 ;;		_TMR0_ISR
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text12
  1351  000794                     __ptext12:
  1352                           	opt stack 0
  1353  000794                     _TMR0_CallBack:
  1354                           	opt stack 21
  1355                           
  1356                           ;tmr0.c: 112: AppTimer30us();
  1357                           
  1358                           ;incstack = 0
  1359  000794  ECBC  F002         	call	_AppTimer30us	;wreg free
  1360  000798  0012               	return		;funcret
  1361  00079A                     __end_of_TMR0_CallBack:
  1362                           	opt stack 0
  1363                           pclatu	equ	0xFFB
  1364                           pclath	equ	0xFFA
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           prodh	equ	0xFF4
  1370                           prodl	equ	0xFF3
  1371                           intcon	equ	0xFF2
  1372                           intcon2	equ	0xFF1
  1373                           postinc0	equ	0xFEE
  1374                           fsr0h	equ	0xFEA
  1375                           fsr0l	equ	0xFE9
  1376                           wreg	equ	0xFE8
  1377                           postdec1	equ	0xFE5
  1378                           fsr1h	equ	0xFE2
  1379                           fsr1l	equ	0xFE1
  1380                           fsr2h	equ	0xFDA
  1381                           fsr2l	equ	0xFD9
  1382                           
  1383 ;; *************** function _AppTimer30us *****************
  1384 ;; Defined at:
  1385 ;;		line 451 in file "mcc_generated_files/app.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  2   16[None  ] int 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1399 ;;      Params:         0       0       0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    3
  1406 ;; This function calls:
  1407 ;;		_AppTimer1ms
  1408 ;; This function is called by:
  1409 ;;		_TMR0_CallBack
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text13
  1414  000578                     __ptext13:
  1415                           	opt stack 0
  1416  000578                     _AppTimer30us:
  1417                           	opt stack 21
  1418                           
  1419                           ;app.c: 452: static int count1ms = 4;
  1420                           ;app.c: 453: static int count10ms = 9;
  1421                           ;app.c: 454: static int count100ms = 9;
  1422                           ;app.c: 455: static int count1000ms = 9;
  1423                           ;app.c: 458: if (count1ms > 0) count1ms--;
  1424                           
  1425                           ;incstack = 0
  1426  000578  BE4A               	btfsc	AppTimer30us@count1ms+1,7,c
  1427  00057A  D009               	goto	i2l1497
  1428  00057C  504A               	movf	AppTimer30us@count1ms+1,w,c
  1429  00057E  E103               	bnz	i2u80_40
  1430  000580  0449               	decf	AppTimer30us@count1ms,w,c
  1431  000582  A0D8               	btfss	status,0,c
  1432  000584  D004               	goto	i2l1497
  1433  000586                     i2u80_40:
  1434  000586  0649               	decf	AppTimer30us@count1ms,f,c
  1435  000588  A0D8               	btfss	status,0,c
  1436  00058A  064A               	decf	AppTimer30us@count1ms+1,f,c
  1437  00058C  0012               	return	
  1438  00058E                     i2l1497:
  1439                           
  1440                           ;app.c: 459: else {
  1441                           ;app.c: 460: count1ms = 33;
  1442  00058E  0E00               	movlw	0
  1443  000590  6E4A               	movwf	AppTimer30us@count1ms+1,c
  1444  000592  0E21               	movlw	33
  1445  000594  6E49               	movwf	AppTimer30us@count1ms,c
  1446                           
  1447                           ;app.c: 461: AppTimer1ms();
  1448  000596  EC3B  F003         	call	_AppTimer1ms	;wreg free
  1449                           
  1450                           ;app.c: 462: if (count10ms > 0)count10ms--;
  1451  00059A  BE48               	btfsc	AppTimer30us@count10ms+1,7,c
  1452  00059C  D009               	goto	i2l1505
  1453  00059E  5048               	movf	AppTimer30us@count10ms+1,w,c
  1454  0005A0  E103               	bnz	i2u81_40
  1455  0005A2  0447               	decf	AppTimer30us@count10ms,w,c
  1456  0005A4  A0D8               	btfss	status,0,c
  1457  0005A6  D004               	goto	i2l1505
  1458  0005A8                     i2u81_40:
  1459  0005A8  0647               	decf	AppTimer30us@count10ms,f,c
  1460  0005AA  A0D8               	btfss	status,0,c
  1461  0005AC  0648               	decf	AppTimer30us@count10ms+1,f,c
  1462  0005AE  0012               	return	
  1463  0005B0                     i2l1505:
  1464                           
  1465                           ;app.c: 463: else {
  1466                           ;app.c: 464: count10ms = 9;
  1467  0005B0  0E00               	movlw	0
  1468  0005B2  6E48               	movwf	AppTimer30us@count10ms+1,c
  1469  0005B4  0E09               	movlw	9
  1470  0005B6  6E47               	movwf	AppTimer30us@count10ms,c
  1471                           
  1472                           ;app.c: 466: if (count100ms > 0)count100ms--;
  1473  0005B8  BE46               	btfsc	AppTimer30us@count100ms+1,7,c
  1474  0005BA  D009               	goto	i2l1511
  1475  0005BC  5046               	movf	AppTimer30us@count100ms+1,w,c
  1476  0005BE  E103               	bnz	i2u82_40
  1477  0005C0  0445               	decf	AppTimer30us@count100ms,w,c
  1478  0005C2  A0D8               	btfss	status,0,c
  1479  0005C4  D004               	goto	i2l1511
  1480  0005C6                     i2u82_40:
  1481  0005C6  0645               	decf	AppTimer30us@count100ms,f,c
  1482  0005C8  A0D8               	btfss	status,0,c
  1483  0005CA  0646               	decf	AppTimer30us@count100ms+1,f,c
  1484  0005CC  0012               	return	
  1485  0005CE                     i2l1511:
  1486                           
  1487                           ;app.c: 467: else {
  1488                           ;app.c: 468: count100ms = 9;
  1489  0005CE  0E00               	movlw	0
  1490  0005D0  6E46               	movwf	AppTimer30us@count100ms+1,c
  1491  0005D2  0E09               	movlw	9
  1492  0005D4  6E45               	movwf	AppTimer30us@count100ms,c
  1493                           
  1494                           ;app.c: 470: if (count1000ms > 0)count1000ms--;
  1495  0005D6  BE44               	btfsc	AppTimer30us@count1000ms+1,7,c
  1496  0005D8  D009               	goto	i2l1517
  1497  0005DA  5044               	movf	AppTimer30us@count1000ms+1,w,c
  1498  0005DC  E103               	bnz	i2u83_40
  1499  0005DE  0443               	decf	AppTimer30us@count1000ms,w,c
  1500  0005E0  A0D8               	btfss	status,0,c
  1501  0005E2  D004               	goto	i2l1517
  1502  0005E4                     i2u83_40:
  1503  0005E4  0643               	decf	AppTimer30us@count1000ms,f,c
  1504  0005E6  A0D8               	btfss	status,0,c
  1505  0005E8  0644               	decf	AppTimer30us@count1000ms+1,f,c
  1506  0005EA  0012               	return	
  1507  0005EC                     i2l1517:
  1508                           
  1509                           ;app.c: 471: else {
  1510                           ;app.c: 472: count1000ms = 9;
  1511  0005EC  0E00               	movlw	0
  1512  0005EE  6E44               	movwf	AppTimer30us@count1000ms+1,c
  1513  0005F0  0E09               	movlw	9
  1514  0005F2  6E43               	movwf	AppTimer30us@count1000ms,c
  1515  0005F4  0012               	return	
  1516  0005F6                     __end_of_AppTimer30us:
  1517                           	opt stack 0
  1518                           pclatu	equ	0xFFB
  1519                           pclath	equ	0xFFA
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           prodh	equ	0xFF4
  1525                           prodl	equ	0xFF3
  1526                           intcon	equ	0xFF2
  1527                           intcon2	equ	0xFF1
  1528                           postinc0	equ	0xFEE
  1529                           fsr0h	equ	0xFEA
  1530                           fsr0l	equ	0xFE9
  1531                           wreg	equ	0xFE8
  1532                           postdec1	equ	0xFE5
  1533                           fsr1h	equ	0xFE2
  1534                           fsr1l	equ	0xFE1
  1535                           fsr2h	equ	0xFDA
  1536                           fsr2l	equ	0xFD9
  1537                           status	equ	0xFD8
  1538                           
  1539 ;; *************** function _AppTimer1ms *****************
  1540 ;; Defined at:
  1541 ;;		line 436 in file "mcc_generated_files/app.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1555 ;;      Params:         0       0       0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0
  1558 ;;      Totals:         0       0       0       0       0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    2
  1562 ;; This function calls:
  1563 ;;		_SendBuffCh2
  1564 ;; This function is called by:
  1565 ;;		_AppTimer30us
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text14
  1570  000676                     __ptext14:
  1571                           	opt stack 0
  1572  000676                     _AppTimer1ms:
  1573                           	opt stack 21
  1574                           
  1575                           ;app.c: 437: if(ShootLedsCh2){
  1576                           
  1577                           ;incstack = 0
  1578  000676  5029               	movf	_ShootLedsCh2,w,c
  1579  000678  B4D8               	btfsc	status,2,c
  1580  00067A  0012               	return	
  1581                           
  1582                           ;app.c: 438: Idx0=0;
  1583  00067C  0E00               	movlw	0
  1584  00067E  6E13               	movwf	_Idx0,c
  1585                           
  1586                           ;app.c: 439: while(Idx0 < ch2_len){
  1587  000680  D00A               	goto	i2l1489
  1588  000682                     i2l1485:
  1589                           
  1590                           ;app.c: 440: SendBuffCh2(Idx0, Idx0+1, Idx0+2);
  1591  000682  2813               	incf	_Idx0,w,c
  1592  000684  6E2C               	movwf	SendBuffCh2@idx_color2,c
  1593  000686  5013               	movf	_Idx0,w,c
  1594  000688  0F02               	addlw	2
  1595  00068A  6E2D               	movwf	SendBuffCh2@idx_color3,c
  1596  00068C  5013               	movf	_Idx0,w,c
  1597  00068E  EC58  F000         	call	_SendBuffCh2
  1598                           
  1599                           ;app.c: 441: Idx0+=3;
  1600  000692  0E03               	movlw	3
  1601  000694  2613               	addwf	_Idx0,f,c
  1602  000696                     i2l1489:
  1603  000696  5021               	movf	_ch2_len,w,c
  1604  000698  5C13               	subwf	_Idx0,w,c
  1605  00069A  A0D8               	btfss	status,0,c
  1606  00069C  D7F2               	goto	i2l1485
  1607                           
  1608                           ;app.c: 442: }
  1609                           ;app.c: 443: ShootLedsCh2 = 0;
  1610  00069E  0E00               	movlw	0
  1611  0006A0  6E29               	movwf	_ShootLedsCh2,c
  1612  0006A2  0012               	return	
  1613  0006A4                     __end_of_AppTimer1ms:
  1614                           	opt stack 0
  1615                           pclatu	equ	0xFFB
  1616                           pclath	equ	0xFFA
  1617                           tblptru	equ	0xFF8
  1618                           tblptrh	equ	0xFF7
  1619                           tblptrl	equ	0xFF6
  1620                           tablat	equ	0xFF5
  1621                           prodh	equ	0xFF4
  1622                           prodl	equ	0xFF3
  1623                           intcon	equ	0xFF2
  1624                           intcon2	equ	0xFF1
  1625                           postinc0	equ	0xFEE
  1626                           fsr0h	equ	0xFEA
  1627                           fsr0l	equ	0xFE9
  1628                           wreg	equ	0xFE8
  1629                           postdec1	equ	0xFE5
  1630                           fsr1h	equ	0xFE2
  1631                           fsr1l	equ	0xFE1
  1632                           fsr2h	equ	0xFDA
  1633                           fsr2l	equ	0xFD9
  1634                           status	equ	0xFD8
  1635                           
  1636 ;; *************** function _SendBuffCh2 *****************
  1637 ;; Defined at:
  1638 ;;		line 187 in file "mcc_generated_files/app.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  idx_color1      1    wreg     unsigned char 
  1641 ;;  idx_color2      1    0[COMRAM] unsigned char 
  1642 ;;  idx_color3      1    1[COMRAM] unsigned char 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  idx_color1      1    2[COMRAM] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1654 ;;      Params:         2       0       0       0       0       0       0
  1655 ;;      Locals:         1       0       0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0
  1657 ;;      Totals:         3       0       0       0       0       0       0
  1658 ;;Total ram usage:        3 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    1
  1661 ;; This function calls:
  1662 ;;		_um_0
  1663 ;;		_zero_0
  1664 ;; This function is called by:
  1665 ;;		_AppTimer1ms
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text15
  1670  0000B0                     __ptext15:
  1671                           	opt stack 0
  1672  0000B0                     _SendBuffCh2:
  1673                           	opt stack 21
  1674                           
  1675                           ;incstack = 0
  1676                           ;SendBuffCh2@idx_color1 stored from wreg
  1677  0000B0  6E2E               	movwf	SendBuffCh2@idx_color1,c
  1678                           
  1679                           ;app.c: 189: if( (CH2[idx_color1] & 128) > 0) um_0();else zero_0();
  1680  0000B2  502E               	movf	SendBuffCh2@idx_color1,w,c
  1681  0000B4  0D01               	mullw	1
  1682  0000B6  0E60               	movlw	low _CH2
  1683  0000B8  24F3               	addwf	prodl,w,c
  1684  0000BA  6ED9               	movwf	fsr2l,c
  1685  0000BC  0E00               	movlw	high _CH2
  1686  0000BE  20F4               	addwfc	prodh,w,c
  1687  0000C0  6EDA               	movwf	fsr2h,c
  1688  0000C2  0100               	movlb	0	; () banked
  1689  0000C4  AEDF               	btfss	indf2,7,c
  1690  0000C6  D003               	goto	i2l1341
  1691                           
  1692                           ; BSR set to: 0
  1693  0000C8  EC52  F003         	call	_um_0	;wreg free
  1694  0000CC  D002               	goto	i2l1343
  1695  0000CE                     i2l1341:
  1696  0000CE  EC64  F003         	call	_zero_0	;wreg free
  1697  0000D2                     i2l1343:
  1698                           
  1699                           ;app.c: 190: if( (CH2[idx_color1] & 64) > 0) um_0();else zero_0();
  1700  0000D2  502E               	movf	SendBuffCh2@idx_color1,w,c
  1701  0000D4  0D01               	mullw	1
  1702  0000D6  0E60               	movlw	low _CH2
  1703  0000D8  24F3               	addwf	prodl,w,c
  1704  0000DA  6ED9               	movwf	fsr2l,c
  1705  0000DC  0E00               	movlw	high _CH2
  1706  0000DE  20F4               	addwfc	prodh,w,c
  1707  0000E0  6EDA               	movwf	fsr2h,c
  1708  0000E2  0100               	movlb	0	; () banked
  1709  0000E4  ACDF               	btfss	indf2,6,c
  1710  0000E6  D003               	goto	i2l1347
  1711                           
  1712                           ; BSR set to: 0
  1713  0000E8  EC52  F003         	call	_um_0	;wreg free
  1714  0000EC  D002               	goto	i2l1349
  1715  0000EE                     i2l1347:
  1716  0000EE  EC64  F003         	call	_zero_0	;wreg free
  1717  0000F2                     i2l1349:
  1718                           
  1719                           ;app.c: 191: if( (CH2[idx_color1] & 32) > 0) um_0();else zero_0();
  1720  0000F2  502E               	movf	SendBuffCh2@idx_color1,w,c
  1721  0000F4  0D01               	mullw	1
  1722  0000F6  0E60               	movlw	low _CH2
  1723  0000F8  24F3               	addwf	prodl,w,c
  1724  0000FA  6ED9               	movwf	fsr2l,c
  1725  0000FC  0E00               	movlw	high _CH2
  1726  0000FE  20F4               	addwfc	prodh,w,c
  1727  000100  6EDA               	movwf	fsr2h,c
  1728  000102  0100               	movlb	0	; () banked
  1729  000104  AADF               	btfss	indf2,5,c
  1730  000106  D003               	goto	i2l1353
  1731                           
  1732                           ; BSR set to: 0
  1733  000108  EC52  F003         	call	_um_0	;wreg free
  1734  00010C  D002               	goto	i2l1355
  1735  00010E                     i2l1353:
  1736  00010E  EC64  F003         	call	_zero_0	;wreg free
  1737  000112                     i2l1355:
  1738                           
  1739                           ;app.c: 192: if( (CH2[idx_color1] & 16) > 0) um_0();else zero_0();
  1740  000112  502E               	movf	SendBuffCh2@idx_color1,w,c
  1741  000114  0D01               	mullw	1
  1742  000116  0E60               	movlw	low _CH2
  1743  000118  24F3               	addwf	prodl,w,c
  1744  00011A  6ED9               	movwf	fsr2l,c
  1745  00011C  0E00               	movlw	high _CH2
  1746  00011E  20F4               	addwfc	prodh,w,c
  1747  000120  6EDA               	movwf	fsr2h,c
  1748  000122  0100               	movlb	0	; () banked
  1749  000124  A8DF               	btfss	indf2,4,c
  1750  000126  D003               	goto	i2l1359
  1751                           
  1752                           ; BSR set to: 0
  1753  000128  EC52  F003         	call	_um_0	;wreg free
  1754  00012C  D002               	goto	i2l1361
  1755  00012E                     i2l1359:
  1756  00012E  EC64  F003         	call	_zero_0	;wreg free
  1757  000132                     i2l1361:
  1758                           
  1759                           ;app.c: 193: if( (CH2[idx_color1] & 8) > 0) um_0();else zero_0();
  1760  000132  502E               	movf	SendBuffCh2@idx_color1,w,c
  1761  000134  0D01               	mullw	1
  1762  000136  0E60               	movlw	low _CH2
  1763  000138  24F3               	addwf	prodl,w,c
  1764  00013A  6ED9               	movwf	fsr2l,c
  1765  00013C  0E00               	movlw	high _CH2
  1766  00013E  20F4               	addwfc	prodh,w,c
  1767  000140  6EDA               	movwf	fsr2h,c
  1768  000142  0100               	movlb	0	; () banked
  1769  000144  A6DF               	btfss	indf2,3,c
  1770  000146  D003               	goto	i2l1365
  1771                           
  1772                           ; BSR set to: 0
  1773  000148  EC52  F003         	call	_um_0	;wreg free
  1774  00014C  D002               	goto	i2l1367
  1775  00014E                     i2l1365:
  1776  00014E  EC64  F003         	call	_zero_0	;wreg free
  1777  000152                     i2l1367:
  1778                           
  1779                           ;app.c: 194: if( (CH2[idx_color1] & 4) > 0) um_0();else zero_0();
  1780  000152  502E               	movf	SendBuffCh2@idx_color1,w,c
  1781  000154  0D01               	mullw	1
  1782  000156  0E60               	movlw	low _CH2
  1783  000158  24F3               	addwf	prodl,w,c
  1784  00015A  6ED9               	movwf	fsr2l,c
  1785  00015C  0E00               	movlw	high _CH2
  1786  00015E  20F4               	addwfc	prodh,w,c
  1787  000160  6EDA               	movwf	fsr2h,c
  1788  000162  0100               	movlb	0	; () banked
  1789  000164  A4DF               	btfss	indf2,2,c
  1790  000166  D003               	goto	i2l1371
  1791                           
  1792                           ; BSR set to: 0
  1793  000168  EC52  F003         	call	_um_0	;wreg free
  1794  00016C  D002               	goto	i2l1373
  1795  00016E                     i2l1371:
  1796  00016E  EC64  F003         	call	_zero_0	;wreg free
  1797  000172                     i2l1373:
  1798                           
  1799                           ;app.c: 195: if( (CH2[idx_color1] & 2) > 0) um_0();else zero_0();
  1800  000172  502E               	movf	SendBuffCh2@idx_color1,w,c
  1801  000174  0D01               	mullw	1
  1802  000176  0E60               	movlw	low _CH2
  1803  000178  24F3               	addwf	prodl,w,c
  1804  00017A  6ED9               	movwf	fsr2l,c
  1805  00017C  0E00               	movlw	high _CH2
  1806  00017E  20F4               	addwfc	prodh,w,c
  1807  000180  6EDA               	movwf	fsr2h,c
  1808  000182  0100               	movlb	0	; () banked
  1809  000184  A2DF               	btfss	indf2,1,c
  1810  000186  D003               	goto	i2l1377
  1811                           
  1812                           ; BSR set to: 0
  1813  000188  EC52  F003         	call	_um_0	;wreg free
  1814  00018C  D002               	goto	i2l1379
  1815  00018E                     i2l1377:
  1816  00018E  EC64  F003         	call	_zero_0	;wreg free
  1817  000192                     i2l1379:
  1818                           
  1819                           ;app.c: 196: if( (CH2[idx_color1] & 1) > 0) um_0();else zero_0();
  1820  000192  502E               	movf	SendBuffCh2@idx_color1,w,c
  1821  000194  0D01               	mullw	1
  1822  000196  0E60               	movlw	low _CH2
  1823  000198  24F3               	addwf	prodl,w,c
  1824  00019A  6ED9               	movwf	fsr2l,c
  1825  00019C  0E00               	movlw	high _CH2
  1826  00019E  20F4               	addwfc	prodh,w,c
  1827  0001A0  6EDA               	movwf	fsr2h,c
  1828  0001A2  0100               	movlb	0	; () banked
  1829  0001A4  A0DF               	btfss	indf2,0,c
  1830  0001A6  D003               	goto	i2l1383
  1831                           
  1832                           ; BSR set to: 0
  1833  0001A8  EC52  F003         	call	_um_0	;wreg free
  1834  0001AC  D002               	goto	i2l1385
  1835  0001AE                     i2l1383:
  1836  0001AE  EC64  F003         	call	_zero_0	;wreg free
  1837  0001B2                     i2l1385:
  1838                           
  1839                           ;app.c: 198: if( (CH2[idx_color2] & 128) > 0) um_0();else zero_0();
  1840  0001B2  502C               	movf	SendBuffCh2@idx_color2,w,c
  1841  0001B4  0D01               	mullw	1
  1842  0001B6  0E60               	movlw	low _CH2
  1843  0001B8  24F3               	addwf	prodl,w,c
  1844  0001BA  6ED9               	movwf	fsr2l,c
  1845  0001BC  0E00               	movlw	high _CH2
  1846  0001BE  20F4               	addwfc	prodh,w,c
  1847  0001C0  6EDA               	movwf	fsr2h,c
  1848  0001C2  0100               	movlb	0	; () banked
  1849  0001C4  AEDF               	btfss	indf2,7,c
  1850  0001C6  D003               	goto	i2l1389
  1851                           
  1852                           ; BSR set to: 0
  1853  0001C8  EC52  F003         	call	_um_0	;wreg free
  1854  0001CC  D002               	goto	i2l1391
  1855  0001CE                     i2l1389:
  1856  0001CE  EC64  F003         	call	_zero_0	;wreg free
  1857  0001D2                     i2l1391:
  1858                           
  1859                           ;app.c: 199: if( (CH2[idx_color2] & 64) > 0) um_0();else zero_0();
  1860  0001D2  502C               	movf	SendBuffCh2@idx_color2,w,c
  1861  0001D4  0D01               	mullw	1
  1862  0001D6  0E60               	movlw	low _CH2
  1863  0001D8  24F3               	addwf	prodl,w,c
  1864  0001DA  6ED9               	movwf	fsr2l,c
  1865  0001DC  0E00               	movlw	high _CH2
  1866  0001DE  20F4               	addwfc	prodh,w,c
  1867  0001E0  6EDA               	movwf	fsr2h,c
  1868  0001E2  0100               	movlb	0	; () banked
  1869  0001E4  ACDF               	btfss	indf2,6,c
  1870  0001E6  D003               	goto	i2l1395
  1871                           
  1872                           ; BSR set to: 0
  1873  0001E8  EC52  F003         	call	_um_0	;wreg free
  1874  0001EC  D002               	goto	i2l1397
  1875  0001EE                     i2l1395:
  1876  0001EE  EC64  F003         	call	_zero_0	;wreg free
  1877  0001F2                     i2l1397:
  1878                           
  1879                           ;app.c: 200: if( (CH2[idx_color2] & 32) > 0) um_0();else zero_0();
  1880  0001F2  502C               	movf	SendBuffCh2@idx_color2,w,c
  1881  0001F4  0D01               	mullw	1
  1882  0001F6  0E60               	movlw	low _CH2
  1883  0001F8  24F3               	addwf	prodl,w,c
  1884  0001FA  6ED9               	movwf	fsr2l,c
  1885  0001FC  0E00               	movlw	high _CH2
  1886  0001FE  20F4               	addwfc	prodh,w,c
  1887  000200  6EDA               	movwf	fsr2h,c
  1888  000202  0100               	movlb	0	; () banked
  1889  000204  AADF               	btfss	indf2,5,c
  1890  000206  D003               	goto	i2l1401
  1891                           
  1892                           ; BSR set to: 0
  1893  000208  EC52  F003         	call	_um_0	;wreg free
  1894  00020C  D002               	goto	i2l1403
  1895  00020E                     i2l1401:
  1896  00020E  EC64  F003         	call	_zero_0	;wreg free
  1897  000212                     i2l1403:
  1898                           
  1899                           ;app.c: 201: if( (CH2[idx_color2] & 16) > 0) um_0();else zero_0();
  1900  000212  502C               	movf	SendBuffCh2@idx_color2,w,c
  1901  000214  0D01               	mullw	1
  1902  000216  0E60               	movlw	low _CH2
  1903  000218  24F3               	addwf	prodl,w,c
  1904  00021A  6ED9               	movwf	fsr2l,c
  1905  00021C  0E00               	movlw	high _CH2
  1906  00021E  20F4               	addwfc	prodh,w,c
  1907  000220  6EDA               	movwf	fsr2h,c
  1908  000222  0100               	movlb	0	; () banked
  1909  000224  A8DF               	btfss	indf2,4,c
  1910  000226  D003               	goto	i2l1407
  1911                           
  1912                           ; BSR set to: 0
  1913  000228  EC52  F003         	call	_um_0	;wreg free
  1914  00022C  D002               	goto	i2l1409
  1915  00022E                     i2l1407:
  1916  00022E  EC64  F003         	call	_zero_0	;wreg free
  1917  000232                     i2l1409:
  1918                           
  1919                           ;app.c: 202: if( (CH2[idx_color2] & 8) > 0) um_0();else zero_0();
  1920  000232  502C               	movf	SendBuffCh2@idx_color2,w,c
  1921  000234  0D01               	mullw	1
  1922  000236  0E60               	movlw	low _CH2
  1923  000238  24F3               	addwf	prodl,w,c
  1924  00023A  6ED9               	movwf	fsr2l,c
  1925  00023C  0E00               	movlw	high _CH2
  1926  00023E  20F4               	addwfc	prodh,w,c
  1927  000240  6EDA               	movwf	fsr2h,c
  1928  000242  0100               	movlb	0	; () banked
  1929  000244  A6DF               	btfss	indf2,3,c
  1930  000246  D003               	goto	i2l1413
  1931                           
  1932                           ; BSR set to: 0
  1933  000248  EC52  F003         	call	_um_0	;wreg free
  1934  00024C  D002               	goto	i2l1415
  1935  00024E                     i2l1413:
  1936  00024E  EC64  F003         	call	_zero_0	;wreg free
  1937  000252                     i2l1415:
  1938                           
  1939                           ;app.c: 203: if( (CH2[idx_color2] & 4) > 0) um_0();else zero_0();
  1940  000252  502C               	movf	SendBuffCh2@idx_color2,w,c
  1941  000254  0D01               	mullw	1
  1942  000256  0E60               	movlw	low _CH2
  1943  000258  24F3               	addwf	prodl,w,c
  1944  00025A  6ED9               	movwf	fsr2l,c
  1945  00025C  0E00               	movlw	high _CH2
  1946  00025E  20F4               	addwfc	prodh,w,c
  1947  000260  6EDA               	movwf	fsr2h,c
  1948  000262  0100               	movlb	0	; () banked
  1949  000264  A4DF               	btfss	indf2,2,c
  1950  000266  D003               	goto	i2l1419
  1951                           
  1952                           ; BSR set to: 0
  1953  000268  EC52  F003         	call	_um_0	;wreg free
  1954  00026C  D002               	goto	i2l1421
  1955  00026E                     i2l1419:
  1956  00026E  EC64  F003         	call	_zero_0	;wreg free
  1957  000272                     i2l1421:
  1958                           
  1959                           ;app.c: 204: if( (CH2[idx_color2] & 2) > 0) um_0();else zero_0();
  1960  000272  502C               	movf	SendBuffCh2@idx_color2,w,c
  1961  000274  0D01               	mullw	1
  1962  000276  0E60               	movlw	low _CH2
  1963  000278  24F3               	addwf	prodl,w,c
  1964  00027A  6ED9               	movwf	fsr2l,c
  1965  00027C  0E00               	movlw	high _CH2
  1966  00027E  20F4               	addwfc	prodh,w,c
  1967  000280  6EDA               	movwf	fsr2h,c
  1968  000282  0100               	movlb	0	; () banked
  1969  000284  A2DF               	btfss	indf2,1,c
  1970  000286  D003               	goto	i2l1425
  1971                           
  1972                           ; BSR set to: 0
  1973  000288  EC52  F003         	call	_um_0	;wreg free
  1974  00028C  D002               	goto	i2l1427
  1975  00028E                     i2l1425:
  1976  00028E  EC64  F003         	call	_zero_0	;wreg free
  1977  000292                     i2l1427:
  1978                           
  1979                           ;app.c: 205: if( (CH2[idx_color2] & 1) > 0) um_0();else zero_0();
  1980  000292  502C               	movf	SendBuffCh2@idx_color2,w,c
  1981  000294  0D01               	mullw	1
  1982  000296  0E60               	movlw	low _CH2
  1983  000298  24F3               	addwf	prodl,w,c
  1984  00029A  6ED9               	movwf	fsr2l,c
  1985  00029C  0E00               	movlw	high _CH2
  1986  00029E  20F4               	addwfc	prodh,w,c
  1987  0002A0  6EDA               	movwf	fsr2h,c
  1988  0002A2  0100               	movlb	0	; () banked
  1989  0002A4  A0DF               	btfss	indf2,0,c
  1990  0002A6  D003               	goto	i2l1431
  1991                           
  1992                           ; BSR set to: 0
  1993  0002A8  EC52  F003         	call	_um_0	;wreg free
  1994  0002AC  D002               	goto	i2l1433
  1995  0002AE                     i2l1431:
  1996  0002AE  EC64  F003         	call	_zero_0	;wreg free
  1997  0002B2                     i2l1433:
  1998                           
  1999                           ;app.c: 207: if( (CH2[idx_color3] & 128) > 0) um_0();else zero_0();
  2000  0002B2  502D               	movf	SendBuffCh2@idx_color3,w,c
  2001  0002B4  0D01               	mullw	1
  2002  0002B6  0E60               	movlw	low _CH2
  2003  0002B8  24F3               	addwf	prodl,w,c
  2004  0002BA  6ED9               	movwf	fsr2l,c
  2005  0002BC  0E00               	movlw	high _CH2
  2006  0002BE  20F4               	addwfc	prodh,w,c
  2007  0002C0  6EDA               	movwf	fsr2h,c
  2008  0002C2  0100               	movlb	0	; () banked
  2009  0002C4  AEDF               	btfss	indf2,7,c
  2010  0002C6  D003               	goto	i2l1437
  2011                           
  2012                           ; BSR set to: 0
  2013  0002C8  EC52  F003         	call	_um_0	;wreg free
  2014  0002CC  D002               	goto	i2l1439
  2015  0002CE                     i2l1437:
  2016  0002CE  EC64  F003         	call	_zero_0	;wreg free
  2017  0002D2                     i2l1439:
  2018                           
  2019                           ;app.c: 208: if( (CH2[idx_color3] & 64) > 0) um_0();else zero_0();
  2020  0002D2  502D               	movf	SendBuffCh2@idx_color3,w,c
  2021  0002D4  0D01               	mullw	1
  2022  0002D6  0E60               	movlw	low _CH2
  2023  0002D8  24F3               	addwf	prodl,w,c
  2024  0002DA  6ED9               	movwf	fsr2l,c
  2025  0002DC  0E00               	movlw	high _CH2
  2026  0002DE  20F4               	addwfc	prodh,w,c
  2027  0002E0  6EDA               	movwf	fsr2h,c
  2028  0002E2  0100               	movlb	0	; () banked
  2029  0002E4  ACDF               	btfss	indf2,6,c
  2030  0002E6  D003               	goto	i2l1443
  2031                           
  2032                           ; BSR set to: 0
  2033  0002E8  EC52  F003         	call	_um_0	;wreg free
  2034  0002EC  D002               	goto	i2l1445
  2035  0002EE                     i2l1443:
  2036  0002EE  EC64  F003         	call	_zero_0	;wreg free
  2037  0002F2                     i2l1445:
  2038                           
  2039                           ;app.c: 209: if( (CH2[idx_color3] & 32) > 0) um_0();else zero_0();
  2040  0002F2  502D               	movf	SendBuffCh2@idx_color3,w,c
  2041  0002F4  0D01               	mullw	1
  2042  0002F6  0E60               	movlw	low _CH2
  2043  0002F8  24F3               	addwf	prodl,w,c
  2044  0002FA  6ED9               	movwf	fsr2l,c
  2045  0002FC  0E00               	movlw	high _CH2
  2046  0002FE  20F4               	addwfc	prodh,w,c
  2047  000300  6EDA               	movwf	fsr2h,c
  2048  000302  0100               	movlb	0	; () banked
  2049  000304  AADF               	btfss	indf2,5,c
  2050  000306  D003               	goto	i2l1449
  2051                           
  2052                           ; BSR set to: 0
  2053  000308  EC52  F003         	call	_um_0	;wreg free
  2054  00030C  D002               	goto	i2l1451
  2055  00030E                     i2l1449:
  2056  00030E  EC64  F003         	call	_zero_0	;wreg free
  2057  000312                     i2l1451:
  2058                           
  2059                           ;app.c: 210: if( (CH2[idx_color3] & 16) > 0) um_0();else zero_0();
  2060  000312  502D               	movf	SendBuffCh2@idx_color3,w,c
  2061  000314  0D01               	mullw	1
  2062  000316  0E60               	movlw	low _CH2
  2063  000318  24F3               	addwf	prodl,w,c
  2064  00031A  6ED9               	movwf	fsr2l,c
  2065  00031C  0E00               	movlw	high _CH2
  2066  00031E  20F4               	addwfc	prodh,w,c
  2067  000320  6EDA               	movwf	fsr2h,c
  2068  000322  0100               	movlb	0	; () banked
  2069  000324  A8DF               	btfss	indf2,4,c
  2070  000326  D003               	goto	i2l1455
  2071                           
  2072                           ; BSR set to: 0
  2073  000328  EC52  F003         	call	_um_0	;wreg free
  2074  00032C  D002               	goto	i2l1457
  2075  00032E                     i2l1455:
  2076  00032E  EC64  F003         	call	_zero_0	;wreg free
  2077  000332                     i2l1457:
  2078                           
  2079                           ;app.c: 211: if( (CH2[idx_color3] & 8) > 0) um_0();else zero_0();
  2080  000332  502D               	movf	SendBuffCh2@idx_color3,w,c
  2081  000334  0D01               	mullw	1
  2082  000336  0E60               	movlw	low _CH2
  2083  000338  24F3               	addwf	prodl,w,c
  2084  00033A  6ED9               	movwf	fsr2l,c
  2085  00033C  0E00               	movlw	high _CH2
  2086  00033E  20F4               	addwfc	prodh,w,c
  2087  000340  6EDA               	movwf	fsr2h,c
  2088  000342  0100               	movlb	0	; () banked
  2089  000344  A6DF               	btfss	indf2,3,c
  2090  000346  D003               	goto	i2l1461
  2091                           
  2092                           ; BSR set to: 0
  2093  000348  EC52  F003         	call	_um_0	;wreg free
  2094  00034C  D002               	goto	i2l1463
  2095  00034E                     i2l1461:
  2096  00034E  EC64  F003         	call	_zero_0	;wreg free
  2097  000352                     i2l1463:
  2098                           
  2099                           ;app.c: 212: if( (CH2[idx_color3] & 4) > 0) um_0();else zero_0();
  2100  000352  502D               	movf	SendBuffCh2@idx_color3,w,c
  2101  000354  0D01               	mullw	1
  2102  000356  0E60               	movlw	low _CH2
  2103  000358  24F3               	addwf	prodl,w,c
  2104  00035A  6ED9               	movwf	fsr2l,c
  2105  00035C  0E00               	movlw	high _CH2
  2106  00035E  20F4               	addwfc	prodh,w,c
  2107  000360  6EDA               	movwf	fsr2h,c
  2108  000362  0100               	movlb	0	; () banked
  2109  000364  A4DF               	btfss	indf2,2,c
  2110  000366  D003               	goto	i2l1467
  2111                           
  2112                           ; BSR set to: 0
  2113  000368  EC52  F003         	call	_um_0	;wreg free
  2114  00036C  D002               	goto	i2l1469
  2115  00036E                     i2l1467:
  2116  00036E  EC64  F003         	call	_zero_0	;wreg free
  2117  000372                     i2l1469:
  2118                           
  2119                           ;app.c: 213: if( (CH2[idx_color3] & 2) > 0) um_0();else zero_0();
  2120  000372  502D               	movf	SendBuffCh2@idx_color3,w,c
  2121  000374  0D01               	mullw	1
  2122  000376  0E60               	movlw	low _CH2
  2123  000378  24F3               	addwf	prodl,w,c
  2124  00037A  6ED9               	movwf	fsr2l,c
  2125  00037C  0E00               	movlw	high _CH2
  2126  00037E  20F4               	addwfc	prodh,w,c
  2127  000380  6EDA               	movwf	fsr2h,c
  2128  000382  0100               	movlb	0	; () banked
  2129  000384  A2DF               	btfss	indf2,1,c
  2130  000386  D003               	goto	i2l1473
  2131                           
  2132                           ; BSR set to: 0
  2133  000388  EC52  F003         	call	_um_0	;wreg free
  2134  00038C  D002               	goto	i2l1475
  2135  00038E                     i2l1473:
  2136  00038E  EC64  F003         	call	_zero_0	;wreg free
  2137  000392                     i2l1475:
  2138                           
  2139                           ;app.c: 214: if( (CH2[idx_color3] & 1) > 0) um_0();else zero_0();
  2140  000392  502D               	movf	SendBuffCh2@idx_color3,w,c
  2141  000394  0D01               	mullw	1
  2142  000396  0E60               	movlw	low _CH2
  2143  000398  24F3               	addwf	prodl,w,c
  2144  00039A  6ED9               	movwf	fsr2l,c
  2145  00039C  0E00               	movlw	high _CH2
  2146  00039E  20F4               	addwfc	prodh,w,c
  2147  0003A0  6EDA               	movwf	fsr2h,c
  2148  0003A2  0100               	movlb	0	; () banked
  2149  0003A4  A0DF               	btfss	indf2,0,c
  2150  0003A6  D003               	goto	i2l1479
  2151                           
  2152                           ; BSR set to: 0
  2153  0003A8  EC52  F003         	call	_um_0	;wreg free
  2154  0003AC  0012               	return	
  2155  0003AE                     i2l1479:
  2156  0003AE  EC64  F003         	call	_zero_0	;wreg free
  2157  0003B2  0012               	return	
  2158  0003B4                     __end_of_SendBuffCh2:
  2159                           	opt stack 0
  2160                           pclatu	equ	0xFFB
  2161                           pclath	equ	0xFFA
  2162                           tblptru	equ	0xFF8
  2163                           tblptrh	equ	0xFF7
  2164                           tblptrl	equ	0xFF6
  2165                           tablat	equ	0xFF5
  2166                           prodh	equ	0xFF4
  2167                           prodl	equ	0xFF3
  2168                           intcon	equ	0xFF2
  2169                           intcon2	equ	0xFF1
  2170                           postinc0	equ	0xFEE
  2171                           fsr0h	equ	0xFEA
  2172                           fsr0l	equ	0xFE9
  2173                           wreg	equ	0xFE8
  2174                           postdec1	equ	0xFE5
  2175                           fsr1h	equ	0xFE2
  2176                           fsr1l	equ	0xFE1
  2177                           indf2	equ	0xFDF
  2178                           fsr2h	equ	0xFDA
  2179                           fsr2l	equ	0xFD9
  2180                           status	equ	0xFD8
  2181                           
  2182 ;; *************** function _zero_0 *****************
  2183 ;; Defined at:
  2184 ;;		line 138 in file "mcc_generated_files/app.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		None
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2198 ;;      Params:         0       0       0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_SendBuffCh2
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text16
  2212  0006C8                     __ptext16:
  2213                           	opt stack 0
  2214  0006C8                     _zero_0:
  2215                           	opt stack 21
  2216                           
  2217                           ;incstack = 0
  2218  0006C8  828A               	bsf	3978,1,c	;volatile
  2219  0006CA  F000               	nop	
  2220  0006CC  F000               	nop	
  2221  0006CE  F000               	nop	
  2222  0006D0  F000               	nop	
  2223  0006D2  F000               	nop	
  2224  0006D4  F000               	nop	
  2225                           
  2226                           ;app.c: 139: LATB1 = 0; __nop();__nop();__nop();__nop();__nop();__nop(); }
  2227  0006D6  928A               	bcf	3978,1,c	;volatile
  2228  0006D8  F000               	nop	
  2229  0006DA  F000               	nop	
  2230  0006DC  F000               	nop	
  2231  0006DE  F000               	nop	
  2232  0006E0  F000               	nop	
  2233  0006E2  F000               	nop	
  2234  0006E4  0012               	return		;funcret
  2235  0006E6                     __end_of_zero_0:
  2236                           	opt stack 0
  2237                           pclatu	equ	0xFFB
  2238                           pclath	equ	0xFFA
  2239                           tblptru	equ	0xFF8
  2240                           tblptrh	equ	0xFF7
  2241                           tblptrl	equ	0xFF6
  2242                           tablat	equ	0xFF5
  2243                           prodh	equ	0xFF4
  2244                           prodl	equ	0xFF3
  2245                           intcon	equ	0xFF2
  2246                           intcon2	equ	0xFF1
  2247                           postinc0	equ	0xFEE
  2248                           fsr0h	equ	0xFEA
  2249                           fsr0l	equ	0xFE9
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           fsr1h	equ	0xFE2
  2253                           fsr1l	equ	0xFE1
  2254                           indf2	equ	0xFDF
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _um_0 *****************
  2260 ;; Defined at:
  2261 ;;		line 134 in file "mcc_generated_files/app.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		None
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2275 ;;      Params:         0       0       0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0
  2278 ;;      Totals:         0       0       0       0       0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_SendBuffCh2
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text17
  2289  0006A4                     __ptext17:
  2290                           	opt stack 0
  2291  0006A4                     _um_0:
  2292                           	opt stack 21
  2293                           
  2294                           ;incstack = 0
  2295  0006A4  828A               	bsf	3978,1,c	;volatile
  2296  0006A6  F000               	nop	
  2297  0006A8  F000               	nop	
  2298  0006AA  F000               	nop	
  2299  0006AC  F000               	nop	
  2300  0006AE  F000               	nop	
  2301  0006B0  F000               	nop	
  2302                           
  2303                           ;app.c: 135: __nop();__nop();__nop();__nop();__nop();__nop();__nop();__nop();__nop();
  2304  0006B2  F000               	nop	
  2305  0006B4  F000               	nop	
  2306  0006B6  F000               	nop	
  2307  0006B8  F000               	nop	
  2308  0006BA  F000               	nop	
  2309  0006BC  F000               	nop	
  2310  0006BE  F000               	nop	
  2311  0006C0  F000               	nop	
  2312  0006C2  F000               	nop	
  2313                           
  2314                           ;app.c: 136: LATB1 = 0;
  2315  0006C4  928A               	bcf	3978,1,c	;volatile
  2316  0006C6  0012               	return		;funcret
  2317  0006C8                     __end_of_um_0:
  2318                           	opt stack 0
  2319                           pclatu	equ	0xFFB
  2320                           pclath	equ	0xFFA
  2321                           tblptru	equ	0xFF8
  2322                           tblptrh	equ	0xFF7
  2323                           tblptrl	equ	0xFF6
  2324                           tablat	equ	0xFF5
  2325                           prodh	equ	0xFF4
  2326                           prodl	equ	0xFF3
  2327                           intcon	equ	0xFF2
  2328                           intcon2	equ	0xFF1
  2329                           postinc0	equ	0xFEE
  2330                           fsr0h	equ	0xFEA
  2331                           fsr0l	equ	0xFE9
  2332                           wreg	equ	0xFE8
  2333                           postdec1	equ	0xFE5
  2334                           fsr1h	equ	0xFE2
  2335                           fsr1l	equ	0xFE1
  2336                           indf2	equ	0xFDF
  2337                           fsr2h	equ	0xFDA
  2338                           fsr2l	equ	0xFD9
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _EUSART1_Transmit_ISR *****************
  2342 ;; Defined at:
  2343 ;;		line 98 in file "mcc_generated_files/eusart1.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		None
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2357 ;;      Params:         0       0       0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_INTERRUPT_InterruptManager
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text18
  2371  00079E                     __ptext18:
  2372                           	opt stack 0
  2373  00079E                     _EUSART1_Transmit_ISR:
  2374                           	opt stack 26
  2375                           
  2376                           ;eusart1.c: 100: PIE1bits.TX1IE = 0;
  2377                           
  2378                           ;incstack = 0
  2379  00079E  989D               	bcf	3997,4,c	;volatile
  2380  0007A0  0012               	return		;funcret
  2381  0007A2                     __end_of_EUSART1_Transmit_ISR:
  2382                           	opt stack 0
  2383                           pclatu	equ	0xFFB
  2384                           pclath	equ	0xFFA
  2385                           tblptru	equ	0xFF8
  2386                           tblptrh	equ	0xFF7
  2387                           tblptrl	equ	0xFF6
  2388                           tablat	equ	0xFF5
  2389                           prodh	equ	0xFF4
  2390                           prodl	equ	0xFF3
  2391                           intcon	equ	0xFF2
  2392                           intcon2	equ	0xFF1
  2393                           postinc0	equ	0xFEE
  2394                           fsr0h	equ	0xFEA
  2395                           fsr0l	equ	0xFE9
  2396                           wreg	equ	0xFE8
  2397                           postdec1	equ	0xFE5
  2398                           fsr1h	equ	0xFE2
  2399                           fsr1l	equ	0xFE1
  2400                           indf2	equ	0xFDF
  2401                           fsr2h	equ	0xFDA
  2402                           fsr2l	equ	0xFD9
  2403                           status	equ	0xFD8
  2404                           
  2405 ;; *************** function _EUSART1_Receive_ISR *****************
  2406 ;; Defined at:
  2407 ;;		line 104 in file "mcc_generated_files/eusart1.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  byteReceived    1    8[COMRAM] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2421 ;;      Params:         0       0       0       0       0       0       0
  2422 ;;      Locals:         1       0       0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0
  2424 ;;      Totals:         1       0       0       0       0       0       0
  2425 ;;Total ram usage:        1 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    1
  2428 ;; This function calls:
  2429 ;;		_AppINT_USART1_RX
  2430 ;; This function is called by:
  2431 ;;		_INTERRUPT_InterruptManager
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text19
  2436  000702                     __ptext19:
  2437                           	opt stack 0
  2438  000702                     _EUSART1_Receive_ISR:
  2439                           	opt stack 25
  2440                           
  2441                           ;eusart1.c: 106: unsigned char byteReceived = 0;
  2442                           
  2443                           ;incstack = 0
  2444  000702  0E00               	movlw	0
  2445  000704  6E34               	movwf	EUSART1_Receive_ISR@byteReceived,c
  2446                           
  2447                           ;eusart1.c: 107: if (1 == RC1STAbits.OERR)
  2448  000706  A2AB               	btfss	4011,1,c	;volatile
  2449  000708  D002               	goto	i2l169
  2450                           
  2451                           ;eusart1.c: 108: {
  2452                           ;eusart1.c: 110: RC1STAbits.CREN = 0;
  2453  00070A  98AB               	bcf	4011,4,c	;volatile
  2454                           
  2455                           ;eusart1.c: 111: RC1STAbits.CREN = 1;
  2456  00070C  88AB               	bsf	4011,4,c	;volatile
  2457  00070E                     i2l169:
  2458                           
  2459                           ;eusart1.c: 112: }
  2460                           ;eusart1.c: 113: byteReceived = RCREG1;
  2461  00070E  CFAE F034          	movff	4014,EUSART1_Receive_ISR@byteReceived	;volatile
  2462                           
  2463                           ;eusart1.c: 114: AppINT_USART1_RX(byteReceived);
  2464  000712  5034               	movf	EUSART1_Receive_ISR@byteReceived,w,c
  2465  000714  ECDA  F001         	call	_AppINT_USART1_RX
  2466  000718  0012               	return		;funcret
  2467  00071A                     __end_of_EUSART1_Receive_ISR:
  2468                           	opt stack 0
  2469                           pclatu	equ	0xFFB
  2470                           pclath	equ	0xFFA
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           prodh	equ	0xFF4
  2476                           prodl	equ	0xFF3
  2477                           intcon	equ	0xFF2
  2478                           intcon2	equ	0xFF1
  2479                           postinc0	equ	0xFEE
  2480                           fsr0h	equ	0xFEA
  2481                           fsr0l	equ	0xFE9
  2482                           wreg	equ	0xFE8
  2483                           postdec1	equ	0xFE5
  2484                           fsr1h	equ	0xFE2
  2485                           fsr1l	equ	0xFE1
  2486                           indf2	equ	0xFDF
  2487                           fsr2h	equ	0xFDA
  2488                           fsr2l	equ	0xFD9
  2489                           status	equ	0xFD8
  2490                           
  2491 ;; *************** function _AppINT_USART1_RX *****************
  2492 ;; Defined at:
  2493 ;;		line 487 in file "mcc_generated_files/app.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  rxData          1    wreg     unsigned char 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  rxData          1    7[COMRAM] unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2507 ;;      Params:         0       0       0       0       0       0       0
  2508 ;;      Locals:         1       0       0       0       0       0       0
  2509 ;;      Temps:          7       0       0       0       0       0       0
  2510 ;;      Totals:         8       0       0       0       0       0       0
  2511 ;;Total ram usage:        8 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_EUSART1_Receive_ISR
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text20
  2521  0003B4                     __ptext20:
  2522                           	opt stack 0
  2523  0003B4                     _AppINT_USART1_RX:
  2524                           	opt stack 25
  2525                           
  2526                           ;incstack = 0
  2527                           ;AppINT_USART1_RX@rxData stored from wreg
  2528  0003B4  6E33               	movwf	AppINT_USART1_RX@rxData,c
  2529                           
  2530                           ;app.c: 490: Buffer[Idx1]= rxData;
  2531  0003B6  5012               	movf	_Idx1,w,c
  2532  0003B8  0D01               	mullw	1
  2533  0003BA  0E00               	movlw	low _Buffer
  2534  0003BC  24F3               	addwf	prodl,w,c
  2535  0003BE  6ED9               	movwf	fsr2l,c
  2536  0003C0  0E01               	movlw	high _Buffer
  2537  0003C2  20F4               	addwfc	prodh,w,c
  2538  0003C4  6EDA               	movwf	fsr2h,c
  2539  0003C6  C033  FFDF         	movff	AppINT_USART1_RX@rxData,indf2
  2540                           
  2541                           ;app.c: 491: if(Buffer[Idx1] == 254 && !capturando){
  2542  0003CA  5012               	movf	_Idx1,w,c
  2543  0003CC  0D01               	mullw	1
  2544  0003CE  0E00               	movlw	low _Buffer
  2545  0003D0  24F3               	addwf	prodl,w,c
  2546  0003D2  6ED9               	movwf	fsr2l,c
  2547  0003D4  0E01               	movlw	high _Buffer
  2548  0003D6  20F4               	addwfc	prodh,w,c
  2549  0003D8  6EDA               	movwf	fsr2h,c
  2550  0003DA  0EFE               	movlw	254
  2551  0003DC  18DE               	xorwf	postinc2,w,c
  2552  0003DE  A4D8               	btfss	status,2,c
  2553  0003E0  D098               	goto	i2l1563
  2554  0003E2  500E               	movf	_capturando,w,c
  2555  0003E4  A4D8               	btfss	status,2,c
  2556  0003E6  D095               	goto	i2l1563
  2557                           
  2558                           ;app.c: 492: if(Buffer[Idx1-4]== 85){
  2559  0003E8  0EFC               	movlw	252
  2560  0003EA  6E2C               	movwf	??_AppINT_USART1_RX& (0+255),c
  2561  0003EC  0EFF               	movlw	255
  2562  0003EE  6E2D               	movwf	(??_AppINT_USART1_RX+1)& (0+255),c
  2563  0003F0  5012               	movf	_Idx1,w,c
  2564  0003F2  6E2E               	movwf	(??_AppINT_USART1_RX+2)& (0+255),c
  2565  0003F4  6A2F               	clrf	(??_AppINT_USART1_RX+3)& (0+255),c
  2566  0003F6  502C               	movf	??_AppINT_USART1_RX,w,c
  2567  0003F8  262E               	addwf	??_AppINT_USART1_RX+2,f,c
  2568  0003FA  502D               	movf	??_AppINT_USART1_RX+1,w,c
  2569  0003FC  222F               	addwfc	??_AppINT_USART1_RX+3,f,c
  2570  0003FE  0E00               	movlw	low _Buffer
  2571  000400  242E               	addwf	??_AppINT_USART1_RX+2,w,c
  2572  000402  6ED9               	movwf	fsr2l,c
  2573  000404  0E01               	movlw	high _Buffer
  2574  000406  202F               	addwfc	??_AppINT_USART1_RX+3,w,c
  2575  000408  6EDA               	movwf	fsr2h,c
  2576  00040A  0E55               	movlw	85
  2577  00040C  18DE               	xorwf	postinc2,w,c
  2578  00040E  A4D8               	btfss	status,2,c
  2579  000410  D0B1               	goto	i2l381
  2580                           
  2581                           ;app.c: 493: len_package= Buffer[Idx1-1];
  2582  000412  0EFF               	movlw	255
  2583  000414  6E2C               	movwf	??_AppINT_USART1_RX& (0+255),c
  2584  000416  0EFF               	movlw	255
  2585  000418  6E2D               	movwf	(??_AppINT_USART1_RX+1)& (0+255),c
  2586  00041A  5012               	movf	_Idx1,w,c
  2587  00041C  6E2E               	movwf	(??_AppINT_USART1_RX+2)& (0+255),c
  2588  00041E  6A2F               	clrf	(??_AppINT_USART1_RX+3)& (0+255),c
  2589  000420  502C               	movf	??_AppINT_USART1_RX,w,c
  2590  000422  262E               	addwf	??_AppINT_USART1_RX+2,f,c
  2591  000424  502D               	movf	??_AppINT_USART1_RX+1,w,c
  2592  000426  222F               	addwfc	??_AppINT_USART1_RX+3,f,c
  2593  000428  0E00               	movlw	low _Buffer
  2594  00042A  242E               	addwf	??_AppINT_USART1_RX+2,w,c
  2595  00042C  6ED9               	movwf	fsr2l,c
  2596  00042E  0E01               	movlw	high _Buffer
  2597  000430  202F               	addwfc	??_AppINT_USART1_RX+3,w,c
  2598  000432  6EDA               	movwf	fsr2h,c
  2599  000434  50DF               	movf	indf2,w,c
  2600  000436  6E0F               	movwf	_len_package,c
  2601                           
  2602                           ;app.c: 495: type= Buffer[Idx1-2];
  2603  000438  0EFE               	movlw	254
  2604  00043A  6E2C               	movwf	??_AppINT_USART1_RX& (0+255),c
  2605  00043C  0EFF               	movlw	255
  2606  00043E  6E2D               	movwf	(??_AppINT_USART1_RX+1)& (0+255),c
  2607  000440  5012               	movf	_Idx1,w,c
  2608  000442  6E2E               	movwf	(??_AppINT_USART1_RX+2)& (0+255),c
  2609  000444  6A2F               	clrf	(??_AppINT_USART1_RX+3)& (0+255),c
  2610  000446  502C               	movf	??_AppINT_USART1_RX,w,c
  2611  000448  262E               	addwf	??_AppINT_USART1_RX+2,f,c
  2612  00044A  502D               	movf	??_AppINT_USART1_RX+1,w,c
  2613  00044C  222F               	addwfc	??_AppINT_USART1_RX+3,f,c
  2614  00044E  0E00               	movlw	low _Buffer
  2615  000450  242E               	addwf	??_AppINT_USART1_RX+2,w,c
  2616  000452  6ED9               	movwf	fsr2l,c
  2617  000454  0E01               	movlw	high _Buffer
  2618  000456  202F               	addwfc	??_AppINT_USART1_RX+3,w,c
  2619  000458  6EDA               	movwf	fsr2h,c
  2620  00045A  50DF               	movf	indf2,w,c
  2621  00045C  6E30               	movwf	(??_AppINT_USART1_RX+4)& (0+255),c
  2622  00045E  5030               	movf	??_AppINT_USART1_RX+4,w,c
  2623  000460  6E08               	movwf	_type,c
  2624  000462  6A09               	clrf	_type+1,c
  2625                           
  2626                           ;app.c: 496: channel= Buffer[Idx1-3];
  2627  000464  0EFD               	movlw	253
  2628  000466  6E2C               	movwf	??_AppINT_USART1_RX& (0+255),c
  2629  000468  0EFF               	movlw	255
  2630  00046A  6E2D               	movwf	(??_AppINT_USART1_RX+1)& (0+255),c
  2631  00046C  5012               	movf	_Idx1,w,c
  2632  00046E  6E2E               	movwf	(??_AppINT_USART1_RX+2)& (0+255),c
  2633  000470  6A2F               	clrf	(??_AppINT_USART1_RX+3)& (0+255),c
  2634  000472  502C               	movf	??_AppINT_USART1_RX,w,c
  2635  000474  262E               	addwf	??_AppINT_USART1_RX+2,f,c
  2636  000476  502D               	movf	??_AppINT_USART1_RX+1,w,c
  2637  000478  222F               	addwfc	??_AppINT_USART1_RX+3,f,c
  2638  00047A  0E00               	movlw	low _Buffer
  2639  00047C  242E               	addwf	??_AppINT_USART1_RX+2,w,c
  2640  00047E  6ED9               	movwf	fsr2l,c
  2641  000480  0E01               	movlw	high _Buffer
  2642  000482  202F               	addwfc	??_AppINT_USART1_RX+3,w,c
  2643  000484  6EDA               	movwf	fsr2h,c
  2644  000486  50DF               	movf	indf2,w,c
  2645  000488  6E30               	movwf	(??_AppINT_USART1_RX+4)& (0+255),c
  2646  00048A  5030               	movf	??_AppINT_USART1_RX+4,w,c
  2647  00048C  6E0A               	movwf	_channel,c
  2648  00048E  6A0B               	clrf	_channel+1,c
  2649                           
  2650                           ;app.c: 497: if(channel==0)
  2651  000490  500A               	movf	_channel,w,c
  2652  000492  100B               	iorwf	_channel+1,w,c
  2653  000494  A4D8               	btfss	status,2,c
  2654  000496  D003               	goto	i2l1533
  2655                           
  2656                           ;app.c: 498: ch0_len = len_package;
  2657  000498  C00F  F023         	movff	_len_package,_ch0_len
  2658  00049C  D035               	goto	i2l1561
  2659  00049E                     i2l1533:
  2660                           
  2661                           ;app.c: 499: else if(channel==1)
  2662  00049E  040A               	decf	_channel,w,c
  2663  0004A0  100B               	iorwf	_channel+1,w,c
  2664  0004A2  A4D8               	btfss	status,2,c
  2665  0004A4  D003               	goto	i2l1537
  2666                           
  2667                           ;app.c: 500: ch1_len = len_package;
  2668  0004A6  C00F  F022         	movff	_len_package,_ch1_len
  2669  0004AA  D02E               	goto	i2l1561
  2670  0004AC                     i2l1537:
  2671                           
  2672                           ;app.c: 501: else if(channel==2)
  2673  0004AC  0E02               	movlw	2
  2674  0004AE  180A               	xorwf	_channel,w,c
  2675  0004B0  100B               	iorwf	_channel+1,w,c
  2676  0004B2  A4D8               	btfss	status,2,c
  2677  0004B4  D003               	goto	i2l1541
  2678                           
  2679                           ;app.c: 502: ch2_len = len_package;
  2680  0004B6  C00F  F021         	movff	_len_package,_ch2_len
  2681  0004BA  D026               	goto	i2l1561
  2682  0004BC                     i2l1541:
  2683                           
  2684                           ;app.c: 503: else if(channel==3)
  2685  0004BC  0E03               	movlw	3
  2686  0004BE  180A               	xorwf	_channel,w,c
  2687  0004C0  100B               	iorwf	_channel+1,w,c
  2688  0004C2  A4D8               	btfss	status,2,c
  2689  0004C4  D003               	goto	i2l1545
  2690                           
  2691                           ;app.c: 504: ch3_len = len_package;
  2692  0004C6  C00F  F020         	movff	_len_package,_ch3_len
  2693  0004CA  D01E               	goto	i2l1561
  2694  0004CC                     i2l1545:
  2695                           
  2696                           ;app.c: 505: else if(channel==4)
  2697  0004CC  0E04               	movlw	4
  2698  0004CE  180A               	xorwf	_channel,w,c
  2699  0004D0  100B               	iorwf	_channel+1,w,c
  2700  0004D2  A4D8               	btfss	status,2,c
  2701  0004D4  D003               	goto	i2l1549
  2702                           
  2703                           ;app.c: 506: ch4_len = len_package;
  2704  0004D6  C00F  F01F         	movff	_len_package,_ch4_len
  2705  0004DA  D016               	goto	i2l1561
  2706  0004DC                     i2l1549:
  2707                           
  2708                           ;app.c: 507: else if(channel==5)
  2709  0004DC  0E05               	movlw	5
  2710  0004DE  180A               	xorwf	_channel,w,c
  2711  0004E0  100B               	iorwf	_channel+1,w,c
  2712  0004E2  A4D8               	btfss	status,2,c
  2713  0004E4  D003               	goto	i2l1553
  2714                           
  2715                           ;app.c: 508: ch5_len = len_package;
  2716  0004E6  C00F  F01E         	movff	_len_package,_ch5_len
  2717  0004EA  D00E               	goto	i2l1561
  2718  0004EC                     i2l1553:
  2719                           
  2720                           ;app.c: 509: else if(channel==6)
  2721  0004EC  0E06               	movlw	6
  2722  0004EE  180A               	xorwf	_channel,w,c
  2723  0004F0  100B               	iorwf	_channel+1,w,c
  2724  0004F2  A4D8               	btfss	status,2,c
  2725  0004F4  D003               	goto	i2l1557
  2726                           
  2727                           ;app.c: 510: ch6_len = len_package;
  2728  0004F6  C00F  F01D         	movff	_len_package,_ch6_len
  2729  0004FA  D006               	goto	i2l1561
  2730  0004FC                     i2l1557:
  2731                           
  2732                           ;app.c: 511: else if(channel==7)
  2733  0004FC  0E07               	movlw	7
  2734  0004FE  180A               	xorwf	_channel,w,c
  2735  000500  100B               	iorwf	_channel+1,w,c
  2736  000502  B4D8               	btfsc	status,2,c
  2737                           
  2738                           ;app.c: 512: ch7_len = len_package;
  2739  000504  C00F  F01C         	movff	_len_package,_ch7_len
  2740  000508                     i2l1561:
  2741                           
  2742                           ;app.c: 513: capturando = 1;
  2743  000508  0E01               	movlw	1
  2744  00050A  6E0E               	movwf	_capturando,c
  2745                           
  2746                           ;app.c: 514: Idx2 = 0;
  2747  00050C  0E00               	movlw	0
  2748  00050E  6E11               	movwf	_Idx2,c
  2749                           
  2750                           ;app.c: 515: }
  2751                           ;app.c: 516: }
  2752  000510  D031               	goto	i2l381
  2753  000512                     i2l1563:
  2754                           
  2755                           ;app.c: 517: else {
  2756                           ;app.c: 518: if(capturando){
  2757  000512  500E               	movf	_capturando,w,c
  2758  000514  B4D8               	btfsc	status,2,c
  2759  000516  D02E               	goto	i2l381
  2760                           
  2761                           ;app.c: 519: CH2[Idx2] = rxData;
  2762  000518  5011               	movf	_Idx2,w,c
  2763  00051A  0D01               	mullw	1
  2764  00051C  0E60               	movlw	low _CH2
  2765  00051E  24F3               	addwf	prodl,w,c
  2766  000520  6ED9               	movwf	fsr2l,c
  2767  000522  0E00               	movlw	high _CH2
  2768  000524  20F4               	addwfc	prodh,w,c
  2769  000526  6EDA               	movwf	fsr2h,c
  2770  000528  C033  FFDF         	movff	AppINT_USART1_RX@rxData,indf2
  2771                           
  2772                           ;app.c: 520: Idx1=0;
  2773  00052C  0E00               	movlw	0
  2774  00052E  6E12               	movwf	_Idx1,c
  2775                           
  2776                           ;app.c: 522: if(Idx2 >= len_package-2){
  2777  000530  0EFE               	movlw	254
  2778  000532  6E2C               	movwf	??_AppINT_USART1_RX& (0+255),c
  2779  000534  0EFF               	movlw	255
  2780  000536  6E2D               	movwf	(??_AppINT_USART1_RX+1)& (0+255),c
  2781  000538  500F               	movf	_len_package,w,c
  2782  00053A  6E2E               	movwf	(??_AppINT_USART1_RX+2)& (0+255),c
  2783  00053C  6A2F               	clrf	(??_AppINT_USART1_RX+3)& (0+255),c
  2784  00053E  502C               	movf	??_AppINT_USART1_RX,w,c
  2785  000540  262E               	addwf	??_AppINT_USART1_RX+2,f,c
  2786  000542  502D               	movf	??_AppINT_USART1_RX+1,w,c
  2787  000544  222F               	addwfc	??_AppINT_USART1_RX+3,f,c
  2788  000546  5011               	movf	_Idx2,w,c
  2789  000548  6E30               	movwf	(??_AppINT_USART1_RX+4)& (0+255),c
  2790  00054A  6A31               	clrf	(??_AppINT_USART1_RX+5)& (0+255),c
  2791  00054C  502E               	movf	??_AppINT_USART1_RX+2,w,c
  2792  00054E  5C30               	subwf	??_AppINT_USART1_RX+4,w,c
  2793  000550  5031               	movf	??_AppINT_USART1_RX+5,w,c
  2794  000552  0A80               	xorlw	128
  2795  000554  6E32               	movwf	(??_AppINT_USART1_RX+6)& (0+255),c
  2796  000556  502F               	movf	??_AppINT_USART1_RX+3,w,c
  2797  000558  0A80               	xorlw	128
  2798  00055A  5832               	subwfb	(??_AppINT_USART1_RX+6)& (0+255),w,c
  2799  00055C  A0D8               	btfss	status,0,c
  2800  00055E  D009               	goto	i2l1573
  2801                           
  2802                           ;app.c: 523: capturando=0;
  2803  000560  0E00               	movlw	0
  2804  000562  6E0E               	movwf	_capturando,c
  2805                           
  2806                           ;app.c: 524: Idx1=0;
  2807  000564  0E00               	movlw	0
  2808  000566  6E12               	movwf	_Idx1,c
  2809                           
  2810                           ;app.c: 525: Idx2=0;
  2811  000568  0E00               	movlw	0
  2812  00056A  6E11               	movwf	_Idx2,c
  2813                           
  2814                           ;app.c: 526: ShootLedsCh2 = 1;
  2815  00056C  0E01               	movlw	1
  2816  00056E  6E29               	movwf	_ShootLedsCh2,c
  2817                           
  2818                           ;app.c: 527: }
  2819  000570  D001               	goto	i2l381
  2820  000572                     i2l1573:
  2821                           
  2822                           ;app.c: 528: else
  2823                           ;app.c: 529: Idx2++;
  2824  000572  2A11               	incf	_Idx2,f,c
  2825  000574                     i2l381:
  2826                           
  2827                           ;app.c: 530: }
  2828                           ;app.c: 531: }
  2829                           ;app.c: 532: Idx1++;
  2830  000574  2A12               	incf	_Idx1,f,c
  2831  000576  0012               	return		;funcret
  2832  000578                     __end_of_AppINT_USART1_RX:
  2833                           	opt stack 0
  2834  0000                     pclatu	equ	0xFFB
  2835                           pclath	equ	0xFFA
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           prodh	equ	0xFF4
  2841                           prodl	equ	0xFF3
  2842                           intcon	equ	0xFF2
  2843                           intcon2	equ	0xFF1
  2844                           postinc0	equ	0xFEE
  2845                           fsr0h	equ	0xFEA
  2846                           fsr0l	equ	0xFE9
  2847                           wreg	equ	0xFE8
  2848                           postdec1	equ	0xFE5
  2849                           fsr1h	equ	0xFE2
  2850                           fsr1l	equ	0xFE1
  2851                           indf2	equ	0xFDF
  2852                           postinc2	equ	0xFDE
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           pclatu	equ	0xFFB
  2857                           pclath	equ	0xFFA
  2858                           tblptru	equ	0xFF8
  2859                           tblptrh	equ	0xFF7
  2860                           tblptrl	equ	0xFF6
  2861                           tablat	equ	0xFF5
  2862                           prodh	equ	0xFF4
  2863                           prodl	equ	0xFF3
  2864                           intcon	equ	0xFF2
  2865                           intcon2	equ	0xFF1
  2866                           postinc0	equ	0xFEE
  2867                           fsr0h	equ	0xFEA
  2868                           fsr0l	equ	0xFE9
  2869                           wreg	equ	0xFE8
  2870                           postdec1	equ	0xFE5
  2871                           fsr1h	equ	0xFE2
  2872                           fsr1l	equ	0xFE1
  2873                           indf2	equ	0xFDF
  2874                           postinc2	equ	0xFDE
  2875                           fsr2h	equ	0xFDA
  2876                           fsr2l	equ	0xFD9
  2877                           status	equ	0xFD8
  2878                           
  2879                           	psect	rparam
  2880  0000                     pclatu	equ	0xFFB
  2881                           pclath	equ	0xFFA
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           prodh	equ	0xFF4
  2887                           prodl	equ	0xFF3
  2888                           intcon	equ	0xFF2
  2889                           intcon2	equ	0xFF1
  2890                           postinc0	equ	0xFEE
  2891                           fsr0h	equ	0xFEA
  2892                           fsr0l	equ	0xFE9
  2893                           wreg	equ	0xFE8
  2894                           postdec1	equ	0xFE5
  2895                           fsr1h	equ	0xFE2
  2896                           fsr1l	equ	0xFE1
  2897                           indf2	equ	0xFDF
  2898                           postinc2	equ	0xFDE
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903                           	psect	temp
  2904  00004C                     btemp:
  2905                           	opt stack 0
  2906  00004C                     	ds	1
  2907  0000                     int$flags	set	btemp
  2908                           pclatu	equ	0xFFB
  2909                           pclath	equ	0xFFA
  2910                           tblptru	equ	0xFF8
  2911                           tblptrh	equ	0xFF7
  2912                           tblptrl	equ	0xFF6
  2913                           tablat	equ	0xFF5
  2914                           prodh	equ	0xFF4
  2915                           prodl	equ	0xFF3
  2916                           intcon	equ	0xFF2
  2917                           intcon2	equ	0xFF1
  2918                           postinc0	equ	0xFEE
  2919                           fsr0h	equ	0xFEA
  2920                           fsr0l	equ	0xFE9
  2921                           wreg	equ	0xFE8
  2922                           postdec1	equ	0xFE5
  2923                           fsr1h	equ	0xFE2
  2924                           fsr1l	equ	0xFE1
  2925                           indf2	equ	0xFDF
  2926                           postinc2	equ	0xFDE
  2927                           fsr2h	equ	0xFDA
  2928                           fsr2l	equ	0xFD9
  2929                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      75
    BANK0           160      0     128
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _AppTimer1ms->_SendBuffCh2
    _EUSART1_Receive_ISR->_AppINT_USART1_RX

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _AppInitialize
                         _AppProcess
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AppProcess                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AppInitialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0     682
                                              9 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     614
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0     614
                       _AppTimer30us
 ---------------------------------------------------------------------------------
 (7) _AppTimer30us                                         0     0      0     614
                        _AppTimer1ms
 ---------------------------------------------------------------------------------
 (8) _AppTimer1ms                                          0     0      0     614
                        _SendBuffCh2
 ---------------------------------------------------------------------------------
 (9) _SendBuffCh2                                          3     1      2     614
                                              0 COMRAM     3     1      2
                               _um_0
                             _zero_0
 ---------------------------------------------------------------------------------
 (10) _zero_0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _um_0                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0      68
                                              8 COMRAM     1     1      0
                   _AppINT_USART1_RX
 ---------------------------------------------------------------------------------
 (6) _AppINT_USART1_RX                                     8     8      0      44
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppInitialize
   _AppProcess
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _AppINT_USART1_RX
   _EUSART1_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack
       _AppTimer30us
         _AppTimer1ms
           _SendBuffCh2
             _um_0
             _zero_0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      80       6       50.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      80       4       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      4B       1       79.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14B       9        0.0%
DATA                 0      0     14B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May 23 00:17:59 2021

                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                __end_of_AppTimer1ms 06A4                __end_of_AppInitialize 0794  
                                l123 0764                                  _CH0 0001  
                                l181 0756                                  _CH1 00A0  
                                _CH2 0060                                  l272 07A2  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                prod 000FF3                                  wreg 000FE8  
               __end_of_AppTimer30us 05F6                         __CFG_LVP$OFF 000000  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 i2l91 004E  
                               i2l92 006E                                 i2l93 005A  
                               i2l95 0066                                 _WPUB 000F61  
                               _Idx0 0013                                 _Idx1 0012  
                               _Idx2 0011                                 _main 0746  
                               _um_0 06A4                      _TMR0_StartTimer 079A  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 004C  
                      __CFG_BORV$190 000000                                 _type 0008  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00AC                        __CFG_IESO$OFF 000000  
                       ___param_bank 000000                           _AppProcess 07A2  
            __end_of_TMR0_Initialize 0746       __size_of_OSCILLATOR_Initialize 0012  
      __end_of_OSCILLATOR_Initialize 076A                 AppTimer30us@count1ms 0049  
                              ?_main 002C                                ?_um_0 002C  
                              _T0CON 000FD5                                _LATB1 007C51  
                              i2l169 070E                                i2l381 0574  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 079E  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                     __end_of_TMR0_ISR 077A  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                              _ftest 004B                   __CFG_MCLRE$EXTMCLR 000000  
                              pclath 000FFA                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                     _AppINT_USART1_RX 03B4  
                      ??_SendBuffCh2 002E                      __initialization 05F6  
                        _AppTimer1ms 0676           __end_of_EUSART1_Initialize 0702  
                       __end_of_main 0758                         __end_of_um_0 06C8  
              SendBuffCh2@idx_color1 002E                SendBuffCh2@idx_color2 002C  
              SendBuffCh2@idx_color3 002D          ?_INTERRUPT_InterruptManager 002C  
                             ??_main 0000                               ??_um_0 002C  
                      __activetblptr 000000                       __CFG_PLLCFG$ON 000000  
              ?_EUSART1_Transmit_ISR 002C                AppTimer30us@count10ms 0047  
            __end_of_TMR0_StartTimer 079E                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _RC1STA 000FAB                               i2l1401 020E  
                             i2l1403 0212                               i2l1421 0272  
                             i2l1413 024E                               i2l1341 00CE  
                             i2l1431 02AE                               i2l1415 0252  
                             i2l1407 022E                               i2l1343 00D2  
                             i2l1511 05CE                               i2l1433 02B2  
                             i2l1425 028E                               i2l1409 0232  
                             i2l1361 0132                               i2l1353 010E  
                             i2l1505 05B0                               i2l1451 0312  
                             i2l1443 02EE                               i2l1427 0292  
                             i2l1419 026E                               i2l1371 016E  
                             i2l1355 0112                               i2l1347 00EE  
                             i2l1541 04BC                               i2l1533 049E  
                             i2l1461 034E                               i2l1445 02F2  
                             i2l1437 02CE                               i2l1373 0172  
                             i2l1365 014E                               i2l1349 00F2  
                             i2l1517 05EC                               i2l1463 0352  
                             i2l1455 032E                               i2l1439 02D2  
                             i2l1391 01D2                               i2l1383 01AE  
                             i2l1367 0152                               i2l1359 012E  
                             i2l1553 04EC                               i2l1545 04CC  
                             i2l1537 04AC                               i2l1561 0508  
                             i2l1473 038E                               i2l1457 0332  
                             i2l1449 030E                               i2l1385 01B2  
                             i2l1377 018E                               i2l1563 0512  
                             i2l1475 0392                               i2l1467 036E  
                             i2l1395 01EE                               i2l1379 0192  
                             i2l1573 0572                               i2l1557 04FC  
                             i2l1549 04DC                               i2l1469 0372  
                             i2l1397 01F2                               i2l1389 01CE  
                             i2l1485 0682                       __CFG_WDTEN$OFF 000000  
                             i2l1479 03AE                               i2l1489 0696  
                             i2l1497 058E                               _RCREG1 000FAE  
                             _OSCCON 000FD3                               _PLLRDY 007E97  
                             _SPBRG1 000FAF                               _TX1STA 000FAC  
                             _TXREG1 000FAD                               _Buffer 0100  
                     __CFG_XINST$OFF 000000                          ?_AppProcess 002C  
                     __CFG_STVREN$ON 000000                     ?_TMR0_Initialize 002C  
                             clear_0 061C                               clear_1 0628  
                             clear_2 0634                  __end_of_SendBuffCh2 03B4  
                             _zero_0 06C8                __size_of_AppTimer30us 007E  
                       __pdataCOMRAM 0043                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
              __end_of_TMR0_CallBack 079A        __size_of_INTERRUPT_Initialize 000A  
                  _SYSTEM_Initialize 071A                           __accesstop 0060  
            __end_of__initialization 063A                   ?_SYSTEM_Initialize 002C  
                      ___rparam_used 000001                       __pcstackCOMRAM 002C  
                       _AppTimer30us 0578                  ??_SYSTEM_Initialize 0000  
                          ?_TMR0_ISR 002C               ??_EUSART1_Transmit_ISR 002C  
        __end_of_EUSART1_Receive_ISR 071A                     ?_TMR0_StartTimer 002C  
          __end_of_SYSTEM_Initialize 0730                  __size_of_AppProcess 0002  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
             AppTimer30us@count100ms 0045                   __CFG_CCP2MX$PORTC1 000000  
                         _capturando 000E                          _SendBuffCh2 00B0  
                         ??_TMR0_ISR 002F                   __CFG_CCP3MX$PORTB5 000000  
                            ?_zero_0 002C             __end_of_AppINT_USART1_RX 0578  
                            _OSCCON2 000FD2                              _OSCTUNE 000F9B  
                            i2u80_40 0586                              i2u81_40 05A8  
                            i2u82_40 05C6                              i2u83_40 05E4  
                            _SPBRGH1 000FB0               __size_of_AppInitialize 0006  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000      EUSART1_Receive_ISR@byteReceived 0034  
                            _ch0_len 0023                              _ch1_len 0022  
                            _ch2_len 0021                              _ch3_len 0020  
                            _ch4_len 001F                              _ch5_len 001E  
                            _ch6_len 001D                              _ch7_len 001C  
                       ?_AppTimer1ms 002C                              _channel 000A  
                            __pcinit 05F6                              __ramtop 0600  
                            __ptext0 0746                              __ptext1 071A  
                            __ptext2 0730                              __ptext3 079A  
                            __ptext4 0644                              __ptext5 0758  
                            __ptext6 077A                              __ptext7 06E6  
                            __ptext8 07A2                              __ptext9 078E  
                          _T0CONbits 000FD5                      __size_of_zero_0 001E  
              _OSCILLATOR_Initialize 0758                   _EUSART1_Initialize 06E6  
           ??_PIN_MANAGER_Initialize 0000           __size_of_SYSTEM_Initialize 0016  
               end_of_initialization 063A                  ?_EUSART1_Initialize 002C  
                       ??_AppProcess 0000                              postdec1 000FE5  
                            postinc0 000FEE                              postinc2 000FDE  
               ??_EUSART1_Initialize 0000                        _AppInitialize 078E  
                 __end_of_AppProcess 07A4                 _timer0ReloadVal16bit 000C  
       __end_of_INTERRUPT_Initialize 0784                        __pidataCOMRAM 0784  
                  __size_of_TMR0_ISR 0010               ?_OSCILLATOR_Initialize 002C  
                     ?_AppInitialize 002C                       __end_of_zero_0 06E6  
                start_initialization 05F6             __size_of_TMR0_Initialize 0016  
    __size_of_PIN_MANAGER_Initialize 0032                         ?_SendBuffCh2 002C  
             __size_of_TMR0_CallBack 0006                 __size_of_AppTimer1ms 002E  
                           ??_zero_0 002C                          __pbssCOMRAM 0001  
      __size_of_EUSART1_Transmit_ISR 0004                        __pcstackBANK0 0000  
                  ?_AppINT_USART1_RX 002C                   ??_AppINT_USART1_RX 002C  
            AppTimer30us@count1000ms 0043         __size_of_EUSART1_Receive_ISR 0018  
             AppINT_USART1_RX@rxData 0033             __size_of_TMR0_StartTimer 0004  
             _PIN_MANAGER_Initialize 0644                            __pintcode 0008  
                    ??_AppInitialize 0000         ??_INTERRUPT_InterruptManager 0035  
                   __CFG_PRICLKEN$ON 000000                             _BAUD1CON 000FB8  
                      _TMR0_CallBack 0794                 _INTERRUPT_Initialize 077A  
                  ??_TMR0_Initialize 0000                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 00A4  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _TMR0_ISR 076A  
                     ?_TMR0_CallBack 002C                             _IdxFrame 0010  
                        _INTCON2bits 000FF1                            copy_data0 060A  
              ?_INTERRUPT_Initialize 002C                          _len_package 000F  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                        ?_AppTimer30us 002C  
                  __CFG_P2BMX$PORTB5 000000              ??_OSCILLATOR_Initialize 0000  
                  ??_TMR0_StartTimer 0000                 __size_of_SendBuffCh2 0304  
        __size_of_EUSART1_Initialize 001C                             __ptext11 076A  
                           __ptext20 03B4                             __ptext12 0794  
                           __ptext13 0578                             __ptext14 0676  
                           __ptext15 00B0                             __ptext16 06C8  
                           __ptext17 06A4                             __ptext18 079E  
                           __ptext19 0702                         _ShootLedsCh0 002B  
                       _ShootLedsCh1 002A                         _ShootLedsCh2 0029  
                       _ShootLedsCh3 0028                         _ShootLedsCh4 0027  
                       _ShootLedsCh5 0026                         _ShootLedsCh6 0025  
                       _ShootLedsCh7 0024                        __size_of_main 0012  
                      __size_of_um_0 0024                             _send_ch0 001B  
                           _send_ch1 001A                             _send_ch2 0019  
                           _send_ch3 0018                             _send_ch4 0017  
                           _send_ch5 0016                             _send_ch6 0015  
                           _send_ch7 0014                       ??_AppTimer30us 002F  
                         _RC1STAbits 000FAB                             int$flags 004C  
 __end_of_INTERRUPT_InterruptManager 00AC           _INTERRUPT_InterruptManager 0008  
                _EUSART1_Receive_ISR 0702                           _INTCONbits 000FF2  
                    ??_TMR0_CallBack 002F               ??_INTERRUPT_Initialize 0000  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 002C  
            ?_PIN_MANAGER_Initialize 002C         __end_of_EUSART1_Transmit_ISR 07A2  
          __size_of_AppINT_USART1_RX 01C4                        ??_AppTimer1ms 002F  
                    _TMR0_Initialize 0730                    __CFG_T3CMX$PORTC0 000000  
              ??_EUSART1_Receive_ISR 0034       __end_of_PIN_MANAGER_Initialize 0676  
                  __CFG_FOSC$INTIO67 000000  
