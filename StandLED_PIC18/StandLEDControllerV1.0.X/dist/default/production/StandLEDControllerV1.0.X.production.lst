

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat May 22 18:40:18 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 1.41
    46                           ; Generated 25/01/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F25K22 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  00074C                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for AppTimer30us@count1000ms
    85  00074C  0009               	dw	9
    86                           
    87                           ;initializer for AppTimer30us@count100ms
    88  00074E  0009               	dw	9
    89                           
    90                           ;initializer for AppTimer30us@count10ms
    91  000750  0009               	dw	9
    92                           
    93                           ;initializer for AppTimer30us@count1ms
    94  000752  0004               	dw	4
    95                           
    96                           ;initializer for _ftest
    97  000754  01                 	db	1
    98  0000                     _ANSELC	set	3898
    99  0000                     _ANSELB	set	3897
   100  0000                     _ANSELA	set	3896
   101  0000                     _RCREG1	set	4014
   102  0000                     _RC1STAbits	set	4011
   103  0000                     _TXREG1	set	4013
   104  0000                     _SPBRG1	set	4015
   105  0000                     _SPBRGH1	set	4016
   106  0000                     _TX1STA	set	4012
   107  0000                     _RC1STA	set	4011
   108  0000                     _BAUD1CON	set	4024
   109  0000                     _OSCTUNE	set	3995
   110  0000                     _OSCCON2	set	4050
   111  0000                     _OSCCON	set	4051
   112  0000                     _PIR1bits	set	3998
   113  0000                     _PIE1bits	set	3997
   114  0000                     _IPR1bits	set	3999
   115  0000                     _RCONbits	set	4048
   116  0000                     _INTCON2bits	set	4081
   117  0000                     _TRISC	set	3988
   118  0000                     _LATC	set	3979
   119  0000                     _WPUB	set	3937
   120  0000                     _TRISB	set	3987
   121  0000                     _LATB	set	3978
   122  0000                     _TRISA	set	3986
   123  0000                     _LATA	set	3977
   124  0000                     _T0CONbits	set	4053
   125  0000                     _INTCONbits	set	4082
   126  0000                     _TMR0L	set	4054
   127  0000                     _TMR0H	set	4055
   128  0000                     _T0CON	set	4053
   129  0000                     _LATB1	set	31825
   130  0000                     _PLLRDY	set	32407
   131                           
   132                           ; #config settings
   133  0000                     
   134                           	psect	cinit
   135  0004E0                     __pcinit:
   136                           	opt stack 0
   137  0004E0                     start_initialization:
   138                           	opt stack 0
   139  0004E0                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Initialize objects allocated to COMRAM (9 bytes)
   143                           ; load TBLPTR registers with __pidataCOMRAM
   144  0004E0  0E4C               	movlw	low __pidataCOMRAM
   145  0004E2  6EF6               	movwf	tblptrl,c
   146  0004E4  0E07               	movlw	high __pidataCOMRAM
   147  0004E6  6EF7               	movwf	tblptrh,c
   148  0004E8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   149  0004EA  6EF8               	movwf	tblptru,c
   150  0004EC  EE00  F053         	lfsr	0,__pdataCOMRAM
   151  0004F0  EE10 F009          	lfsr	1,9
   152  0004F4                     copy_data0:
   153  0004F4  0009               	tblrd		*+
   154  0004F6  CFF5 FFEE          	movff	tablat,postinc0
   155  0004FA  50E5               	movf	postdec1,w,c
   156  0004FC  50E1               	movf	fsr1l,w,c
   157  0004FE  E1FA               	bnz	copy_data0
   158                           
   159                           ; Clear objects allocated to BANK4 (192 bytes)
   160  000500  EE04  F000         	lfsr	0,__pbssBANK4
   161  000504  0EC0               	movlw	192
   162  000506                     clear_0:
   163  000506  6AEE               	clrf	postinc0,c
   164  000508  06E8               	decf	wreg,f,c
   165  00050A  E1FD               	bnz	clear_0
   166                           
   167                           ; Clear objects allocated to BANK3 (256 bytes)
   168  00050C  EE03  F000         	lfsr	0,__pbssBANK3
   169  000510  EE11 F000          	lfsr	1,256
   170  000514                     clear_1:
   171  000514  6AEE               	clrf	postinc0,c
   172  000516  50E5               	movf	postdec1,w,c
   173  000518  50E1               	movf	fsr1l,w,c
   174  00051A  E1FC               	bnz	clear_1
   175  00051C  50E2               	movf	fsr1h,w,c
   176  00051E  E1FA               	bnz	clear_1
   177                           
   178                           ; Clear objects allocated to BANK2 (256 bytes)
   179  000520  EE02  F000         	lfsr	0,__pbssBANK2
   180  000524  EE11 F000          	lfsr	1,256
   181  000528                     clear_2:
   182  000528  6AEE               	clrf	postinc0,c
   183  00052A  50E5               	movf	postdec1,w,c
   184  00052C  50E1               	movf	fsr1l,w,c
   185  00052E  E1FC               	bnz	clear_2
   186  000530  50E2               	movf	fsr1h,w,c
   187  000532  E1FA               	bnz	clear_2
   188                           
   189                           ; Clear objects allocated to BANK1 (256 bytes)
   190  000534  EE01  F000         	lfsr	0,__pbssBANK1
   191  000538  EE11 F000          	lfsr	1,256
   192  00053C                     clear_3:
   193  00053C  6AEE               	clrf	postinc0,c
   194  00053E  50E5               	movf	postdec1,w,c
   195  000540  50E1               	movf	fsr1l,w,c
   196  000542  E1FC               	bnz	clear_3
   197  000544  50E2               	movf	fsr1h,w,c
   198  000546  E1FA               	bnz	clear_3
   199                           
   200                           ; Clear objects allocated to BANK0 (149 bytes)
   201  000548  EE00  F060         	lfsr	0,__pbssBANK0
   202  00054C  0E95               	movlw	149
   203  00054E                     clear_4:
   204  00054E  6AEE               	clrf	postinc0,c
   205  000550  06E8               	decf	wreg,f,c
   206  000552  E1FD               	bnz	clear_4
   207                           
   208                           ; Clear objects allocated to COMRAM (60 bytes)
   209  000554  EE00  F001         	lfsr	0,__pbssCOMRAM
   210  000558  0E3C               	movlw	60
   211  00055A                     clear_5:
   212  00055A  6AEE               	clrf	postinc0,c
   213  00055C  06E8               	decf	wreg,f,c
   214  00055E  E1FD               	bnz	clear_5
   215  000560                     end_of_initialization:
   216                           	opt stack 0
   217  000560                     __end_of__initialization:
   218                           	opt stack 0
   219  000560  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   220  000562  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   221  000564  0100               	movlb	0
   222  000566  EF87  F003         	goto	_main	;jump to C main() function
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           postdec1	equ	0xFE5
   230                           fsr1h	equ	0xFE2
   231                           fsr1l	equ	0xFE1
   232                           
   233                           	psect	bssCOMRAM
   234  000001                     __pbssCOMRAM:
   235                           	opt stack 0
   236  000001                     _B0:
   237                           	opt stack 0
   238  000001                     	ds	7
   239  000008                     _G0:
   240                           	opt stack 0
   241  000008                     	ds	7
   242  00000F                     _R0:
   243                           	opt stack 0
   244  00000F                     	ds	7
   245  000016                     _CH0:
   246                           	opt stack 0
   247  000016                     	ds	7
   248  00001D                     AppINT_USART1_RX@len_package:
   249                           	opt stack 0
   250  00001D                     	ds	2
   251  00001F                     _ch0_len:
   252                           	opt stack 0
   253  00001F                     	ds	2
   254  000021                     _type:
   255                           	opt stack 0
   256  000021                     	ds	2
   257  000023                     _channel:
   258                           	opt stack 0
   259  000023                     	ds	2
   260  000025                     _Idx3:
   261                           	opt stack 0
   262  000025                     	ds	2
   263  000027                     _Idx2:
   264                           	opt stack 0
   265  000027                     	ds	2
   266  000029                     	ds	2
   267  00002B                     	ds	2
   268  00002D                     	ds	2
   269  00002F                     	ds	2
   270  000031                     	ds	2
   271  000033                     	ds	2
   272  000035                     _ShootLedsCh0:
   273                           	opt stack 0
   274  000035                     	ds	2
   275  000037                     _timer0ReloadVal16bit:
   276                           	opt stack 0
   277  000037                     	ds	2
   278  000039                     AppINT_USART1_RX@capturando:
   279                           	opt stack 0
   280  000039                     	ds	1
   281  00003A                     _send_ch0:
   282                           	opt stack 0
   283  00003A                     	ds	1
   284  00003B                     _IdxFrame:
   285                           	opt stack 0
   286  00003B                     	ds	1
   287  00003C                     _Idx:
   288                           	opt stack 0
   289  00003C                     	ds	1
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           postdec1	equ	0xFE5
   297                           fsr1h	equ	0xFE2
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	dataCOMRAM
   301  000053                     __pdataCOMRAM:
   302                           	opt stack 0
   303  000053                     AppTimer30us@count1000ms:
   304                           	opt stack 0
   305  000053                     	ds	2
   306  000055                     AppTimer30us@count100ms:
   307                           	opt stack 0
   308  000055                     	ds	2
   309  000057                     AppTimer30us@count10ms:
   310                           	opt stack 0
   311  000057                     	ds	2
   312  000059                     AppTimer30us@count1ms:
   313                           	opt stack 0
   314  000059                     	ds	2
   315  00005B                     _ftest:
   316                           	opt stack 0
   317  00005B                     	ds	1
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1h	equ	0xFE2
   326                           fsr1l	equ	0xFE1
   327                           
   328                           	psect	bssBANK0
   329  000060                     __pbssBANK0:
   330                           	opt stack 0
   331  000060                     _Buffer:
   332                           	opt stack 0
   333  000060                     	ds	128
   334  0000E0                     	ds	7
   335  0000E7                     	ds	7
   336  0000EE                     	ds	7
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           postdec1	equ	0xFE5
   344                           fsr1h	equ	0xFE2
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	bssBANK1
   348  000100                     __pbssBANK1:
   349                           	opt stack 0
   350  000100                     	ds	64
   351  000140                     	ds	64
   352  000180                     	ds	64
   353  0001C0                     	ds	64
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           postdec1	equ	0xFE5
   361                           fsr1h	equ	0xFE2
   362                           fsr1l	equ	0xFE1
   363                           
   364                           	psect	bssBANK2
   365  000200                     __pbssBANK2:
   366                           	opt stack 0
   367  000200                     	ds	64
   368  000240                     	ds	64
   369  000280                     	ds	64
   370  0002C0                     	ds	64
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           postdec1	equ	0xFE5
   378                           fsr1h	equ	0xFE2
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	bssBANK3
   382  000300                     __pbssBANK3:
   383                           	opt stack 0
   384  000300                     	ds	64
   385  000340                     	ds	64
   386  000380                     	ds	64
   387  0003C0                     	ds	64
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1h	equ	0xFE2
   396                           fsr1l	equ	0xFE1
   397                           
   398                           	psect	bssBANK4
   399  000400                     __pbssBANK4:
   400                           	opt stack 0
   401  000400                     	ds	64
   402  000440                     	ds	64
   403  000480                     	ds	64
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           postdec1	equ	0xFE5
   411                           fsr1h	equ	0xFE2
   412                           fsr1l	equ	0xFE1
   413                           
   414                           	psect	cstackBANK0
   415  000000                     __pcstackBANK0:
   416                           	opt stack 0
   417  000000                     tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           postdec1	equ	0xFE5
   424                           fsr1h	equ	0xFE2
   425                           fsr1l	equ	0xFE1
   426                           
   427                           ; 1 bytes @ 0x0
   428                           
   429                           	psect	cstackCOMRAM
   430  00003D                     __pcstackCOMRAM:
   431                           	opt stack 0
   432  00003D                     EUSART1_Write@txData:
   433                           	opt stack 0
   434  00003D                     SendBuffCh0@idx_color2:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x0
   438  00003D                     	ds	1
   439  00003E                     ??_AppINT_USART1_RX:
   440  00003E                     SendBuffCh0@idx_color3:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x1
   444  00003E                     	ds	1
   445  00003F                     SendBuffCh0@idx_color1:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x2
   449  00003F                     	ds	1
   450  000040                     ??_AppTimer1ms:
   451                           
   452                           ; 1 bytes @ 0x3
   453  000040                     	ds	3
   454  000043                     AppINT_USART1_RX@rxData:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x6
   458  000043                     	ds	1
   459  000044                     EUSART1_Receive_ISR@byteReceived:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x7
   463  000044                     	ds	1
   464  000045                     ??_INTERRUPT_InterruptManager:
   465                           
   466                           ; 1 bytes @ 0x8
   467  000045                     	ds	14
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1h	equ	0xFE2
   476                           fsr1l	equ	0xFE1
   477                           
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 5 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   497 ;;      Params:         0       0       0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0
   500 ;;      Totals:         0       0       0       0       0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels required when called:   10
   503 ;; This function calls:
   504 ;;		_AppInitialize
   505 ;;		_AppProcess
   506 ;;		_SYSTEM_Initialize
   507 ;; This function is called by:
   508 ;;		Startup code after reset
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text0
   513  00070E                     __ptext0:
   514                           	opt stack 0
   515  00070E                     _main:
   516                           	opt stack 21
   517                           
   518                           ;main.c: 7: SYSTEM_Initialize();
   519                           
   520                           ;incstack = 0
   521  00070E  EC71  F003         	call	_SYSTEM_Initialize	;wreg free
   522                           
   523                           ;main.c: 8: AppInitialize();
   524  000712  ECAF  F003         	call	_AppInitialize	;wreg free
   525                           
   526                           ;main.c: 10: (INTCONbits.GIE = 1);
   527  000716  8EF2               	bsf	intcon,7,c	;volatile
   528                           
   529                           ;main.c: 12: (INTCONbits.PEIE = 1);
   530  000718  8CF2               	bsf	intcon,6,c	;volatile
   531                           
   532                           ;main.c: 14: AppProcess();
   533  00071A  ECB9  F003         	call	_AppProcess	;wreg free
   534  00071E                     l181:
   535  00071E  D7FF               	goto	l181
   536  000720                     __end_of_main:
   537                           	opt stack 0
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           intcon	equ	0xFF2
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           postdec1	equ	0xFE5
   546                           fsr1h	equ	0xFE2
   547                           fsr1l	equ	0xFE1
   548                           
   549 ;; *************** function _SYSTEM_Initialize *****************
   550 ;; Defined at:
   551 ;;		line 66 in file "mcc_generated_files/mcc.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   565 ;;      Params:         0       0       0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    9
   572 ;; This function calls:
   573 ;;		_EUSART1_Initialize
   574 ;;		_INTERRUPT_Initialize
   575 ;;		_OSCILLATOR_Initialize
   576 ;;		_PIN_MANAGER_Initialize
   577 ;;		_TMR0_Initialize
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text1
   584  0006E2                     __ptext1:
   585                           	opt stack 0
   586  0006E2                     _SYSTEM_Initialize:
   587                           	opt stack 21
   588                           
   589                           ;mcc.c: 68: OSCILLATOR_Initialize();
   590                           
   591                           ;incstack = 0
   592  0006E2  EC90  F003         	call	_OSCILLATOR_Initialize	;wreg free
   593                           
   594                           ;mcc.c: 69: PIN_MANAGER_Initialize();
   595  0006E6  EC1D  F003         	call	_PIN_MANAGER_Initialize	;wreg free
   596                           
   597                           ;mcc.c: 70: INTERRUPT_Initialize();
   598  0006EA  ECA1  F003         	call	_INTERRUPT_Initialize	;wreg free
   599                           
   600                           ;mcc.c: 71: TMR0_Initialize();
   601  0006EE  EC7C  F003         	call	_TMR0_Initialize	;wreg free
   602                           
   603                           ;mcc.c: 72: EUSART1_Initialize();
   604  0006F2  EC57  F003         	call	_EUSART1_Initialize	;wreg free
   605  0006F6  0012               	return		;funcret
   606  0006F8                     __end_of_SYSTEM_Initialize:
   607                           	opt stack 0
   608                           tblptru	equ	0xFF8
   609                           tblptrh	equ	0xFF7
   610                           tblptrl	equ	0xFF6
   611                           tablat	equ	0xFF5
   612                           intcon	equ	0xFF2
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           postdec1	equ	0xFE5
   616                           fsr1h	equ	0xFE2
   617                           fsr1l	equ	0xFE1
   618                           
   619 ;; *************** function _TMR0_Initialize *****************
   620 ;; Defined at:
   621 ;;		line 18 in file "mcc_generated_files/tmr0.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   635 ;;      Params:         0       0       0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    8
   642 ;; This function calls:
   643 ;;		_TMR0_StartTimer
   644 ;; This function is called by:
   645 ;;		_SYSTEM_Initialize
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text2
   650  0006F8                     __ptext2:
   651                           	opt stack 0
   652  0006F8                     _TMR0_Initialize:
   653                           	opt stack 21
   654                           
   655                           ;tmr0.c: 23: T0CON = 0b11000000;
   656                           
   657                           ;incstack = 0
   658  0006F8  0EC0               	movlw	192
   659  0006FA  6ED5               	movwf	4053,c	;volatile
   660                           
   661                           ;tmr0.c: 30: TMR0H = 1;
   662  0006FC  0E01               	movlw	1
   663  0006FE  6ED7               	movwf	4055,c	;volatile
   664                           
   665                           ;tmr0.c: 31: TMR0L = 19;
   666  000700  0E13               	movlw	19
   667  000702  6ED6               	movwf	4054,c	;volatile
   668                           
   669                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
   670  000704  94F2               	bcf	intcon,2,c	;volatile
   671                           
   672                           ;tmr0.c: 41: INTCONbits.TMR0IE = 1;
   673  000706  8AF2               	bsf	intcon,5,c	;volatile
   674                           
   675                           ;tmr0.c: 43: TMR0_StartTimer();
   676  000708  ECB5  F003         	call	_TMR0_StartTimer	;wreg free
   677  00070C  0012               	return		;funcret
   678  00070E                     __end_of_TMR0_Initialize:
   679                           	opt stack 0
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           intcon	equ	0xFF2
   685                           postinc0	equ	0xFEE
   686                           wreg	equ	0xFE8
   687                           postdec1	equ	0xFE5
   688                           fsr1h	equ	0xFE2
   689                           fsr1l	equ	0xFE1
   690                           
   691 ;; *************** function _TMR0_StartTimer *****************
   692 ;; Defined at:
   693 ;;		line 48 in file "mcc_generated_files/tmr0.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		None
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   707 ;;      Params:         0       0       0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0
   710 ;;      Totals:         0       0       0       0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    7
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_TMR0_Initialize
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text3
   722  00076A                     __ptext3:
   723                           	opt stack 0
   724  00076A                     _TMR0_StartTimer:
   725                           	opt stack 21
   726                           
   727                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
   728                           
   729                           ;incstack = 0
   730  00076A  8ED5               	bsf	4053,7,c	;volatile
   731  00076C  0012               	return		;funcret
   732  00076E                     __end_of_TMR0_StartTimer:
   733                           	opt stack 0
   734                           tblptru	equ	0xFF8
   735                           tblptrh	equ	0xFF7
   736                           tblptrl	equ	0xFF6
   737                           tablat	equ	0xFF5
   738                           intcon	equ	0xFF2
   739                           postinc0	equ	0xFEE
   740                           wreg	equ	0xFE8
   741                           postdec1	equ	0xFE5
   742                           fsr1h	equ	0xFE2
   743                           fsr1l	equ	0xFE1
   744                           
   745 ;; *************** function _PIN_MANAGER_Initialize *****************
   746 ;; Defined at:
   747 ;;		line 4 in file "mcc_generated_files/pin_manager.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   761 ;;      Params:         0       0       0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    7
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_SYSTEM_Initialize
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text4
   776  00063A                     __ptext4:
   777                           	opt stack 0
   778  00063A                     _PIN_MANAGER_Initialize:
   779                           	opt stack 22
   780                           
   781                           ;pin_manager.c: 5: LATA = 0x00;
   782                           
   783                           ;incstack = 0
   784  00063A  0E00               	movlw	0
   785  00063C  6E89               	movwf	3977,c	;volatile
   786                           
   787                           ;pin_manager.c: 6: TRISA = 0b00001011;
   788  00063E  0E0B               	movlw	11
   789  000640  6E92               	movwf	3986,c	;volatile
   790                           
   791                           ;pin_manager.c: 7: ANSELA = 0b00000000;
   792  000642  0E00               	movlw	0
   793  000644  010F               	movlb	15	; () banked
   794  000646  6F38               	movwf	56,b	;volatile
   795                           
   796                           ;pin_manager.c: 9: LATB = 0b00000000;
   797  000648  0E00               	movlw	0
   798  00064A  6E8A               	movwf	3978,c	;volatile
   799                           
   800                           ;pin_manager.c: 10: TRISB = 0b00000000;
   801  00064C  0E00               	movlw	0
   802  00064E  6E93               	movwf	3987,c	;volatile
   803                           
   804                           ;pin_manager.c: 11: ANSELB = 0b00000000;
   805  000650  0E00               	movlw	0
   806  000652  010F               	movlb	15	; () banked
   807  000654  6F39               	movwf	57,b	;volatile
   808                           
   809                           ;pin_manager.c: 12: WPUB = 0b00000000;
   810  000656  0E00               	movlw	0
   811  000658  6E61               	movwf	3937,c	;volatile
   812                           
   813                           ;pin_manager.c: 14: LATC = 0b00000000;
   814  00065A  0E00               	movlw	0
   815  00065C  6E8B               	movwf	3979,c	;volatile
   816                           
   817                           ;pin_manager.c: 15: TRISC = 0b10000010;
   818  00065E  0E82               	movlw	130
   819  000660  6E94               	movwf	3988,c	;volatile
   820                           
   821                           ;pin_manager.c: 16: ANSELC = 0b00000000;
   822  000662  0E00               	movlw	0
   823  000664  010F               	movlb	15	; () banked
   824  000666  6F3A               	movwf	58,b	;volatile
   825                           
   826                           ; BSR set to: 15
   827                           ;pin_manager.c: 18: INTCON2bits.nRBPU = 0x01;
   828  000668  8EF1               	bsf	intcon2,7,c	;volatile
   829                           
   830                           ; BSR set to: 15
   831  00066A  0012               	return		;funcret
   832  00066C                     __end_of_PIN_MANAGER_Initialize:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           intcon	equ	0xFF2
   839                           intcon2	equ	0xFF1
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           postdec1	equ	0xFE5
   843                           fsr1h	equ	0xFE2
   844                           fsr1l	equ	0xFE1
   845                           
   846 ;; *************** function _OSCILLATOR_Initialize *****************
   847 ;; Defined at:
   848 ;;		line 76 in file "mcc_generated_files/mcc.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, status,2
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   862 ;;      Params:         0       0       0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0       0
   865 ;;      Totals:         0       0       0       0       0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    7
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_SYSTEM_Initialize
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text5
   877  000720                     __ptext5:
   878                           	opt stack 0
   879  000720                     _OSCILLATOR_Initialize:
   880                           	opt stack 22
   881                           
   882                           ;mcc.c: 79: OSCCON = 0x70;
   883                           
   884                           ; BSR set to: 15
   885                           ;incstack = 0
   886  000720  0E70               	movlw	112
   887  000722  6ED3               	movwf	4051,c	;volatile
   888                           
   889                           ;mcc.c: 85: OSCCON2 = 0x04;
   890  000724  0E04               	movlw	4
   891  000726  6ED2               	movwf	4050,c	;volatile
   892                           
   893                           ;mcc.c: 87: OSCTUNE = 0x40;
   894  000728  0E40               	movlw	64
   895  00072A  6E9B               	movwf	3995,c	;volatile
   896  00072C                     l123:
   897  00072C  BED2               	btfsc	4050,7,c	;volatile
   898  00072E  0012               	return	
   899  000730  D7FD               	goto	l123
   900  000732                     __end_of_OSCILLATOR_Initialize:
   901                           	opt stack 0
   902                           tblptru	equ	0xFF8
   903                           tblptrh	equ	0xFF7
   904                           tblptrl	equ	0xFF6
   905                           tablat	equ	0xFF5
   906                           intcon	equ	0xFF2
   907                           intcon2	equ	0xFF1
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postdec1	equ	0xFE5
   911                           fsr1h	equ	0xFE2
   912                           fsr1l	equ	0xFE1
   913                           
   914 ;; *************** function _INTERRUPT_Initialize *****************
   915 ;; Defined at:
   916 ;;		line 5 in file "mcc_generated_files/interrupt_manager.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		None
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   930 ;;      Params:         0       0       0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    7
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_SYSTEM_Initialize
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text6
   945  000742                     __ptext6:
   946                           	opt stack 0
   947  000742                     _INTERRUPT_Initialize:
   948                           	opt stack 22
   949                           
   950                           ;interrupt_manager.c: 7: RCONbits.IPEN = 0;
   951                           
   952                           ;incstack = 0
   953  000742  9ED0               	bcf	4048,7,c	;volatile
   954                           
   955                           ;interrupt_manager.c: 10: INTCON2bits.TMR0IP = 0;
   956  000744  94F1               	bcf	intcon2,2,c	;volatile
   957                           
   958                           ;interrupt_manager.c: 12: IPR1bits.RC1IP = 0;
   959  000746  9A9F               	bcf	3999,5,c	;volatile
   960                           
   961                           ;interrupt_manager.c: 14: IPR1bits.TX1IP = 0;
   962  000748  989F               	bcf	3999,4,c	;volatile
   963  00074A  0012               	return		;funcret
   964  00074C                     __end_of_INTERRUPT_Initialize:
   965                           	opt stack 0
   966                           tblptru	equ	0xFF8
   967                           tblptrh	equ	0xFF7
   968                           tblptrl	equ	0xFF6
   969                           tablat	equ	0xFF5
   970                           intcon	equ	0xFF2
   971                           intcon2	equ	0xFF1
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           postdec1	equ	0xFE5
   975                           fsr1h	equ	0xFE2
   976                           fsr1l	equ	0xFE1
   977                           
   978 ;; *************** function _EUSART1_Initialize *****************
   979 ;; Defined at:
   980 ;;		line 15 in file "mcc_generated_files/eusart1.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, status,2
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   994 ;;      Params:         0       0       0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    7
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_SYSTEM_Initialize
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text7
  1009  0006AE                     __ptext7:
  1010                           	opt stack 0
  1011  0006AE                     _EUSART1_Initialize:
  1012                           	opt stack 22
  1013                           
  1014                           ;eusart1.c: 17: PIE1bits.RC1IE = 0;
  1015                           
  1016                           ;incstack = 0
  1017  0006AE  9A9D               	bcf	3997,5,c	;volatile
  1018                           
  1019                           ;eusart1.c: 18: PIE1bits.TX1IE = 0;
  1020  0006B0  989D               	bcf	3997,4,c	;volatile
  1021                           
  1022                           ;eusart1.c: 27: BAUD1CON = 0x48;
  1023  0006B2  0E48               	movlw	72
  1024  0006B4  6EB8               	movwf	4024,c	;volatile
  1025                           
  1026                           ;eusart1.c: 38: RC1STA = 0b10010000;
  1027  0006B6  0E90               	movlw	144
  1028  0006B8  6EAB               	movwf	4011,c	;volatile
  1029                           
  1030                           ;eusart1.c: 48: TX1STA = 0b00100110;
  1031  0006BA  0E26               	movlw	38
  1032  0006BC  6EAC               	movwf	4012,c	;volatile
  1033                           
  1034                           ;eusart1.c: 67: else{
  1035                           ;eusart1.c: 68: SPBRGH1 = 0;
  1036                           
  1037                           ;eusart1.c: 66: }
  1038                           
  1039                           ;eusart1.c: 65: SPBRG1=(int)(((64000000/115200)/4)-1)&0x00ff;
  1040                           
  1041                           ;eusart1.c: 64: SPBRGH1 = 1;
  1042                           
  1043                           ;eusart1.c: 63: if( ((64000000/115200)/4)-1 > 255 ){
  1044  0006BE  0E00               	movlw	0
  1045  0006C0  6EB0               	movwf	4016,c	;volatile
  1046                           
  1047                           ;eusart1.c: 69: SPBRG1=(int)(((64000000/115200)/4)-1)&0x00ff;
  1048  0006C2  0E89               	movlw	137
  1049  0006C4  6EAF               	movwf	4015,c	;volatile
  1050                           
  1051                           ;eusart1.c: 70: }
  1052                           ;eusart1.c: 72: PIE1bits.RC1IE = 1;
  1053  0006C6  8A9D               	bsf	3997,5,c	;volatile
  1054  0006C8  0012               	return		;funcret
  1055  0006CA                     __end_of_EUSART1_Initialize:
  1056                           	opt stack 0
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           intcon	equ	0xFF2
  1062                           intcon2	equ	0xFF1
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           postdec1	equ	0xFE5
  1066                           fsr1h	equ	0xFE2
  1067                           fsr1l	equ	0xFE1
  1068                           
  1069 ;; *************** function _AppProcess *****************
  1070 ;; Defined at:
  1071 ;;		line 112 in file "mcc_generated_files/app.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  2  178[None  ] int 
  1078 ;; Registers used:
  1079 ;;		None
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1085 ;;      Params:         0       0       0       0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0       0       0
  1088 ;;      Totals:         0       0       0       0       0       0       0
  1089 ;;Total ram usage:        0 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    7
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text8
  1100  000772                     __ptext8:
  1101                           	opt stack 0
  1102  000772                     _AppProcess:
  1103                           	opt stack 23
  1104  000772                     l278:
  1105  000772  D7FF               	goto	l278
  1106  000774                     __end_of_AppProcess:
  1107                           	opt stack 0
  1108                           tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           intcon	equ	0xFF2
  1113                           intcon2	equ	0xFF1
  1114                           postinc0	equ	0xFEE
  1115                           wreg	equ	0xFE8
  1116                           postdec1	equ	0xFE5
  1117                           fsr1h	equ	0xFE2
  1118                           fsr1l	equ	0xFE1
  1119                           
  1120 ;; *************** function _AppInitialize *****************
  1121 ;; Defined at:
  1122 ;;		line 98 in file "mcc_generated_files/app.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  2  174[None  ] int 
  1129 ;; Registers used:
  1130 ;;		None
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1136 ;;      Params:         0       0       0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0
  1139 ;;      Totals:         0       0       0       0       0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    7
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text9
  1151  00075E                     __ptext9:
  1152                           	opt stack 0
  1153  00075E                     _AppInitialize:
  1154                           	opt stack 23
  1155                           
  1156                           ;app.c: 101: INTCONbits.INT0IE = 1;
  1157                           
  1158                           ;incstack = 0
  1159  00075E  88F2               	bsf	intcon,4,c	;volatile
  1160                           
  1161                           ;app.c: 103: INTCON2bits.INTEDG0 = 1;
  1162  000760  8CF1               	bsf	intcon2,6,c	;volatile
  1163  000762  0012               	return		;funcret
  1164  000764                     __end_of_AppInitialize:
  1165                           	opt stack 0
  1166                           tblptru	equ	0xFF8
  1167                           tblptrh	equ	0xFF7
  1168                           tblptrl	equ	0xFF6
  1169                           tablat	equ	0xFF5
  1170                           intcon	equ	0xFF2
  1171                           intcon2	equ	0xFF1
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           postdec1	equ	0xFE5
  1175                           fsr1h	equ	0xFE2
  1176                           fsr1l	equ	0xFE1
  1177                           
  1178 ;; *************** function _INTERRUPT_InterruptManager *****************
  1179 ;; Defined at:
  1180 ;;		line 18 in file "mcc_generated_files/interrupt_manager.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1194 ;;      Params:         0       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0
  1196 ;;      Temps:         14       0       0       0       0       0       0
  1197 ;;      Totals:        14       0       0       0       0       0       0
  1198 ;;Total ram usage:       14 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    6
  1201 ;; This function calls:
  1202 ;;		_EUSART1_Receive_ISR
  1203 ;;		_EUSART1_Transmit_ISR
  1204 ;;		_TMR0_ISR
  1205 ;; This function is called by:
  1206 ;;		Interrupt level 2
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	intcode
  1211  000008                     __pintcode:
  1212                           	opt stack 0
  1213  000008                     _INTERRUPT_InterruptManager:
  1214                           	opt stack 21
  1215                           
  1216                           ;incstack = 0
  1217  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1218  00000A  CFFA F045          	movff	pclath,??_INTERRUPT_InterruptManager
  1219  00000E  CFFB F046          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1220  000012  CFE9 F047          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1221  000016  CFEA F048          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1222  00001A  CFE1 F049          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1223  00001E  CFE2 F04A          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1224  000022  CFD9 F04B          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1225  000026  CFDA F04C          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1226  00002A  CFF3 F04D          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1227  00002E  CFF4 F04E          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1228  000032  CFF6 F04F          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1229  000036  CFF7 F050          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1230  00003A  CFF8 F051          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1231  00003E  CFF5 F052          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1232                           
  1233                           ;interrupt_manager.c: 20: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  1234  000042  BAF2               	btfsc	intcon,5,c	;volatile
  1235  000044  A4F2               	btfss	intcon,2,c	;volatile
  1236  000046  D003               	goto	i2l91
  1237                           
  1238                           ;interrupt_manager.c: 21: TMR0_ISR();
  1239  000048  EC99  F003         	call	_TMR0_ISR	;wreg free
  1240                           
  1241                           ;interrupt_manager.c: 22: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  1242  00004C  D010               	goto	i2l92
  1243  00004E                     i2l91:
  1244  00004E  BA9D               	btfsc	3997,5,c	;volatile
  1245  000050  AA9E               	btfss	3998,5,c	;volatile
  1246  000052  D003               	goto	i2l93
  1247                           
  1248                           ;interrupt_manager.c: 23: EUSART1_Receive_ISR();
  1249  000054  EC65  F003         	call	_EUSART1_Receive_ISR	;wreg free
  1250                           
  1251                           ;interrupt_manager.c: 24: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  1252  000058  D00A               	goto	i2l92
  1253  00005A                     i2l93:
  1254  00005A  B89D               	btfsc	3997,4,c	;volatile
  1255  00005C  A89E               	btfss	3998,4,c	;volatile
  1256  00005E  D003               	goto	i2l95
  1257                           
  1258                           ;interrupt_manager.c: 25: EUSART1_Transmit_ISR();
  1259  000060  ECB7  F003         	call	_EUSART1_Transmit_ISR	;wreg free
  1260                           
  1261                           ;interrupt_manager.c: 26: } else if(INTCONbits.INT0IE && INTCONbits.INT0IF){
  1262  000064  D004               	goto	i2l92
  1263  000066                     i2l95:
  1264  000066  B8F2               	btfsc	intcon,4,c	;volatile
  1265  000068  A2F2               	btfss	intcon,1,c	;volatile
  1266  00006A  D001               	goto	i2l92
  1267                           
  1268                           ;interrupt_manager.c: 28: INTCONbits.INT0IF = 0;
  1269  00006C  92F2               	bcf	intcon,1,c	;volatile
  1270  00006E                     i2l92:
  1271                           
  1272                           ;interrupt_manager.c: 32: }
  1273                           ;interrupt_manager.c: 34: INTCON2bits.TMR0IP = 1;
  1274  00006E  84F1               	bsf	intcon2,2,c	;volatile
  1275  000070  C052  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1276  000074  C051  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1277  000078  C050  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1278  00007C  C04F  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1279  000080  C04E  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1280  000084  C04D  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1281  000088  C04C  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1282  00008C  C04B  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1283  000090  C04A  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1284  000094  C049  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1285  000098  C048  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1286  00009C  C047  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1287  0000A0  C046  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1288  0000A4  C045  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1289  0000A8  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1290  0000AA  0011               	retfie		f
  1291  0000AC                     __end_of_INTERRUPT_InterruptManager:
  1292                           	opt stack 0
  1293                           pclatu	equ	0xFFB
  1294                           pclath	equ	0xFFA
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           prodh	equ	0xFF4
  1300                           prodl	equ	0xFF3
  1301                           intcon	equ	0xFF2
  1302                           intcon2	equ	0xFF1
  1303                           postinc0	equ	0xFEE
  1304                           fsr0h	equ	0xFEA
  1305                           fsr0l	equ	0xFE9
  1306                           wreg	equ	0xFE8
  1307                           postdec1	equ	0xFE5
  1308                           fsr1h	equ	0xFE2
  1309                           fsr1l	equ	0xFE1
  1310                           fsr2h	equ	0xFDA
  1311                           fsr2l	equ	0xFD9
  1312                           
  1313 ;; *************** function _TMR0_ISR *****************
  1314 ;; Defined at:
  1315 ;;		line 90 in file "mcc_generated_files/tmr0.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;		None
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1329 ;;      Params:         0       0       0       0       0       0       0
  1330 ;;      Locals:         0       0       0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0
  1332 ;;      Totals:         0       0       0       0       0       0       0
  1333 ;;Total ram usage:        0 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    5
  1336 ;; This function calls:
  1337 ;;		_TMR0_CallBack
  1338 ;; This function is called by:
  1339 ;;		_INTERRUPT_InterruptManager
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text11
  1344  000732                     __ptext11:
  1345                           	opt stack 0
  1346  000732                     _TMR0_ISR:
  1347                           	opt stack 21
  1348                           
  1349                           ;tmr0.c: 92: INTCONbits.TMR0IF = 0;
  1350                           
  1351                           ;incstack = 0
  1352  000732  94F2               	bcf	intcon,2,c	;volatile
  1353                           
  1354                           ;tmr0.c: 94: TMR0H = 1;
  1355  000734  0E01               	movlw	1
  1356  000736  6ED7               	movwf	4055,c	;volatile
  1357                           
  1358                           ;tmr0.c: 95: TMR0L = 19;
  1359  000738  0E13               	movlw	19
  1360  00073A  6ED6               	movwf	4054,c	;volatile
  1361                           
  1362                           ;tmr0.c: 103: TMR0_CallBack();
  1363  00073C  ECB2  F003         	call	_TMR0_CallBack	;wreg free
  1364  000740  0012               	return		;funcret
  1365  000742                     __end_of_TMR0_ISR:
  1366                           	opt stack 0
  1367                           pclatu	equ	0xFFB
  1368                           pclath	equ	0xFFA
  1369                           tblptru	equ	0xFF8
  1370                           tblptrh	equ	0xFF7
  1371                           tblptrl	equ	0xFF6
  1372                           tablat	equ	0xFF5
  1373                           prodh	equ	0xFF4
  1374                           prodl	equ	0xFF3
  1375                           intcon	equ	0xFF2
  1376                           intcon2	equ	0xFF1
  1377                           postinc0	equ	0xFEE
  1378                           fsr0h	equ	0xFEA
  1379                           fsr0l	equ	0xFE9
  1380                           wreg	equ	0xFE8
  1381                           postdec1	equ	0xFE5
  1382                           fsr1h	equ	0xFE2
  1383                           fsr1l	equ	0xFE1
  1384                           fsr2h	equ	0xFDA
  1385                           fsr2l	equ	0xFD9
  1386                           
  1387 ;; *************** function _TMR0_CallBack *****************
  1388 ;; Defined at:
  1389 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1403 ;;      Params:         0       0       0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    4
  1410 ;; This function calls:
  1411 ;;		_AppTimer30us
  1412 ;; This function is called by:
  1413 ;;		_TMR0_ISR
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text12
  1418  000764                     __ptext12:
  1419                           	opt stack 0
  1420  000764                     _TMR0_CallBack:
  1421                           	opt stack 21
  1422                           
  1423                           ;tmr0.c: 112: AppTimer30us();
  1424                           
  1425                           ;incstack = 0
  1426  000764  ECB5  F002         	call	_AppTimer30us	;wreg free
  1427  000768  0012               	return		;funcret
  1428  00076A                     __end_of_TMR0_CallBack:
  1429                           	opt stack 0
  1430                           pclatu	equ	0xFFB
  1431                           pclath	equ	0xFFA
  1432                           tblptru	equ	0xFF8
  1433                           tblptrh	equ	0xFF7
  1434                           tblptrl	equ	0xFF6
  1435                           tablat	equ	0xFF5
  1436                           prodh	equ	0xFF4
  1437                           prodl	equ	0xFF3
  1438                           intcon	equ	0xFF2
  1439                           intcon2	equ	0xFF1
  1440                           postinc0	equ	0xFEE
  1441                           fsr0h	equ	0xFEA
  1442                           fsr0l	equ	0xFE9
  1443                           wreg	equ	0xFE8
  1444                           postdec1	equ	0xFE5
  1445                           fsr1h	equ	0xFE2
  1446                           fsr1l	equ	0xFE1
  1447                           fsr2h	equ	0xFDA
  1448                           fsr2l	equ	0xFD9
  1449                           
  1450 ;; *************** function _AppTimer30us *****************
  1451 ;; Defined at:
  1452 ;;		line 587 in file "mcc_generated_files/app.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2   16[None  ] int 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1466 ;;      Params:         0       0       0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0
  1469 ;;      Totals:         0       0       0       0       0       0       0
  1470 ;;Total ram usage:        0 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    3
  1473 ;; This function calls:
  1474 ;;		_AppTimer100ms
  1475 ;;		_AppTimer10ms
  1476 ;;		_AppTimer1ms
  1477 ;;		_AppTimer1s
  1478 ;; This function is called by:
  1479 ;;		_TMR0_CallBack
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text13
  1484  00056A                     __ptext13:
  1485                           	opt stack 0
  1486  00056A                     _AppTimer30us:
  1487                           	opt stack 21
  1488                           
  1489                           ;app.c: 588: static int count1ms = 4;
  1490                           ;app.c: 589: static int count10ms = 9;
  1491                           ;app.c: 590: static int count100ms = 9;
  1492                           ;app.c: 591: static int count1000ms = 9;
  1493                           ;app.c: 594: if (count1ms > 0) count1ms--;
  1494                           
  1495                           ;incstack = 0
  1496  00056A  BE5A               	btfsc	AppTimer30us@count1ms+1,7,c
  1497  00056C  D009               	goto	i2l1502
  1498  00056E  505A               	movf	AppTimer30us@count1ms+1,w,c
  1499  000570  E103               	bnz	i2u76_40
  1500  000572  0459               	decf	AppTimer30us@count1ms,w,c
  1501  000574  A0D8               	btfss	status,0,c
  1502  000576  D004               	goto	i2l1502
  1503  000578                     i2u76_40:
  1504  000578  0659               	decf	AppTimer30us@count1ms,f,c
  1505  00057A  A0D8               	btfss	status,0,c
  1506  00057C  065A               	decf	AppTimer30us@count1ms+1,f,c
  1507  00057E  0012               	return	
  1508  000580                     i2l1502:
  1509                           
  1510                           ;app.c: 595: else {
  1511                           ;app.c: 596: count1ms = 33;
  1512  000580  0E00               	movlw	0
  1513  000582  6E5A               	movwf	AppTimer30us@count1ms+1,c
  1514  000584  0E21               	movlw	33
  1515  000586  6E59               	movwf	AppTimer30us@count1ms,c
  1516                           
  1517                           ;app.c: 597: AppTimer1ms();
  1518  000588  ECFA  F002         	call	_AppTimer1ms	;wreg free
  1519                           
  1520                           ;app.c: 598: if (count10ms > 0)count10ms--;
  1521  00058C  BE58               	btfsc	AppTimer30us@count10ms+1,7,c
  1522  00058E  D009               	goto	i2l1510
  1523  000590  5058               	movf	AppTimer30us@count10ms+1,w,c
  1524  000592  E103               	bnz	i2u77_40
  1525  000594  0457               	decf	AppTimer30us@count10ms,w,c
  1526  000596  A0D8               	btfss	status,0,c
  1527  000598  D004               	goto	i2l1510
  1528  00059A                     i2u77_40:
  1529  00059A  0657               	decf	AppTimer30us@count10ms,f,c
  1530  00059C  A0D8               	btfss	status,0,c
  1531  00059E  0658               	decf	AppTimer30us@count10ms+1,f,c
  1532  0005A0  0012               	return	
  1533  0005A2                     i2l1510:
  1534                           
  1535                           ;app.c: 599: else {
  1536                           ;app.c: 600: count10ms = 9;
  1537  0005A2  0E00               	movlw	0
  1538  0005A4  6E58               	movwf	AppTimer30us@count10ms+1,c
  1539  0005A6  0E09               	movlw	9
  1540  0005A8  6E57               	movwf	AppTimer30us@count10ms,c
  1541                           
  1542                           ;app.c: 601: AppTimer10ms();
  1543  0005AA  ECBB  F003         	call	_AppTimer10ms	;wreg free
  1544                           
  1545                           ;app.c: 602: if (count100ms > 0)count100ms--;
  1546  0005AE  BE56               	btfsc	AppTimer30us@count100ms+1,7,c
  1547  0005B0  D009               	goto	i2l1518
  1548  0005B2  5056               	movf	AppTimer30us@count100ms+1,w,c
  1549  0005B4  E103               	bnz	i2u78_40
  1550  0005B6  0455               	decf	AppTimer30us@count100ms,w,c
  1551  0005B8  A0D8               	btfss	status,0,c
  1552  0005BA  D004               	goto	i2l1518
  1553  0005BC                     i2u78_40:
  1554  0005BC  0655               	decf	AppTimer30us@count100ms,f,c
  1555  0005BE  A0D8               	btfss	status,0,c
  1556  0005C0  0656               	decf	AppTimer30us@count100ms+1,f,c
  1557  0005C2  0012               	return	
  1558  0005C4                     i2l1518:
  1559                           
  1560                           ;app.c: 603: else {
  1561                           ;app.c: 604: count100ms = 9;
  1562  0005C4  0E00               	movlw	0
  1563  0005C6  6E56               	movwf	AppTimer30us@count100ms+1,c
  1564  0005C8  0E09               	movlw	9
  1565  0005CA  6E55               	movwf	AppTimer30us@count100ms,c
  1566                           
  1567                           ;app.c: 605: AppTimer100ms();
  1568  0005CC  ECBC  F003         	call	_AppTimer100ms	;wreg free
  1569                           
  1570                           ;app.c: 606: if (count1000ms > 0)count1000ms--;
  1571  0005D0  BE54               	btfsc	AppTimer30us@count1000ms+1,7,c
  1572  0005D2  D009               	goto	i2l1526
  1573  0005D4  5054               	movf	AppTimer30us@count1000ms+1,w,c
  1574  0005D6  E103               	bnz	i2u79_40
  1575  0005D8  0453               	decf	AppTimer30us@count1000ms,w,c
  1576  0005DA  A0D8               	btfss	status,0,c
  1577  0005DC  D004               	goto	i2l1526
  1578  0005DE                     i2u79_40:
  1579  0005DE  0653               	decf	AppTimer30us@count1000ms,f,c
  1580  0005E0  A0D8               	btfss	status,0,c
  1581  0005E2  0654               	decf	AppTimer30us@count1000ms+1,f,c
  1582  0005E4  0012               	return	
  1583  0005E6                     i2l1526:
  1584                           
  1585                           ;app.c: 607: else {
  1586                           ;app.c: 608: count1000ms = 9;
  1587  0005E6  0E00               	movlw	0
  1588  0005E8  6E54               	movwf	AppTimer30us@count1000ms+1,c
  1589  0005EA  0E09               	movlw	9
  1590  0005EC  6E53               	movwf	AppTimer30us@count1000ms,c
  1591                           
  1592                           ;app.c: 609: AppTimer1s();
  1593  0005EE  ECBA  F003         	call	_AppTimer1s	;wreg free
  1594  0005F2  0012               	return	
  1595  0005F4                     __end_of_AppTimer30us:
  1596                           	opt stack 0
  1597                           pclatu	equ	0xFFB
  1598                           pclath	equ	0xFFA
  1599                           tblptru	equ	0xFF8
  1600                           tblptrh	equ	0xFF7
  1601                           tblptrl	equ	0xFF6
  1602                           tablat	equ	0xFF5
  1603                           prodh	equ	0xFF4
  1604                           prodl	equ	0xFF3
  1605                           intcon	equ	0xFF2
  1606                           intcon2	equ	0xFF1
  1607                           postinc0	equ	0xFEE
  1608                           fsr0h	equ	0xFEA
  1609                           fsr0l	equ	0xFE9
  1610                           wreg	equ	0xFE8
  1611                           postdec1	equ	0xFE5
  1612                           fsr1h	equ	0xFE2
  1613                           fsr1l	equ	0xFE1
  1614                           fsr2h	equ	0xFDA
  1615                           fsr2l	equ	0xFD9
  1616                           status	equ	0xFD8
  1617                           
  1618 ;; *************** function _AppTimer1s *****************
  1619 ;; Defined at:
  1620 ;;		line 504 in file "mcc_generated_files/app.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		None
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1634 ;;      Params:         0       0       0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0
  1637 ;;      Totals:         0       0       0       0       0       0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_AppTimer30us
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text14
  1648  000774                     __ptext14:
  1649                           	opt stack 0
  1650  000774                     _AppTimer1s:
  1651                           	opt stack 23
  1652                           
  1653                           ;incstack = 0
  1654  000774  0012               	return		;funcret
  1655  000776                     __end_of_AppTimer1s:
  1656                           	opt stack 0
  1657                           pclatu	equ	0xFFB
  1658                           pclath	equ	0xFFA
  1659                           tblptru	equ	0xFF8
  1660                           tblptrh	equ	0xFF7
  1661                           tblptrl	equ	0xFF6
  1662                           tablat	equ	0xFF5
  1663                           prodh	equ	0xFF4
  1664                           prodl	equ	0xFF3
  1665                           intcon	equ	0xFF2
  1666                           intcon2	equ	0xFF1
  1667                           postinc0	equ	0xFEE
  1668                           fsr0h	equ	0xFEA
  1669                           fsr0l	equ	0xFE9
  1670                           wreg	equ	0xFE8
  1671                           postdec1	equ	0xFE5
  1672                           fsr1h	equ	0xFE2
  1673                           fsr1l	equ	0xFE1
  1674                           fsr2h	equ	0xFDA
  1675                           fsr2l	equ	0xFD9
  1676                           status	equ	0xFD8
  1677                           
  1678 ;; *************** function _AppTimer1ms *****************
  1679 ;; Defined at:
  1680 ;;		line 537 in file "mcc_generated_files/app.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1694 ;;      Params:         0       0       0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0
  1696 ;;      Temps:          3       0       0       0       0       0       0
  1697 ;;      Totals:         3       0       0       0       0       0       0
  1698 ;;Total ram usage:        3 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    2
  1701 ;; This function calls:
  1702 ;;		_SendBuffCh0
  1703 ;; This function is called by:
  1704 ;;		_AppTimer30us
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text15
  1709  0005F4                     __ptext15:
  1710                           	opt stack 0
  1711  0005F4                     _AppTimer1ms:
  1712                           	opt stack 21
  1713                           
  1714                           ;app.c: 539: if(ShootLedsCh0 == 1){
  1715                           
  1716                           ;incstack = 0
  1717  0005F4  0435               	decf	_ShootLedsCh0,w,c
  1718  0005F6  1036               	iorwf	_ShootLedsCh0+1,w,c
  1719  0005F8  A4D8               	btfss	status,2,c
  1720  0005FA  0012               	return	
  1721                           
  1722                           ;app.c: 540: for(Idx=0; Idx < ch0_len; Idx+=3){
  1723  0005FC  0E00               	movlw	0
  1724  0005FE  6E3C               	movwf	_Idx,c
  1725  000600  D00A               	goto	i2l1494
  1726  000602                     i2l1490:
  1727                           
  1728                           ;app.c: 541: SendBuffCh0(Idx, Idx+1, Idx+2);
  1729  000602  283C               	incf	_Idx,w,c
  1730  000604  6E3D               	movwf	SendBuffCh0@idx_color2,c
  1731  000606  503C               	movf	_Idx,w,c
  1732  000608  0F02               	addlw	2
  1733  00060A  6E3E               	movwf	SendBuffCh0@idx_color3,c
  1734  00060C  503C               	movf	_Idx,w,c
  1735  00060E  EC58  F000         	call	_SendBuffCh0
  1736  000612  0E03               	movlw	3
  1737  000614  263C               	addwf	_Idx,f,c
  1738  000616                     i2l1494:
  1739  000616  503C               	movf	_Idx,w,c
  1740  000618  6E40               	movwf	??_AppTimer1ms& (0+255),c
  1741  00061A  6A41               	clrf	(??_AppTimer1ms+1)& (0+255),c
  1742  00061C  501F               	movf	_ch0_len,w,c
  1743  00061E  5C40               	subwf	??_AppTimer1ms,w,c
  1744  000620  5041               	movf	??_AppTimer1ms+1,w,c
  1745  000622  0A80               	xorlw	128
  1746  000624  6E42               	movwf	(??_AppTimer1ms+2)& (0+255),c
  1747  000626  5020               	movf	_ch0_len+1,w,c
  1748  000628  0A80               	xorlw	128
  1749  00062A  5842               	subwfb	(??_AppTimer1ms+2)& (0+255),w,c
  1750  00062C  A0D8               	btfss	status,0,c
  1751  00062E  D7E9               	goto	i2l1490
  1752                           
  1753                           ;app.c: 542: }
  1754                           ;app.c: 543: ShootLedsCh0 = 0;
  1755  000630  0E00               	movlw	0
  1756  000632  6E36               	movwf	_ShootLedsCh0+1,c
  1757  000634  0E00               	movlw	0
  1758  000636  6E35               	movwf	_ShootLedsCh0,c
  1759  000638  0012               	return	
  1760  00063A                     __end_of_AppTimer1ms:
  1761                           	opt stack 0
  1762                           pclatu	equ	0xFFB
  1763                           pclath	equ	0xFFA
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           prodh	equ	0xFF4
  1769                           prodl	equ	0xFF3
  1770                           intcon	equ	0xFF2
  1771                           intcon2	equ	0xFF1
  1772                           postinc0	equ	0xFEE
  1773                           fsr0h	equ	0xFEA
  1774                           fsr0l	equ	0xFE9
  1775                           wreg	equ	0xFE8
  1776                           postdec1	equ	0xFE5
  1777                           fsr1h	equ	0xFE2
  1778                           fsr1l	equ	0xFE1
  1779                           fsr2h	equ	0xFDA
  1780                           fsr2l	equ	0xFD9
  1781                           status	equ	0xFD8
  1782                           
  1783 ;; *************** function _SendBuffCh0 *****************
  1784 ;; Defined at:
  1785 ;;		line 198 in file "mcc_generated_files/app.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  idx_color1      1    wreg     unsigned char 
  1788 ;;  idx_color2      1    0[COMRAM] unsigned char 
  1789 ;;  idx_color3      1    1[COMRAM] unsigned char 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  idx_color1      1    2[COMRAM] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1801 ;;      Params:         2       0       0       0       0       0       0
  1802 ;;      Locals:         1       0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0
  1804 ;;      Totals:         3       0       0       0       0       0       0
  1805 ;;Total ram usage:        3 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    1
  1808 ;; This function calls:
  1809 ;;		_um_0
  1810 ;;		_zero_0
  1811 ;; This function is called by:
  1812 ;;		_AppTimer1ms
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text16
  1817  0000B0                     __ptext16:
  1818                           	opt stack 0
  1819  0000B0                     _SendBuffCh0:
  1820                           	opt stack 21
  1821                           
  1822                           ;incstack = 0
  1823                           ;SendBuffCh0@idx_color1 stored from wreg
  1824  0000B0  6E3F               	movwf	SendBuffCh0@idx_color1,c
  1825                           
  1826                           ;app.c: 200: if( (CH0[idx_color1] & 128) > 0) um_0();else zero_0();
  1827  0000B2  503F               	movf	SendBuffCh0@idx_color1,w,c
  1828  0000B4  0D01               	mullw	1
  1829  0000B6  0E16               	movlw	low _CH0
  1830  0000B8  24F3               	addwf	prodl,w,c
  1831  0000BA  6ED9               	movwf	fsr2l,c
  1832  0000BC  0E00               	movlw	high _CH0
  1833  0000BE  20F4               	addwfc	prodh,w,c
  1834  0000C0  6EDA               	movwf	fsr2h,c
  1835  0000C2  AEDF               	btfss	indf2,7,c
  1836  0000C4  D003               	goto	i2l1346
  1837  0000C6  EC36  F003         	call	_um_0	;wreg free
  1838  0000CA  D002               	goto	i2l1348
  1839  0000CC                     i2l1346:
  1840  0000CC  EC48  F003         	call	_zero_0	;wreg free
  1841  0000D0                     i2l1348:
  1842                           
  1843                           ;app.c: 201: if( (CH0[idx_color1] & 64) > 0) um_0();else zero_0();
  1844  0000D0  503F               	movf	SendBuffCh0@idx_color1,w,c
  1845  0000D2  0D01               	mullw	1
  1846  0000D4  0E16               	movlw	low _CH0
  1847  0000D6  24F3               	addwf	prodl,w,c
  1848  0000D8  6ED9               	movwf	fsr2l,c
  1849  0000DA  0E00               	movlw	high _CH0
  1850  0000DC  20F4               	addwfc	prodh,w,c
  1851  0000DE  6EDA               	movwf	fsr2h,c
  1852  0000E0  ACDF               	btfss	indf2,6,c
  1853  0000E2  D003               	goto	i2l1352
  1854  0000E4  EC36  F003         	call	_um_0	;wreg free
  1855  0000E8  D002               	goto	i2l1354
  1856  0000EA                     i2l1352:
  1857  0000EA  EC48  F003         	call	_zero_0	;wreg free
  1858  0000EE                     i2l1354:
  1859                           
  1860                           ;app.c: 202: if( (CH0[idx_color1] & 32) > 0) um_0();else zero_0();
  1861  0000EE  503F               	movf	SendBuffCh0@idx_color1,w,c
  1862  0000F0  0D01               	mullw	1
  1863  0000F2  0E16               	movlw	low _CH0
  1864  0000F4  24F3               	addwf	prodl,w,c
  1865  0000F6  6ED9               	movwf	fsr2l,c
  1866  0000F8  0E00               	movlw	high _CH0
  1867  0000FA  20F4               	addwfc	prodh,w,c
  1868  0000FC  6EDA               	movwf	fsr2h,c
  1869  0000FE  AADF               	btfss	indf2,5,c
  1870  000100  D003               	goto	i2l1358
  1871  000102  EC36  F003         	call	_um_0	;wreg free
  1872  000106  D002               	goto	i2l1360
  1873  000108                     i2l1358:
  1874  000108  EC48  F003         	call	_zero_0	;wreg free
  1875  00010C                     i2l1360:
  1876                           
  1877                           ;app.c: 203: if( (CH0[idx_color1] & 16) > 0) um_0();else zero_0();
  1878  00010C  503F               	movf	SendBuffCh0@idx_color1,w,c
  1879  00010E  0D01               	mullw	1
  1880  000110  0E16               	movlw	low _CH0
  1881  000112  24F3               	addwf	prodl,w,c
  1882  000114  6ED9               	movwf	fsr2l,c
  1883  000116  0E00               	movlw	high _CH0
  1884  000118  20F4               	addwfc	prodh,w,c
  1885  00011A  6EDA               	movwf	fsr2h,c
  1886  00011C  A8DF               	btfss	indf2,4,c
  1887  00011E  D003               	goto	i2l1364
  1888  000120  EC36  F003         	call	_um_0	;wreg free
  1889  000124  D002               	goto	i2l1366
  1890  000126                     i2l1364:
  1891  000126  EC48  F003         	call	_zero_0	;wreg free
  1892  00012A                     i2l1366:
  1893                           
  1894                           ;app.c: 204: if( (CH0[idx_color1] & 8) > 0) um_0();else zero_0();
  1895  00012A  503F               	movf	SendBuffCh0@idx_color1,w,c
  1896  00012C  0D01               	mullw	1
  1897  00012E  0E16               	movlw	low _CH0
  1898  000130  24F3               	addwf	prodl,w,c
  1899  000132  6ED9               	movwf	fsr2l,c
  1900  000134  0E00               	movlw	high _CH0
  1901  000136  20F4               	addwfc	prodh,w,c
  1902  000138  6EDA               	movwf	fsr2h,c
  1903  00013A  A6DF               	btfss	indf2,3,c
  1904  00013C  D003               	goto	i2l1370
  1905  00013E  EC36  F003         	call	_um_0	;wreg free
  1906  000142  D002               	goto	i2l1372
  1907  000144                     i2l1370:
  1908  000144  EC48  F003         	call	_zero_0	;wreg free
  1909  000148                     i2l1372:
  1910                           
  1911                           ;app.c: 205: if( (CH0[idx_color1] & 4) > 0) um_0();else zero_0();
  1912  000148  503F               	movf	SendBuffCh0@idx_color1,w,c
  1913  00014A  0D01               	mullw	1
  1914  00014C  0E16               	movlw	low _CH0
  1915  00014E  24F3               	addwf	prodl,w,c
  1916  000150  6ED9               	movwf	fsr2l,c
  1917  000152  0E00               	movlw	high _CH0
  1918  000154  20F4               	addwfc	prodh,w,c
  1919  000156  6EDA               	movwf	fsr2h,c
  1920  000158  A4DF               	btfss	indf2,2,c
  1921  00015A  D003               	goto	i2l1376
  1922  00015C  EC36  F003         	call	_um_0	;wreg free
  1923  000160  D002               	goto	i2l1378
  1924  000162                     i2l1376:
  1925  000162  EC48  F003         	call	_zero_0	;wreg free
  1926  000166                     i2l1378:
  1927                           
  1928                           ;app.c: 206: if( (CH0[idx_color1] & 2) > 0) um_0();else zero_0();
  1929  000166  503F               	movf	SendBuffCh0@idx_color1,w,c
  1930  000168  0D01               	mullw	1
  1931  00016A  0E16               	movlw	low _CH0
  1932  00016C  24F3               	addwf	prodl,w,c
  1933  00016E  6ED9               	movwf	fsr2l,c
  1934  000170  0E00               	movlw	high _CH0
  1935  000172  20F4               	addwfc	prodh,w,c
  1936  000174  6EDA               	movwf	fsr2h,c
  1937  000176  A2DF               	btfss	indf2,1,c
  1938  000178  D003               	goto	i2l1382
  1939  00017A  EC36  F003         	call	_um_0	;wreg free
  1940  00017E  D002               	goto	i2l1384
  1941  000180                     i2l1382:
  1942  000180  EC48  F003         	call	_zero_0	;wreg free
  1943  000184                     i2l1384:
  1944                           
  1945                           ;app.c: 207: if( (CH0[idx_color1] & 1) > 0) um_0();else zero_0();
  1946  000184  503F               	movf	SendBuffCh0@idx_color1,w,c
  1947  000186  0D01               	mullw	1
  1948  000188  0E16               	movlw	low _CH0
  1949  00018A  24F3               	addwf	prodl,w,c
  1950  00018C  6ED9               	movwf	fsr2l,c
  1951  00018E  0E00               	movlw	high _CH0
  1952  000190  20F4               	addwfc	prodh,w,c
  1953  000192  6EDA               	movwf	fsr2h,c
  1954  000194  A0DF               	btfss	indf2,0,c
  1955  000196  D003               	goto	i2l1388
  1956  000198  EC36  F003         	call	_um_0	;wreg free
  1957  00019C  D002               	goto	i2l1390
  1958  00019E                     i2l1388:
  1959  00019E  EC48  F003         	call	_zero_0	;wreg free
  1960  0001A2                     i2l1390:
  1961                           
  1962                           ;app.c: 209: if( (CH0[idx_color2] & 128) > 0) um_0();else zero_0();
  1963  0001A2  503D               	movf	SendBuffCh0@idx_color2,w,c
  1964  0001A4  0D01               	mullw	1
  1965  0001A6  0E16               	movlw	low _CH0
  1966  0001A8  24F3               	addwf	prodl,w,c
  1967  0001AA  6ED9               	movwf	fsr2l,c
  1968  0001AC  0E00               	movlw	high _CH0
  1969  0001AE  20F4               	addwfc	prodh,w,c
  1970  0001B0  6EDA               	movwf	fsr2h,c
  1971  0001B2  AEDF               	btfss	indf2,7,c
  1972  0001B4  D003               	goto	i2l1394
  1973  0001B6  EC36  F003         	call	_um_0	;wreg free
  1974  0001BA  D002               	goto	i2l1396
  1975  0001BC                     i2l1394:
  1976  0001BC  EC48  F003         	call	_zero_0	;wreg free
  1977  0001C0                     i2l1396:
  1978                           
  1979                           ;app.c: 210: if( (CH0[idx_color2] & 64) > 0) um_0();else zero_0();
  1980  0001C0  503D               	movf	SendBuffCh0@idx_color2,w,c
  1981  0001C2  0D01               	mullw	1
  1982  0001C4  0E16               	movlw	low _CH0
  1983  0001C6  24F3               	addwf	prodl,w,c
  1984  0001C8  6ED9               	movwf	fsr2l,c
  1985  0001CA  0E00               	movlw	high _CH0
  1986  0001CC  20F4               	addwfc	prodh,w,c
  1987  0001CE  6EDA               	movwf	fsr2h,c
  1988  0001D0  ACDF               	btfss	indf2,6,c
  1989  0001D2  D003               	goto	i2l1400
  1990  0001D4  EC36  F003         	call	_um_0	;wreg free
  1991  0001D8  D002               	goto	i2l1402
  1992  0001DA                     i2l1400:
  1993  0001DA  EC48  F003         	call	_zero_0	;wreg free
  1994  0001DE                     i2l1402:
  1995                           
  1996                           ;app.c: 211: if( (CH0[idx_color2] & 32) > 0) um_0();else zero_0();
  1997  0001DE  503D               	movf	SendBuffCh0@idx_color2,w,c
  1998  0001E0  0D01               	mullw	1
  1999  0001E2  0E16               	movlw	low _CH0
  2000  0001E4  24F3               	addwf	prodl,w,c
  2001  0001E6  6ED9               	movwf	fsr2l,c
  2002  0001E8  0E00               	movlw	high _CH0
  2003  0001EA  20F4               	addwfc	prodh,w,c
  2004  0001EC  6EDA               	movwf	fsr2h,c
  2005  0001EE  AADF               	btfss	indf2,5,c
  2006  0001F0  D003               	goto	i2l1406
  2007  0001F2  EC36  F003         	call	_um_0	;wreg free
  2008  0001F6  D002               	goto	i2l1408
  2009  0001F8                     i2l1406:
  2010  0001F8  EC48  F003         	call	_zero_0	;wreg free
  2011  0001FC                     i2l1408:
  2012                           
  2013                           ;app.c: 212: if( (CH0[idx_color2] & 16) > 0) um_0();else zero_0();
  2014  0001FC  503D               	movf	SendBuffCh0@idx_color2,w,c
  2015  0001FE  0D01               	mullw	1
  2016  000200  0E16               	movlw	low _CH0
  2017  000202  24F3               	addwf	prodl,w,c
  2018  000204  6ED9               	movwf	fsr2l,c
  2019  000206  0E00               	movlw	high _CH0
  2020  000208  20F4               	addwfc	prodh,w,c
  2021  00020A  6EDA               	movwf	fsr2h,c
  2022  00020C  A8DF               	btfss	indf2,4,c
  2023  00020E  D003               	goto	i2l1412
  2024  000210  EC36  F003         	call	_um_0	;wreg free
  2025  000214  D002               	goto	i2l1414
  2026  000216                     i2l1412:
  2027  000216  EC48  F003         	call	_zero_0	;wreg free
  2028  00021A                     i2l1414:
  2029                           
  2030                           ;app.c: 213: if( (CH0[idx_color2] & 8) > 0) um_0();else zero_0();
  2031  00021A  503D               	movf	SendBuffCh0@idx_color2,w,c
  2032  00021C  0D01               	mullw	1
  2033  00021E  0E16               	movlw	low _CH0
  2034  000220  24F3               	addwf	prodl,w,c
  2035  000222  6ED9               	movwf	fsr2l,c
  2036  000224  0E00               	movlw	high _CH0
  2037  000226  20F4               	addwfc	prodh,w,c
  2038  000228  6EDA               	movwf	fsr2h,c
  2039  00022A  A6DF               	btfss	indf2,3,c
  2040  00022C  D003               	goto	i2l1418
  2041  00022E  EC36  F003         	call	_um_0	;wreg free
  2042  000232  D002               	goto	i2l1420
  2043  000234                     i2l1418:
  2044  000234  EC48  F003         	call	_zero_0	;wreg free
  2045  000238                     i2l1420:
  2046                           
  2047                           ;app.c: 214: if( (CH0[idx_color2] & 4) > 0) um_0();else zero_0();
  2048  000238  503D               	movf	SendBuffCh0@idx_color2,w,c
  2049  00023A  0D01               	mullw	1
  2050  00023C  0E16               	movlw	low _CH0
  2051  00023E  24F3               	addwf	prodl,w,c
  2052  000240  6ED9               	movwf	fsr2l,c
  2053  000242  0E00               	movlw	high _CH0
  2054  000244  20F4               	addwfc	prodh,w,c
  2055  000246  6EDA               	movwf	fsr2h,c
  2056  000248  A4DF               	btfss	indf2,2,c
  2057  00024A  D003               	goto	i2l1424
  2058  00024C  EC36  F003         	call	_um_0	;wreg free
  2059  000250  D002               	goto	i2l1426
  2060  000252                     i2l1424:
  2061  000252  EC48  F003         	call	_zero_0	;wreg free
  2062  000256                     i2l1426:
  2063                           
  2064                           ;app.c: 215: if( (CH0[idx_color2] & 2) > 0) um_0();else zero_0();
  2065  000256  503D               	movf	SendBuffCh0@idx_color2,w,c
  2066  000258  0D01               	mullw	1
  2067  00025A  0E16               	movlw	low _CH0
  2068  00025C  24F3               	addwf	prodl,w,c
  2069  00025E  6ED9               	movwf	fsr2l,c
  2070  000260  0E00               	movlw	high _CH0
  2071  000262  20F4               	addwfc	prodh,w,c
  2072  000264  6EDA               	movwf	fsr2h,c
  2073  000266  A2DF               	btfss	indf2,1,c
  2074  000268  D003               	goto	i2l1430
  2075  00026A  EC36  F003         	call	_um_0	;wreg free
  2076  00026E  D002               	goto	i2l1432
  2077  000270                     i2l1430:
  2078  000270  EC48  F003         	call	_zero_0	;wreg free
  2079  000274                     i2l1432:
  2080                           
  2081                           ;app.c: 216: if( (CH0[idx_color2] & 1) > 0) um_0();else zero_0();
  2082  000274  503D               	movf	SendBuffCh0@idx_color2,w,c
  2083  000276  0D01               	mullw	1
  2084  000278  0E16               	movlw	low _CH0
  2085  00027A  24F3               	addwf	prodl,w,c
  2086  00027C  6ED9               	movwf	fsr2l,c
  2087  00027E  0E00               	movlw	high _CH0
  2088  000280  20F4               	addwfc	prodh,w,c
  2089  000282  6EDA               	movwf	fsr2h,c
  2090  000284  A0DF               	btfss	indf2,0,c
  2091  000286  D003               	goto	i2l1436
  2092  000288  EC36  F003         	call	_um_0	;wreg free
  2093  00028C  D002               	goto	i2l1438
  2094  00028E                     i2l1436:
  2095  00028E  EC48  F003         	call	_zero_0	;wreg free
  2096  000292                     i2l1438:
  2097                           
  2098                           ;app.c: 218: if( (CH0[idx_color3] & 128) > 0) um_0();else zero_0();
  2099  000292  503E               	movf	SendBuffCh0@idx_color3,w,c
  2100  000294  0D01               	mullw	1
  2101  000296  0E16               	movlw	low _CH0
  2102  000298  24F3               	addwf	prodl,w,c
  2103  00029A  6ED9               	movwf	fsr2l,c
  2104  00029C  0E00               	movlw	high _CH0
  2105  00029E  20F4               	addwfc	prodh,w,c
  2106  0002A0  6EDA               	movwf	fsr2h,c
  2107  0002A2  AEDF               	btfss	indf2,7,c
  2108  0002A4  D003               	goto	i2l1442
  2109  0002A6  EC36  F003         	call	_um_0	;wreg free
  2110  0002AA  D002               	goto	i2l1444
  2111  0002AC                     i2l1442:
  2112  0002AC  EC48  F003         	call	_zero_0	;wreg free
  2113  0002B0                     i2l1444:
  2114                           
  2115                           ;app.c: 219: if( (CH0[idx_color3] & 64) > 0) um_0();else zero_0();
  2116  0002B0  503E               	movf	SendBuffCh0@idx_color3,w,c
  2117  0002B2  0D01               	mullw	1
  2118  0002B4  0E16               	movlw	low _CH0
  2119  0002B6  24F3               	addwf	prodl,w,c
  2120  0002B8  6ED9               	movwf	fsr2l,c
  2121  0002BA  0E00               	movlw	high _CH0
  2122  0002BC  20F4               	addwfc	prodh,w,c
  2123  0002BE  6EDA               	movwf	fsr2h,c
  2124  0002C0  ACDF               	btfss	indf2,6,c
  2125  0002C2  D003               	goto	i2l1448
  2126  0002C4  EC36  F003         	call	_um_0	;wreg free
  2127  0002C8  D002               	goto	i2l1450
  2128  0002CA                     i2l1448:
  2129  0002CA  EC48  F003         	call	_zero_0	;wreg free
  2130  0002CE                     i2l1450:
  2131                           
  2132                           ;app.c: 220: if( (CH0[idx_color3] & 32) > 0) um_0();else zero_0();
  2133  0002CE  503E               	movf	SendBuffCh0@idx_color3,w,c
  2134  0002D0  0D01               	mullw	1
  2135  0002D2  0E16               	movlw	low _CH0
  2136  0002D4  24F3               	addwf	prodl,w,c
  2137  0002D6  6ED9               	movwf	fsr2l,c
  2138  0002D8  0E00               	movlw	high _CH0
  2139  0002DA  20F4               	addwfc	prodh,w,c
  2140  0002DC  6EDA               	movwf	fsr2h,c
  2141  0002DE  AADF               	btfss	indf2,5,c
  2142  0002E0  D003               	goto	i2l1454
  2143  0002E2  EC36  F003         	call	_um_0	;wreg free
  2144  0002E6  D002               	goto	i2l1456
  2145  0002E8                     i2l1454:
  2146  0002E8  EC48  F003         	call	_zero_0	;wreg free
  2147  0002EC                     i2l1456:
  2148                           
  2149                           ;app.c: 221: if( (CH0[idx_color3] & 16) > 0) um_0();else zero_0();
  2150  0002EC  503E               	movf	SendBuffCh0@idx_color3,w,c
  2151  0002EE  0D01               	mullw	1
  2152  0002F0  0E16               	movlw	low _CH0
  2153  0002F2  24F3               	addwf	prodl,w,c
  2154  0002F4  6ED9               	movwf	fsr2l,c
  2155  0002F6  0E00               	movlw	high _CH0
  2156  0002F8  20F4               	addwfc	prodh,w,c
  2157  0002FA  6EDA               	movwf	fsr2h,c
  2158  0002FC  A8DF               	btfss	indf2,4,c
  2159  0002FE  D003               	goto	i2l1460
  2160  000300  EC36  F003         	call	_um_0	;wreg free
  2161  000304  D002               	goto	i2l1462
  2162  000306                     i2l1460:
  2163  000306  EC48  F003         	call	_zero_0	;wreg free
  2164  00030A                     i2l1462:
  2165                           
  2166                           ;app.c: 222: if( (CH0[idx_color3] & 8) > 0) um_0();else zero_0();
  2167  00030A  503E               	movf	SendBuffCh0@idx_color3,w,c
  2168  00030C  0D01               	mullw	1
  2169  00030E  0E16               	movlw	low _CH0
  2170  000310  24F3               	addwf	prodl,w,c
  2171  000312  6ED9               	movwf	fsr2l,c
  2172  000314  0E00               	movlw	high _CH0
  2173  000316  20F4               	addwfc	prodh,w,c
  2174  000318  6EDA               	movwf	fsr2h,c
  2175  00031A  A6DF               	btfss	indf2,3,c
  2176  00031C  D003               	goto	i2l1466
  2177  00031E  EC36  F003         	call	_um_0	;wreg free
  2178  000322  D002               	goto	i2l1468
  2179  000324                     i2l1466:
  2180  000324  EC48  F003         	call	_zero_0	;wreg free
  2181  000328                     i2l1468:
  2182                           
  2183                           ;app.c: 223: if( (CH0[idx_color3] & 4) > 0) um_0();else zero_0();
  2184  000328  503E               	movf	SendBuffCh0@idx_color3,w,c
  2185  00032A  0D01               	mullw	1
  2186  00032C  0E16               	movlw	low _CH0
  2187  00032E  24F3               	addwf	prodl,w,c
  2188  000330  6ED9               	movwf	fsr2l,c
  2189  000332  0E00               	movlw	high _CH0
  2190  000334  20F4               	addwfc	prodh,w,c
  2191  000336  6EDA               	movwf	fsr2h,c
  2192  000338  A4DF               	btfss	indf2,2,c
  2193  00033A  D003               	goto	i2l1472
  2194  00033C  EC36  F003         	call	_um_0	;wreg free
  2195  000340  D002               	goto	i2l1474
  2196  000342                     i2l1472:
  2197  000342  EC48  F003         	call	_zero_0	;wreg free
  2198  000346                     i2l1474:
  2199                           
  2200                           ;app.c: 224: if( (CH0[idx_color3] & 2) > 0) um_0();else zero_0();
  2201  000346  503E               	movf	SendBuffCh0@idx_color3,w,c
  2202  000348  0D01               	mullw	1
  2203  00034A  0E16               	movlw	low _CH0
  2204  00034C  24F3               	addwf	prodl,w,c
  2205  00034E  6ED9               	movwf	fsr2l,c
  2206  000350  0E00               	movlw	high _CH0
  2207  000352  20F4               	addwfc	prodh,w,c
  2208  000354  6EDA               	movwf	fsr2h,c
  2209  000356  A2DF               	btfss	indf2,1,c
  2210  000358  D003               	goto	i2l1478
  2211  00035A  EC36  F003         	call	_um_0	;wreg free
  2212  00035E  D002               	goto	i2l1480
  2213  000360                     i2l1478:
  2214  000360  EC48  F003         	call	_zero_0	;wreg free
  2215  000364                     i2l1480:
  2216                           
  2217                           ;app.c: 225: if( (CH0[idx_color3] & 1) > 0) um_0();else zero_0();
  2218  000364  503E               	movf	SendBuffCh0@idx_color3,w,c
  2219  000366  0D01               	mullw	1
  2220  000368  0E16               	movlw	low _CH0
  2221  00036A  24F3               	addwf	prodl,w,c
  2222  00036C  6ED9               	movwf	fsr2l,c
  2223  00036E  0E00               	movlw	high _CH0
  2224  000370  20F4               	addwfc	prodh,w,c
  2225  000372  6EDA               	movwf	fsr2h,c
  2226  000374  A0DF               	btfss	indf2,0,c
  2227  000376  D003               	goto	i2l1484
  2228  000378  EC36  F003         	call	_um_0	;wreg free
  2229  00037C  0012               	return	
  2230  00037E                     i2l1484:
  2231  00037E  EC48  F003         	call	_zero_0	;wreg free
  2232  000382  0012               	return	
  2233  000384                     __end_of_SendBuffCh0:
  2234                           	opt stack 0
  2235                           pclatu	equ	0xFFB
  2236                           pclath	equ	0xFFA
  2237                           tblptru	equ	0xFF8
  2238                           tblptrh	equ	0xFF7
  2239                           tblptrl	equ	0xFF6
  2240                           tablat	equ	0xFF5
  2241                           prodh	equ	0xFF4
  2242                           prodl	equ	0xFF3
  2243                           intcon	equ	0xFF2
  2244                           intcon2	equ	0xFF1
  2245                           postinc0	equ	0xFEE
  2246                           fsr0h	equ	0xFEA
  2247                           fsr0l	equ	0xFE9
  2248                           wreg	equ	0xFE8
  2249                           postdec1	equ	0xFE5
  2250                           fsr1h	equ	0xFE2
  2251                           fsr1l	equ	0xFE1
  2252                           indf2	equ	0xFDF
  2253                           fsr2h	equ	0xFDA
  2254                           fsr2l	equ	0xFD9
  2255                           status	equ	0xFD8
  2256                           
  2257 ;; *************** function _zero_0 *****************
  2258 ;; Defined at:
  2259 ;;		line 149 in file "mcc_generated_files/app.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		None
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2273 ;;      Params:         0       0       0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_SendBuffCh0
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text17
  2287  000690                     __ptext17:
  2288                           	opt stack 0
  2289  000690                     _zero_0:
  2290                           	opt stack 21
  2291                           
  2292                           ;incstack = 0
  2293  000690  828A               	bsf	3978,1,c	;volatile
  2294  000692  F000               	nop	
  2295  000694  F000               	nop	
  2296  000696  F000               	nop	
  2297  000698  F000               	nop	
  2298  00069A  F000               	nop	
  2299  00069C  F000               	nop	
  2300                           
  2301                           ;app.c: 150: LATB1 = 0; __nop();__nop();__nop();__nop();__nop();__nop(); }
  2302  00069E  928A               	bcf	3978,1,c	;volatile
  2303  0006A0  F000               	nop	
  2304  0006A2  F000               	nop	
  2305  0006A4  F000               	nop	
  2306  0006A6  F000               	nop	
  2307  0006A8  F000               	nop	
  2308  0006AA  F000               	nop	
  2309  0006AC  0012               	return		;funcret
  2310  0006AE                     __end_of_zero_0:
  2311                           	opt stack 0
  2312                           pclatu	equ	0xFFB
  2313                           pclath	equ	0xFFA
  2314                           tblptru	equ	0xFF8
  2315                           tblptrh	equ	0xFF7
  2316                           tblptrl	equ	0xFF6
  2317                           tablat	equ	0xFF5
  2318                           prodh	equ	0xFF4
  2319                           prodl	equ	0xFF3
  2320                           intcon	equ	0xFF2
  2321                           intcon2	equ	0xFF1
  2322                           postinc0	equ	0xFEE
  2323                           fsr0h	equ	0xFEA
  2324                           fsr0l	equ	0xFE9
  2325                           wreg	equ	0xFE8
  2326                           postdec1	equ	0xFE5
  2327                           fsr1h	equ	0xFE2
  2328                           fsr1l	equ	0xFE1
  2329                           indf2	equ	0xFDF
  2330                           fsr2h	equ	0xFDA
  2331                           fsr2l	equ	0xFD9
  2332                           status	equ	0xFD8
  2333                           
  2334 ;; *************** function _um_0 *****************
  2335 ;; Defined at:
  2336 ;;		line 145 in file "mcc_generated_files/app.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		None
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2350 ;;      Params:         0       0       0       0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0       0       0
  2352 ;;      Temps:          0       0       0       0       0       0       0
  2353 ;;      Totals:         0       0       0       0       0       0       0
  2354 ;;Total ram usage:        0 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_SendBuffCh0
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text18
  2364  00066C                     __ptext18:
  2365                           	opt stack 0
  2366  00066C                     _um_0:
  2367                           	opt stack 21
  2368                           
  2369                           ;incstack = 0
  2370  00066C  828A               	bsf	3978,1,c	;volatile
  2371  00066E  F000               	nop	
  2372  000670  F000               	nop	
  2373  000672  F000               	nop	
  2374  000674  F000               	nop	
  2375  000676  F000               	nop	
  2376  000678  F000               	nop	
  2377                           
  2378                           ;app.c: 146: __nop();__nop();__nop();__nop();__nop();__nop();__nop();__nop();__nop();
  2379  00067A  F000               	nop	
  2380  00067C  F000               	nop	
  2381  00067E  F000               	nop	
  2382  000680  F000               	nop	
  2383  000682  F000               	nop	
  2384  000684  F000               	nop	
  2385  000686  F000               	nop	
  2386  000688  F000               	nop	
  2387  00068A  F000               	nop	
  2388                           
  2389                           ;app.c: 147: LATB1 = 0;
  2390  00068C  928A               	bcf	3978,1,c	;volatile
  2391  00068E  0012               	return		;funcret
  2392  000690                     __end_of_um_0:
  2393                           	opt stack 0
  2394                           pclatu	equ	0xFFB
  2395                           pclath	equ	0xFFA
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           prodh	equ	0xFF4
  2401                           prodl	equ	0xFF3
  2402                           intcon	equ	0xFF2
  2403                           intcon2	equ	0xFF1
  2404                           postinc0	equ	0xFEE
  2405                           fsr0h	equ	0xFEA
  2406                           fsr0l	equ	0xFE9
  2407                           wreg	equ	0xFE8
  2408                           postdec1	equ	0xFE5
  2409                           fsr1h	equ	0xFE2
  2410                           fsr1l	equ	0xFE1
  2411                           indf2	equ	0xFDF
  2412                           fsr2h	equ	0xFDA
  2413                           fsr2l	equ	0xFD9
  2414                           status	equ	0xFD8
  2415                           
  2416 ;; *************** function _AppTimer10ms *****************
  2417 ;; Defined at:
  2418 ;;		line 514 in file "mcc_generated_files/app.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		None
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2432 ;;      Params:         0       0       0       0       0       0       0
  2433 ;;      Locals:         0       0       0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0
  2435 ;;      Totals:         0       0       0       0       0       0       0
  2436 ;;Total ram usage:        0 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_AppTimer30us
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text19
  2446  000776                     __ptext19:
  2447                           	opt stack 0
  2448  000776                     _AppTimer10ms:
  2449                           	opt stack 23
  2450                           
  2451                           ;incstack = 0
  2452  000776  0012               	return		;funcret
  2453  000778                     __end_of_AppTimer10ms:
  2454                           	opt stack 0
  2455                           pclatu	equ	0xFFB
  2456                           pclath	equ	0xFFA
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           prodh	equ	0xFF4
  2462                           prodl	equ	0xFF3
  2463                           intcon	equ	0xFF2
  2464                           intcon2	equ	0xFF1
  2465                           postinc0	equ	0xFEE
  2466                           fsr0h	equ	0xFEA
  2467                           fsr0l	equ	0xFE9
  2468                           wreg	equ	0xFE8
  2469                           postdec1	equ	0xFE5
  2470                           fsr1h	equ	0xFE2
  2471                           fsr1l	equ	0xFE1
  2472                           indf2	equ	0xFDF
  2473                           fsr2h	equ	0xFDA
  2474                           fsr2l	equ	0xFD9
  2475                           status	equ	0xFD8
  2476                           
  2477 ;; *************** function _AppTimer100ms *****************
  2478 ;; Defined at:
  2479 ;;		line 509 in file "mcc_generated_files/app.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		None
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2493 ;;      Params:         0       0       0       0       0       0       0
  2494 ;;      Locals:         0       0       0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0
  2496 ;;      Totals:         0       0       0       0       0       0       0
  2497 ;;Total ram usage:        0 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_AppTimer30us
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text20
  2507  000778                     __ptext20:
  2508                           	opt stack 0
  2509  000778                     _AppTimer100ms:
  2510                           	opt stack 23
  2511                           
  2512                           ;incstack = 0
  2513  000778  0012               	return		;funcret
  2514  00077A                     __end_of_AppTimer100ms:
  2515                           	opt stack 0
  2516                           pclatu	equ	0xFFB
  2517                           pclath	equ	0xFFA
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           prodh	equ	0xFF4
  2523                           prodl	equ	0xFF3
  2524                           intcon	equ	0xFF2
  2525                           intcon2	equ	0xFF1
  2526                           postinc0	equ	0xFEE
  2527                           fsr0h	equ	0xFEA
  2528                           fsr0l	equ	0xFE9
  2529                           wreg	equ	0xFE8
  2530                           postdec1	equ	0xFE5
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           indf2	equ	0xFDF
  2534                           fsr2h	equ	0xFDA
  2535                           fsr2l	equ	0xFD9
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _EUSART1_Transmit_ISR *****************
  2539 ;; Defined at:
  2540 ;;		line 98 in file "mcc_generated_files/eusart1.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		None
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2554 ;;      Params:         0       0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_INTERRUPT_InterruptManager
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text21
  2568  00076E                     __ptext21:
  2569                           	opt stack 0
  2570  00076E                     _EUSART1_Transmit_ISR:
  2571                           	opt stack 26
  2572                           
  2573                           ;eusart1.c: 100: PIE1bits.TX1IE = 0;
  2574                           
  2575                           ;incstack = 0
  2576  00076E  989D               	bcf	3997,4,c	;volatile
  2577  000770  0012               	return		;funcret
  2578  000772                     __end_of_EUSART1_Transmit_ISR:
  2579                           	opt stack 0
  2580                           pclatu	equ	0xFFB
  2581                           pclath	equ	0xFFA
  2582                           tblptru	equ	0xFF8
  2583                           tblptrh	equ	0xFF7
  2584                           tblptrl	equ	0xFF6
  2585                           tablat	equ	0xFF5
  2586                           prodh	equ	0xFF4
  2587                           prodl	equ	0xFF3
  2588                           intcon	equ	0xFF2
  2589                           intcon2	equ	0xFF1
  2590                           postinc0	equ	0xFEE
  2591                           fsr0h	equ	0xFEA
  2592                           fsr0l	equ	0xFE9
  2593                           wreg	equ	0xFE8
  2594                           postdec1	equ	0xFE5
  2595                           fsr1h	equ	0xFE2
  2596                           fsr1l	equ	0xFE1
  2597                           indf2	equ	0xFDF
  2598                           fsr2h	equ	0xFDA
  2599                           fsr2l	equ	0xFD9
  2600                           status	equ	0xFD8
  2601                           
  2602 ;; *************** function _EUSART1_Receive_ISR *****************
  2603 ;; Defined at:
  2604 ;;		line 104 in file "mcc_generated_files/eusart1.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  byteReceived    1    7[COMRAM] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2618 ;;      Params:         0       0       0       0       0       0       0
  2619 ;;      Locals:         1       0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0
  2621 ;;      Totals:         1       0       0       0       0       0       0
  2622 ;;Total ram usage:        1 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    2
  2625 ;; This function calls:
  2626 ;;		_AppINT_USART1_RX
  2627 ;; This function is called by:
  2628 ;;		_INTERRUPT_InterruptManager
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text22
  2633  0006CA                     __ptext22:
  2634                           	opt stack 0
  2635  0006CA                     _EUSART1_Receive_ISR:
  2636                           	opt stack 24
  2637                           
  2638                           ;eusart1.c: 106: unsigned char byteReceived = 0;
  2639                           
  2640                           ;incstack = 0
  2641  0006CA  0E00               	movlw	0
  2642  0006CC  6E44               	movwf	EUSART1_Receive_ISR@byteReceived,c
  2643                           
  2644                           ;eusart1.c: 107: if (1 == RC1STAbits.OERR)
  2645  0006CE  A2AB               	btfss	4011,1,c	;volatile
  2646  0006D0  D002               	goto	i2l169
  2647                           
  2648                           ;eusart1.c: 108: {
  2649                           ;eusart1.c: 110: RC1STAbits.CREN = 0;
  2650  0006D2  98AB               	bcf	4011,4,c	;volatile
  2651                           
  2652                           ;eusart1.c: 111: RC1STAbits.CREN = 1;
  2653  0006D4  88AB               	bsf	4011,4,c	;volatile
  2654  0006D6                     i2l169:
  2655                           
  2656                           ;eusart1.c: 112: }
  2657                           ;eusart1.c: 113: byteReceived = RCREG1;
  2658  0006D6  CFAE F044          	movff	4014,EUSART1_Receive_ISR@byteReceived	;volatile
  2659                           
  2660                           ;eusart1.c: 114: AppINT_USART1_RX(byteReceived);
  2661  0006DA  5044               	movf	EUSART1_Receive_ISR@byteReceived,w,c
  2662  0006DC  ECC2  F001         	call	_AppINT_USART1_RX
  2663  0006E0  0012               	return		;funcret
  2664  0006E2                     __end_of_EUSART1_Receive_ISR:
  2665                           	opt stack 0
  2666                           pclatu	equ	0xFFB
  2667                           pclath	equ	0xFFA
  2668                           tblptru	equ	0xFF8
  2669                           tblptrh	equ	0xFF7
  2670                           tblptrl	equ	0xFF6
  2671                           tablat	equ	0xFF5
  2672                           prodh	equ	0xFF4
  2673                           prodl	equ	0xFF3
  2674                           intcon	equ	0xFF2
  2675                           intcon2	equ	0xFF1
  2676                           postinc0	equ	0xFEE
  2677                           fsr0h	equ	0xFEA
  2678                           fsr0l	equ	0xFE9
  2679                           wreg	equ	0xFE8
  2680                           postdec1	equ	0xFE5
  2681                           fsr1h	equ	0xFE2
  2682                           fsr1l	equ	0xFE1
  2683                           indf2	equ	0xFDF
  2684                           fsr2h	equ	0xFDA
  2685                           fsr2l	equ	0xFD9
  2686                           status	equ	0xFD8
  2687                           
  2688 ;; *************** function _AppINT_USART1_RX *****************
  2689 ;; Defined at:
  2690 ;;		line 623 in file "mcc_generated_files/app.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  rxData          1    wreg     unsigned char 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  rxData          1    6[COMRAM] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2704 ;;      Params:         0       0       0       0       0       0       0
  2705 ;;      Locals:         1       0       0       0       0       0       0
  2706 ;;      Temps:          5       0       0       0       0       0       0
  2707 ;;      Totals:         6       0       0       0       0       0       0
  2708 ;;Total ram usage:        6 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    1
  2711 ;; This function calls:
  2712 ;;		_EUSART1_Write
  2713 ;; This function is called by:
  2714 ;;		_EUSART1_Receive_ISR
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text23
  2719  000384                     __ptext23:
  2720                           	opt stack 0
  2721  000384                     _AppINT_USART1_RX:
  2722                           	opt stack 24
  2723                           
  2724                           ;incstack = 0
  2725                           ;AppINT_USART1_RX@rxData stored from wreg
  2726  000384  6E43               	movwf	AppINT_USART1_RX@rxData,c
  2727                           
  2728                           ;app.c: 626: static int len_package = 0;
  2729                           ;app.c: 627: static bool capturando = 0;
  2730                           ;app.c: 629: EUSART1_Write(Idx3);
  2731  000386  5025               	movf	_Idx3,w,c
  2732  000388  ECAB  F003         	call	_EUSART1_Write
  2733                           
  2734                           ;app.c: 631: if(capturando){
  2735  00038C  5039               	movf	AppINT_USART1_RX@capturando,w,c
  2736  00038E  B4D8               	btfsc	status,2,c
  2737  000390  D020               	goto	i2l1228
  2738                           
  2739                           ;app.c: 632: CH0[Idx3] = rxData;
  2740  000392  0E16               	movlw	low _CH0
  2741  000394  2425               	addwf	_Idx3,w,c
  2742  000396  6ED9               	movwf	fsr2l,c
  2743  000398  0E00               	movlw	high _CH0
  2744  00039A  2026               	addwfc	_Idx3+1,w,c
  2745  00039C  6EDA               	movwf	fsr2h,c
  2746  00039E  C043  FFDF         	movff	AppINT_USART1_RX@rxData,indf2
  2747                           
  2748                           ;app.c: 634: if(Idx2 > len_package){
  2749  0003A2  5027               	movf	_Idx2,w,c
  2750  0003A4  5C1D               	subwf	AppINT_USART1_RX@len_package,w,c
  2751  0003A6  501E               	movf	AppINT_USART1_RX@len_package+1,w,c
  2752  0003A8  0A80               	xorlw	128
  2753  0003AA  6E3E               	movwf	??_AppINT_USART1_RX& (0+255),c
  2754  0003AC  5028               	movf	_Idx2+1,w,c
  2755  0003AE  0A80               	xorlw	128
  2756  0003B0  583E               	subwfb	??_AppINT_USART1_RX& (0+255),w,c
  2757  0003B2  B0D8               	btfsc	status,0,c
  2758  0003B4  D00E               	goto	i2l1228
  2759                           
  2760                           ;app.c: 635: capturando=0;
  2761  0003B6  0E00               	movlw	0
  2762  0003B8  6E39               	movwf	AppINT_USART1_RX@capturando,c
  2763                           
  2764                           ;app.c: 636: Idx2 = 0;
  2765  0003BA  0E00               	movlw	0
  2766  0003BC  6E28               	movwf	_Idx2+1,c
  2767  0003BE  0E00               	movlw	0
  2768  0003C0  6E27               	movwf	_Idx2,c
  2769                           
  2770                           ;app.c: 637: Idx3 = 0;
  2771  0003C2  0E00               	movlw	0
  2772  0003C4  6E26               	movwf	_Idx3+1,c
  2773  0003C6  0E00               	movlw	0
  2774  0003C8  6E25               	movwf	_Idx3,c
  2775                           
  2776                           ;app.c: 639: ShootLedsCh0 = 1;
  2777  0003CA  0E00               	movlw	0
  2778  0003CC  6E36               	movwf	_ShootLedsCh0+1,c
  2779  0003CE  0E01               	movlw	1
  2780  0003D0  6E35               	movwf	_ShootLedsCh0,c
  2781  0003D2                     i2l1228:
  2782                           
  2783                           ;app.c: 640: }
  2784                           ;app.c: 641: }
  2785                           ;app.c: 643: Buffer[Idx2]= rxData;
  2786  0003D2  0E60               	movlw	low _Buffer
  2787  0003D4  2427               	addwf	_Idx2,w,c
  2788  0003D6  6ED9               	movwf	fsr2l,c
  2789  0003D8  0E00               	movlw	high _Buffer
  2790  0003DA  2028               	addwfc	_Idx2+1,w,c
  2791  0003DC  6EDA               	movwf	fsr2h,c
  2792  0003DE  C043  FFDF         	movff	AppINT_USART1_RX@rxData,indf2
  2793                           
  2794                           ;app.c: 644: if(Buffer[Idx2] == 254 && !capturando){
  2795  0003E2  0E60               	movlw	low _Buffer
  2796  0003E4  2427               	addwf	_Idx2,w,c
  2797  0003E6  6ED9               	movwf	fsr2l,c
  2798  0003E8  0E00               	movlw	high _Buffer
  2799  0003EA  2028               	addwfc	_Idx2+1,w,c
  2800  0003EC  6EDA               	movwf	fsr2h,c
  2801  0003EE  0EFE               	movlw	254
  2802  0003F0  18DE               	xorwf	postinc2,w,c
  2803  0003F2  A4D8               	btfss	status,2,c
  2804  0003F4  D06D               	goto	i2l1246
  2805  0003F6  5039               	movf	AppINT_USART1_RX@capturando,w,c
  2806  0003F8  A4D8               	btfss	status,2,c
  2807  0003FA  D06A               	goto	i2l1246
  2808                           
  2809                           ;app.c: 645: if(Buffer[Idx2-4]== 85){
  2810  0003FC  0EFC               	movlw	252
  2811  0003FE  6E3E               	movwf	??_AppINT_USART1_RX& (0+255),c
  2812  000400  0EFF               	movlw	255
  2813  000402  6E3F               	movwf	(??_AppINT_USART1_RX+1)& (0+255),c
  2814  000404  C027  F040         	movff	_Idx2,??_AppINT_USART1_RX+2
  2815  000408  C028  F041         	movff	_Idx2+1,??_AppINT_USART1_RX+3
  2816  00040C  503E               	movf	??_AppINT_USART1_RX,w,c
  2817  00040E  2640               	addwf	??_AppINT_USART1_RX+2,f,c
  2818  000410  503F               	movf	??_AppINT_USART1_RX+1,w,c
  2819  000412  2241               	addwfc	??_AppINT_USART1_RX+3,f,c
  2820  000414  0E60               	movlw	low _Buffer
  2821  000416  2440               	addwf	??_AppINT_USART1_RX+2,w,c
  2822  000418  6ED9               	movwf	fsr2l,c
  2823  00041A  0E00               	movlw	high _Buffer
  2824  00041C  2041               	addwfc	??_AppINT_USART1_RX+3,w,c
  2825  00041E  6EDA               	movwf	fsr2h,c
  2826  000420  0E55               	movlw	85
  2827  000422  18DE               	xorwf	postinc2,w,c
  2828  000424  A4D8               	btfss	status,2,c
  2829  000426  D056               	goto	i2l1248
  2830                           
  2831                           ;app.c: 646: len_package= Buffer[Idx2-1];
  2832  000428  0EFF               	movlw	255
  2833  00042A  6E3E               	movwf	??_AppINT_USART1_RX& (0+255),c
  2834  00042C  0EFF               	movlw	255
  2835  00042E  6E3F               	movwf	(??_AppINT_USART1_RX+1)& (0+255),c
  2836  000430  C027  F040         	movff	_Idx2,??_AppINT_USART1_RX+2
  2837  000434  C028  F041         	movff	_Idx2+1,??_AppINT_USART1_RX+3
  2838  000438  503E               	movf	??_AppINT_USART1_RX,w,c
  2839  00043A  2640               	addwf	??_AppINT_USART1_RX+2,f,c
  2840  00043C  503F               	movf	??_AppINT_USART1_RX+1,w,c
  2841  00043E  2241               	addwfc	??_AppINT_USART1_RX+3,f,c
  2842  000440  0E60               	movlw	low _Buffer
  2843  000442  2440               	addwf	??_AppINT_USART1_RX+2,w,c
  2844  000444  6ED9               	movwf	fsr2l,c
  2845  000446  0E00               	movlw	high _Buffer
  2846  000448  2041               	addwfc	??_AppINT_USART1_RX+3,w,c
  2847  00044A  6EDA               	movwf	fsr2h,c
  2848  00044C  50DF               	movf	indf2,w,c
  2849  00044E  6E42               	movwf	(??_AppINT_USART1_RX+4)& (0+255),c
  2850  000450  5042               	movf	??_AppINT_USART1_RX+4,w,c
  2851  000452  6E1D               	movwf	AppINT_USART1_RX@len_package,c
  2852  000454  6A1E               	clrf	AppINT_USART1_RX@len_package+1,c
  2853                           
  2854                           ;app.c: 647: ch0_len = len_package;
  2855  000456  C01D  F01F         	movff	AppINT_USART1_RX@len_package,_ch0_len
  2856  00045A  C01E  F020         	movff	AppINT_USART1_RX@len_package+1,_ch0_len+1
  2857                           
  2858                           ;app.c: 648: type= Buffer[Idx2-2];
  2859  00045E  0EFE               	movlw	254
  2860  000460  6E3E               	movwf	??_AppINT_USART1_RX& (0+255),c
  2861  000462  0EFF               	movlw	255
  2862  000464  6E3F               	movwf	(??_AppINT_USART1_RX+1)& (0+255),c
  2863  000466  C027  F040         	movff	_Idx2,??_AppINT_USART1_RX+2
  2864  00046A  C028  F041         	movff	_Idx2+1,??_AppINT_USART1_RX+3
  2865  00046E  503E               	movf	??_AppINT_USART1_RX,w,c
  2866  000470  2640               	addwf	??_AppINT_USART1_RX+2,f,c
  2867  000472  503F               	movf	??_AppINT_USART1_RX+1,w,c
  2868  000474  2241               	addwfc	??_AppINT_USART1_RX+3,f,c
  2869  000476  0E60               	movlw	low _Buffer
  2870  000478  2440               	addwf	??_AppINT_USART1_RX+2,w,c
  2871  00047A  6ED9               	movwf	fsr2l,c
  2872  00047C  0E00               	movlw	high _Buffer
  2873  00047E  2041               	addwfc	??_AppINT_USART1_RX+3,w,c
  2874  000480  6EDA               	movwf	fsr2h,c
  2875  000482  50DF               	movf	indf2,w,c
  2876  000484  6E42               	movwf	(??_AppINT_USART1_RX+4)& (0+255),c
  2877  000486  5042               	movf	??_AppINT_USART1_RX+4,w,c
  2878  000488  6E21               	movwf	_type,c
  2879  00048A  6A22               	clrf	_type+1,c
  2880                           
  2881                           ;app.c: 649: channel= Buffer[Idx2-3];
  2882  00048C  0EFD               	movlw	253
  2883  00048E  6E3E               	movwf	??_AppINT_USART1_RX& (0+255),c
  2884  000490  0EFF               	movlw	255
  2885  000492  6E3F               	movwf	(??_AppINT_USART1_RX+1)& (0+255),c
  2886  000494  C027  F040         	movff	_Idx2,??_AppINT_USART1_RX+2
  2887  000498  C028  F041         	movff	_Idx2+1,??_AppINT_USART1_RX+3
  2888  00049C  503E               	movf	??_AppINT_USART1_RX,w,c
  2889  00049E  2640               	addwf	??_AppINT_USART1_RX+2,f,c
  2890  0004A0  503F               	movf	??_AppINT_USART1_RX+1,w,c
  2891  0004A2  2241               	addwfc	??_AppINT_USART1_RX+3,f,c
  2892  0004A4  0E60               	movlw	low _Buffer
  2893  0004A6  2440               	addwf	??_AppINT_USART1_RX+2,w,c
  2894  0004A8  6ED9               	movwf	fsr2l,c
  2895  0004AA  0E00               	movlw	high _Buffer
  2896  0004AC  2041               	addwfc	??_AppINT_USART1_RX+3,w,c
  2897  0004AE  6EDA               	movwf	fsr2h,c
  2898  0004B0  50DF               	movf	indf2,w,c
  2899  0004B2  6E42               	movwf	(??_AppINT_USART1_RX+4)& (0+255),c
  2900  0004B4  5042               	movf	??_AppINT_USART1_RX+4,w,c
  2901  0004B6  6E23               	movwf	_channel,c
  2902  0004B8  6A24               	clrf	_channel+1,c
  2903                           
  2904                           ;app.c: 650: capturando = 1;
  2905  0004BA  0E01               	movlw	1
  2906  0004BC  6E39               	movwf	AppINT_USART1_RX@capturando,c
  2907                           
  2908                           ;app.c: 651: Idx2 = 2;
  2909  0004BE  0E00               	movlw	0
  2910  0004C0  6E28               	movwf	_Idx2+1,c
  2911  0004C2  0E02               	movlw	2
  2912  0004C4  6E27               	movwf	_Idx2,c
  2913                           
  2914                           ;app.c: 652: Idx3 = 0;
  2915  0004C6  0E00               	movlw	0
  2916  0004C8  6E26               	movwf	_Idx3+1,c
  2917  0004CA  0E00               	movlw	0
  2918  0004CC  6E25               	movwf	_Idx3,c
  2919                           
  2920                           ;app.c: 653: }
  2921                           ;app.c: 654: }
  2922  0004CE  D002               	goto	i2l1248
  2923  0004D0                     i2l1246:
  2924                           
  2925                           ;app.c: 655: else{
  2926                           ;app.c: 656: Idx2++;
  2927  0004D0  4A27               	infsnz	_Idx2,f,c
  2928  0004D2  2A28               	incf	_Idx2+1,f,c
  2929  0004D4                     i2l1248:
  2930                           
  2931                           ;app.c: 657: }
  2932                           ;app.c: 658: if(capturando)
  2933  0004D4  5039               	movf	AppINT_USART1_RX@capturando,w,c
  2934  0004D6  B4D8               	btfsc	status,2,c
  2935  0004D8  0012               	return	
  2936                           
  2937                           ;app.c: 659: Idx3++;
  2938  0004DA  4A25               	infsnz	_Idx3,f,c
  2939  0004DC  2A26               	incf	_Idx3+1,f,c
  2940  0004DE  0012               	return	
  2941  0004E0                     __end_of_AppINT_USART1_RX:
  2942                           	opt stack 0
  2943                           pclatu	equ	0xFFB
  2944                           pclath	equ	0xFFA
  2945                           tblptru	equ	0xFF8
  2946                           tblptrh	equ	0xFF7
  2947                           tblptrl	equ	0xFF6
  2948                           tablat	equ	0xFF5
  2949                           prodh	equ	0xFF4
  2950                           prodl	equ	0xFF3
  2951                           intcon	equ	0xFF2
  2952                           intcon2	equ	0xFF1
  2953                           postinc0	equ	0xFEE
  2954                           fsr0h	equ	0xFEA
  2955                           fsr0l	equ	0xFE9
  2956                           wreg	equ	0xFE8
  2957                           postdec1	equ	0xFE5
  2958                           fsr1h	equ	0xFE2
  2959                           fsr1l	equ	0xFE1
  2960                           indf2	equ	0xFDF
  2961                           postinc2	equ	0xFDE
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _EUSART1_Write *****************
  2967 ;; Defined at:
  2968 ;;		line 82 in file "mcc_generated_files/eusart1.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  txData          1    wreg     unsigned char 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  txData          1    0[COMRAM] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2982 ;;      Params:         0       0       0       0       0       0       0
  2983 ;;      Locals:         1       0       0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0
  2985 ;;      Totals:         1       0       0       0       0       0       0
  2986 ;;Total ram usage:        1 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_AppINT_USART1_RX
  2992 ;;		_putch
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text24
  2997  000756                     __ptext24:
  2998                           	opt stack 0
  2999  000756                     _EUSART1_Write:
  3000                           	opt stack 24
  3001                           
  3002                           ;incstack = 0
  3003                           ;EUSART1_Write@txData stored from wreg
  3004  000756  6E3D               	movwf	EUSART1_Write@txData,c
  3005                           
  3006                           ;eusart1.c: 84: TXREG1=txData;
  3007  000758  C03D  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3008  00075C  0012               	return		;funcret
  3009  00075E                     __end_of_EUSART1_Write:
  3010                           	opt stack 0
  3011  0000                     pclatu	equ	0xFFB
  3012                           pclath	equ	0xFFA
  3013                           tblptru	equ	0xFF8
  3014                           tblptrh	equ	0xFF7
  3015                           tblptrl	equ	0xFF6
  3016                           tablat	equ	0xFF5
  3017                           prodh	equ	0xFF4
  3018                           prodl	equ	0xFF3
  3019                           intcon	equ	0xFF2
  3020                           intcon2	equ	0xFF1
  3021                           postinc0	equ	0xFEE
  3022                           fsr0h	equ	0xFEA
  3023                           fsr0l	equ	0xFE9
  3024                           wreg	equ	0xFE8
  3025                           postdec1	equ	0xFE5
  3026                           fsr1h	equ	0xFE2
  3027                           fsr1l	equ	0xFE1
  3028                           indf2	equ	0xFDF
  3029                           postinc2	equ	0xFDE
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           pclatu	equ	0xFFB
  3034                           pclath	equ	0xFFA
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           prodh	equ	0xFF4
  3040                           prodl	equ	0xFF3
  3041                           intcon	equ	0xFF2
  3042                           intcon2	equ	0xFF1
  3043                           postinc0	equ	0xFEE
  3044                           fsr0h	equ	0xFEA
  3045                           fsr0l	equ	0xFE9
  3046                           wreg	equ	0xFE8
  3047                           postdec1	equ	0xFE5
  3048                           fsr1h	equ	0xFE2
  3049                           fsr1l	equ	0xFE1
  3050                           indf2	equ	0xFDF
  3051                           postinc2	equ	0xFDE
  3052                           fsr2h	equ	0xFDA
  3053                           fsr2l	equ	0xFD9
  3054                           status	equ	0xFD8
  3055                           
  3056                           	psect	rparam
  3057  0000                     pclatu	equ	0xFFB
  3058                           pclath	equ	0xFFA
  3059                           tblptru	equ	0xFF8
  3060                           tblptrh	equ	0xFF7
  3061                           tblptrl	equ	0xFF6
  3062                           tablat	equ	0xFF5
  3063                           prodh	equ	0xFF4
  3064                           prodl	equ	0xFF3
  3065                           intcon	equ	0xFF2
  3066                           intcon2	equ	0xFF1
  3067                           postinc0	equ	0xFEE
  3068                           fsr0h	equ	0xFEA
  3069                           fsr0l	equ	0xFE9
  3070                           wreg	equ	0xFE8
  3071                           postdec1	equ	0xFE5
  3072                           fsr1h	equ	0xFE2
  3073                           fsr1l	equ	0xFE1
  3074                           indf2	equ	0xFDF
  3075                           postinc2	equ	0xFDE
  3076                           fsr2h	equ	0xFDA
  3077                           fsr2l	equ	0xFD9
  3078                           status	equ	0xFD8
  3079                           
  3080                           	psect	temp
  3081  00005C                     btemp:
  3082                           	opt stack 0
  3083  00005C                     	ds	1
  3084  0000                     int$flags	set	btemp
  3085                           pclatu	equ	0xFFB
  3086                           pclath	equ	0xFFA
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           prodh	equ	0xFF4
  3092                           prodl	equ	0xFF3
  3093                           intcon	equ	0xFF2
  3094                           intcon2	equ	0xFF1
  3095                           postinc0	equ	0xFEE
  3096                           fsr0h	equ	0xFEA
  3097                           fsr0l	equ	0xFE9
  3098                           wreg	equ	0xFE8
  3099                           postdec1	equ	0xFE5
  3100                           fsr1h	equ	0xFE2
  3101                           fsr1l	equ	0xFE1
  3102                           indf2	equ	0xFDF
  3103                           postinc2	equ	0xFDE
  3104                           fsr2h	equ	0xFDA
  3105                           fsr2l	equ	0xFD9
  3106                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         1169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      91
    BANK0           160      0     149
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0     192
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _AppTimer30us->_AppTimer1ms
    _AppTimer1ms->_SendBuffCh0
    _EUSART1_Receive_ISR->_AppINT_USART1_RX
    _AppINT_USART1_RX->_EUSART1_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _AppInitialize
                         _AppProcess
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AppProcess                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AppInitialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0     674
                                              8 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     614
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0     614
                       _AppTimer30us
 ---------------------------------------------------------------------------------
 (7) _AppTimer30us                                         0     0      0     614
                      _AppTimer100ms
                       _AppTimer10ms
                        _AppTimer1ms
                         _AppTimer1s
 ---------------------------------------------------------------------------------
 (8) _AppTimer1s                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _AppTimer1ms                                          3     3      0     614
                                              3 COMRAM     3     3      0
                        _SendBuffCh0
 ---------------------------------------------------------------------------------
 (9) _SendBuffCh0                                          3     1      2     614
                                              0 COMRAM     3     1      2
                               _um_0
                             _zero_0
 ---------------------------------------------------------------------------------
 (10) _zero_0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _um_0                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _AppTimer10ms                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _AppTimer100ms                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0      60
                                              7 COMRAM     1     1      0
                   _AppINT_USART1_RX
 ---------------------------------------------------------------------------------
 (6) _AppINT_USART1_RX                                     6     6      0      45
                                              1 COMRAM     6     6      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppInitialize
   _AppProcess
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _AppINT_USART1_RX
       _EUSART1_Write
   _EUSART1_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack
       _AppTimer30us
         _AppTimer100ms
         _AppTimer10ms
         _AppTimer1ms
           _SendBuffCh0
             _um_0
             _zero_0
         _AppTimer1s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C0      13       75.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0     100       6      100.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      95       4       93.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      5B       1       96.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4B0       9        0.0%
DATA                 0      0     4B0      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat May 22 18:40:18 2021

                                 _B0 0001                                   _B1 00E0  
                                 _B2 0140                                   _B3 0280  
                                 _B4 03C0                                   _B5 0300  
                                 _B6 0400                                   _G0 0008  
                                 _G1 00E7                                   _G2 0180  
                                 _G3 02C0                                   _G4 0200  
                                 _G5 0340                                   _G6 0440  
                                 _R0 000F                                   _R1 00EE  
                                 _R2 01C0                                   _R3 0100  
                                 _R4 0240                                   _R5 0380  
                                 _R6 0480                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                  __end_of_AppTimer1ms 063A  
              __end_of_AppInitialize 0764                                  l123 072C  
                                _CH0 0016                                  l181 071E  
                                l278 0772                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                                  _Idx 003C  
                                prod 000FF3                                  wreg 000FE8  
               __end_of_AppTimer10ms 0778                 __end_of_AppTimer30us 05F4  
                       __CFG_LVP$OFF 000000                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               i2l91 004E                                 i2l92 006E  
                               i2l93 005A                                 i2l95 0066  
                               _WPUB 000F61                                 _Idx2 0027  
                               _Idx3 0025                        _EUSART1_Write 0756  
                               _main 070E                                 _um_0 066C  
                    _TMR0_StartTimer 076A                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 005C                        __CFG_BORV$190 000000  
                               _type 0021                                 prodh 000FF4  
                               prodl 000FF3                                 start 00AC  
                      __CFG_IESO$OFF 000000                __end_of_AppTimer100ms 077A  
                       ___param_bank 000000                           _AppTimer1s 0774  
                         _AppProcess 0772                SendBuffCh0@idx_color1 003F  
              SendBuffCh0@idx_color2 003D                SendBuffCh0@idx_color3 003E  
            __end_of_TMR0_Initialize 070E       __size_of_OSCILLATOR_Initialize 0012  
      __end_of_OSCILLATOR_Initialize 0732                 AppTimer30us@count1ms 0059  
                              ?_main 003D                                ?_um_0 003D  
                              _T0CON 000FD5                                _LATB1 007C51  
                              i2l169 06D6                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 076E                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                   __end_of_TMR0_ISR 0742                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                                _ftest 005B  
                 __CFG_MCLRE$EXTMCLR 000000                       ?_EUSART1_Write 003D  
                              pclath 000FFA                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                     _AppINT_USART1_RX 0384  
                      ??_SendBuffCh0 003F                      __initialization 04E0  
                        _AppTimer1ms 05F4           __end_of_EUSART1_Initialize 06CA  
                       __end_of_main 0720                         __end_of_um_0 0690  
        ?_INTERRUPT_InterruptManager 003D                               ??_main 0000  
                             ??_um_0 003D                        __activetblptr 000000  
                     __CFG_PLLCFG$ON 000000                ?_EUSART1_Transmit_ISR 003D  
              AppTimer30us@count10ms 0057              __end_of_TMR0_StartTimer 076E  
                             _ANSELA 000F38                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _RC1STA 000FAB  
                             i2l1400 01DA                               i2l1402 01DE  
                             i2l1228 03D2                               i2l1420 0238  
                             i2l1412 0216                               i2l1246 04D0  
                             i2l1430 0270                               i2l1414 021A  
                             i2l1406 01F8                               i2l1510 05A2  
                             i2l1502 0580                               i2l1248 04D4  
                             i2l1432 0274                               i2l1424 0252  
                             i2l1408 01FC                               i2l1360 010C  
                             i2l1352 00EA                               i2l1450 02CE  
                             i2l1442 02AC                               i2l1426 0256  
                             i2l1418 0234                               i2l1370 0144  
                             i2l1354 00EE                               i2l1346 00CC  
                             i2l1460 0306                               i2l1444 02B0  
                             i2l1436 028E                               i2l1372 0148  
                             i2l1364 0126                               i2l1348 00D0  
                             i2l1462 030A                               i2l1454 02E8  
                             i2l1438 0292                               i2l1390 01A2  
                             i2l1382 0180                               i2l1366 012A  
                             i2l1358 0108                               i2l1526 05E6  
                             i2l1518 05C4                               i2l1480 0364  
                             i2l1472 0342                               i2l1456 02EC  
                             i2l1448 02CA                               i2l1384 0184  
                             i2l1376 0162                               i2l1474 0346  
                             i2l1466 0324                               i2l1394 01BC  
                             i2l1378 0166                               i2l1490 0602  
                             i2l1484 037E                               i2l1468 0328  
                             i2l1396 01C0                               i2l1388 019E  
                             i2l1478 0360                               i2l1494 0616  
                     __CFG_WDTEN$OFF 000000                               _RCREG1 000FAE  
                             _OSCCON 000FD3                               _PLLRDY 007E97  
                             _SPBRG1 000FAF                               _TX1STA 000FAC  
                             _TXREG1 000FAD                               _Buffer 0060  
                     __CFG_XINST$OFF 000000                          ?_AppTimer1s 003D  
                        ?_AppProcess 003D                       __CFG_STVREN$ON 000000  
                   ?_TMR0_Initialize 003D                               clear_0 0506  
                             clear_1 0514                               clear_2 0528  
                             clear_3 053C                               clear_4 054E  
                             clear_5 055A                  __end_of_SendBuffCh0 0384  
                             _zero_0 0690                __size_of_AppTimer10ms 0002  
              __size_of_AppTimer30us 008A                         __pdataCOMRAM 0053  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                __end_of_TMR0_CallBack 076A  
                    ??_EUSART1_Write 003D        __size_of_INTERRUPT_Initialize 000A  
                  _SYSTEM_Initialize 06E2                           __accesstop 0060  
            __end_of__initialization 0560                   ?_SYSTEM_Initialize 003D  
                      ___rparam_used 000001                       __pcstackCOMRAM 003D  
                       _AppTimer10ms 0776                         _AppTimer30us 056A  
                ??_SYSTEM_Initialize 0000                            ?_TMR0_ISR 003D  
             ??_EUSART1_Transmit_ISR 003D          __end_of_EUSART1_Receive_ISR 06E2  
                   ?_TMR0_StartTimer 003D                  __size_of_AppTimer1s 0002  
          __end_of_SYSTEM_Initialize 06F8                  __size_of_AppProcess 0002  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                         __pbssBANK2 0200                           __pbssBANK3 0300  
                         __pbssBANK4 0400               AppTimer30us@count100ms 0055  
                 __CFG_CCP2MX$PORTC1 000000                          _SendBuffCh0 00B0  
                         ??_TMR0_ISR 0043                   __CFG_CCP3MX$PORTB5 000000  
                            ?_zero_0 003D             __end_of_AppINT_USART1_RX 04E0  
                            _OSCCON2 000FD2                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                              i2u76_40 0578  
                            i2u77_40 059A                              i2u78_40 05BC  
                            i2u79_40 05DE               __size_of_AppInitialize 0006  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000      EUSART1_Receive_ISR@byteReceived 0044  
                            _ch0_len 001F                         ?_AppTimer1ms 003D  
                            _channel 0023                              __pcinit 04E0  
                            __ramtop 0600                              __ptext0 070E  
                            __ptext1 06E2                              __ptext2 06F8  
                            __ptext3 076A                              __ptext4 063A  
                            __ptext5 0720                              __ptext6 0742  
                            __ptext7 06AE                              __ptext8 0772  
                            __ptext9 075E                            _T0CONbits 000FD5  
                    __size_of_zero_0 001E                _OSCILLATOR_Initialize 0720  
                 _EUSART1_Initialize 06AE             ??_PIN_MANAGER_Initialize 0000  
             __size_of_AppTimer100ms 0002           __size_of_SYSTEM_Initialize 0016  
               end_of_initialization 0560                  ?_EUSART1_Initialize 003D  
                       ??_AppTimer1s 003D                         ??_AppProcess 0000  
                            postdec1 000FE5                              postinc0 000FEE  
                            postinc2 000FDE                 ??_EUSART1_Initialize 0000  
                      _AppInitialize 075E                  EUSART1_Write@txData 003D  
                 __end_of_AppTimer1s 0776                   __end_of_AppProcess 0774  
               _timer0ReloadVal16bit 0037                        _AppTimer100ms 0778  
       __end_of_INTERRUPT_Initialize 074C                        __pidataCOMRAM 074C  
                  __size_of_TMR0_ISR 0010               ?_OSCILLATOR_Initialize 003D  
                     ?_AppInitialize 003D                       __end_of_zero_0 06AE  
                start_initialization 04E0             __size_of_TMR0_Initialize 0016  
    __size_of_PIN_MANAGER_Initialize 0032                __end_of_EUSART1_Write 075E  
                     ?_AppTimer100ms 003D                         ?_SendBuffCh0 003D  
             __size_of_TMR0_CallBack 0006                 __size_of_AppTimer1ms 0046  
                           ??_zero_0 003D           AppINT_USART1_RX@capturando 0039  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 0004  
                      __pcstackBANK0 0000                    ?_AppINT_USART1_RX 003D  
                 ??_AppINT_USART1_RX 003E              AppTimer30us@count1000ms 0053  
       __size_of_EUSART1_Receive_ISR 0018               AppINT_USART1_RX@rxData 0043  
           __size_of_TMR0_StartTimer 0004               _PIN_MANAGER_Initialize 063A  
                          __pintcode 0008                      ??_AppInitialize 0000  
       ??_INTERRUPT_InterruptManager 0045                     __CFG_PRICLKEN$ON 000000  
                           _BAUD1CON 000FB8                        _TMR0_CallBack 0764  
               _INTERRUPT_Initialize 0742                    ??_TMR0_Initialize 0000  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
                    ??_AppTimer100ms 003D  __size_of_INTERRUPT_InterruptManager 00A4  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _TMR0_ISR 0732  
                     ?_TMR0_CallBack 003D                             _IdxFrame 003B  
                        _INTCON2bits 000FF1                            copy_data0 04F4  
              ?_INTERRUPT_Initialize 003D                             __Hrparam 0000  
                           __Lrparam 0000                        ?_AppTimer10ms 003D  
                 __CFG_BOREN$SBORDIS 000000                        ?_AppTimer30us 003D  
                  __CFG_P2BMX$PORTB5 000000              ??_OSCILLATOR_Initialize 0000  
                  ??_TMR0_StartTimer 0000                 __size_of_SendBuffCh0 02D4  
        __size_of_EUSART1_Initialize 001C                             __ptext11 0732  
                           __ptext20 0778                             __ptext12 0764  
                           __ptext21 076E                             __ptext13 056A  
                           __ptext22 06CA                             __ptext14 0774  
                           __ptext23 0384                             __ptext15 05F4  
                           __ptext24 0756                             __ptext16 00B0  
                           __ptext17 0690                             __ptext18 066C  
                           __ptext19 0776                         _ShootLedsCh0 0035  
                       _ShootLedsCh1 0033                         _ShootLedsCh2 0031  
                       _ShootLedsCh3 002F                         _ShootLedsCh4 002D  
                       _ShootLedsCh5 002B                         _ShootLedsCh6 0029  
                      __size_of_main 0012                        __size_of_um_0 0024  
                           _send_ch0 003A                       ??_AppTimer10ms 003D  
                     ??_AppTimer30us 0043                           _RC1STAbits 000FAB  
                           int$flags 005C   __end_of_INTERRUPT_InterruptManager 00AC  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 06CA  
                         _INTCONbits 000FF2                      ??_TMR0_CallBack 0043  
             ??_INTERRUPT_Initialize 0000                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 003D              ?_PIN_MANAGER_Initialize 003D  
       __end_of_EUSART1_Transmit_ISR 0772            __size_of_AppINT_USART1_RX 015C  
                      ??_AppTimer1ms 0040          AppINT_USART1_RX@len_package 001D  
             __size_of_EUSART1_Write 0008                      _TMR0_Initialize 06F8  
                  __CFG_T3CMX$PORTC0 000000                ??_EUSART1_Receive_ISR 0044  
     __end_of_PIN_MANAGER_Initialize 066C                    __CFG_FOSC$INTIO67 000000  
